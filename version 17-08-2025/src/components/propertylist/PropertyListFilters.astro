---
// components/propertylist/PropertyListFilters.astro
export interface Props {
  activeFilters?: {
    tipo?: string;
    ubicacion?: string;
    precio?: string;
    habitaciones?: string;
    banos?: string;
    parqueos?: string;
    operacion?: string;
    sector?: string;
  };
  availableFilters?: {
    tipos: string[];
    ubicaciones: string[];
    precios: string[];
  };
  showClearAll?: boolean;
}

const { activeFilters = {}, availableFilters, showClearAll = true } = Astro.props;

// Contar filtros activos
const activeFilterCount = Object.values(activeFilters).filter(Boolean).length;

// Mapeo de labels para mostrar nombres más legibles
const filterLabels = {
  'comprar': 'Comprar',
  'alquilar': 'Alquilar',
  'apartamento': 'Apartamento',
  'villa': 'Villa',
  'casa': 'Casa',
  'penthouse': 'Penthouse',
  'terreno': 'Terreno',
  'local-comercial': 'Local Comercial',
  'distrito-nacional': 'Distrito Nacional',
  'santiago': 'Santiago',
  'punta-cana': 'Punta Cana',
  'puerto-plata': 'Puerto Plata',
  'la-romana': 'La Romana',
  'san-pedro': 'San Pedro de Macorís',
  'piantini': 'Piantini',
  'bella-vista': 'Bella Vista',
  'evaristo-morales': 'Evaristo Morales',
  'naco': 'Naco',
  'bavaro': 'Bávaro',
  'cap-cana': 'Cap Cana'
};

function getFilterLabel(value: string): string {
  return filterLabels[value] || value.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase());
}
---

{/* Solo mostrar si hay filtros activos */}
{activeFilterCount > 0 && (
  <section class="bg-white border-b border-gray-200 py-4">
    <div class="container mx-auto px-4">
      <div class="flex flex-wrap items-center gap-3">
        <span class="text-sm font-medium text-gray-700">Filtros activos:</span>
        
        {/* Filtros individuales */}
        {activeFilters.operacion && (
          <div class="inline-flex items-center gap-2 bg-[#f04e00]/10 text-[#f04e00] px-3 py-1 rounded-full text-sm">
            <span>{getFilterLabel(activeFilters.operacion)}</span>
            <button 
              class="hover:bg-[#f04e00]/20 rounded-full p-0.5 transition-colors"
              onclick="removeFilter('operacion')"
              aria-label="Remover filtro de operación"
            >
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        )}
        
        {activeFilters.tipo && (
          <div class="inline-flex items-center gap-2 bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm">
            <span>{getFilterLabel(activeFilters.tipo)}</span>
            <button 
              class="hover:bg-blue-200 rounded-full p-0.5 transition-colors"
              onclick="removeFilter('tipo')"
              aria-label="Remover filtro de tipo"
            >
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        )}
        
        {activeFilters.ubicacion && (
          <div class="inline-flex items-center gap-2 bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm">
            <span>{getFilterLabel(activeFilters.ubicacion)}</span>
            <button 
              class="hover:bg-green-200 rounded-full p-0.5 transition-colors"
              onclick="removeFilter('ubicacion')"
              aria-label="Remover filtro de ubicación"
            >
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        )}
        
        {activeFilters.sector && (
          <div class="inline-flex items-center gap-2 bg-teal-100 text-teal-800 px-3 py-1 rounded-full text-sm">
            <span>{getFilterLabel(activeFilters.sector)}</span>
            <button 
              class="hover:bg-teal-200 rounded-full p-0.5 transition-colors"
              onclick="removeFilter('sector')"
              aria-label="Remover filtro de sector"
            >
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        )}
        
        {activeFilters.precio && (
          <div class="inline-flex items-center gap-2 bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm">
            <span class="flex items-center gap-1">
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
              </svg>
              Precio
            </span>
            <button 
              class="hover:bg-purple-200 rounded-full p-0.5 transition-colors"
              onclick="removeFilter('precio')"
              aria-label="Remover filtro de precio"
            >
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        )}
        
        {activeFilters.habitaciones && (
          <div class="inline-flex items-center gap-2 bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-sm">
            <span class="flex items-center gap-1">
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
              </svg>
              {activeFilters.habitaciones} hab
            </span>
            <button 
              class="hover:bg-yellow-200 rounded-full p-0.5 transition-colors"
              onclick="removeFilter('habitaciones')"
              aria-label="Remover filtro de habitaciones"
            >
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        )}
        
        {activeFilters.banos && (
          <div class="inline-flex items-center gap-2 bg-indigo-100 text-indigo-800 px-3 py-1 rounded-full text-sm">
            <span class="flex items-center gap-1">
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7h12m0 0a2 2 0 012 2v10a2 2 0 01-2 2H8a2 2 0 01-2-2V9a2 2 0 012-2m12 0V5a2 2 0 00-2-2M8 7V5a2 2 0 012-2"></path>
              </svg>
              {activeFilters.banos} baños
            </span>
            <button 
              class="hover:bg-indigo-200 rounded-full p-0.5 transition-colors"
              onclick="removeFilter('banos')"
              aria-label="Remover filtro de baños"
            >
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        )}
        
        {activeFilters.parqueos && (
          <div class="inline-flex items-center gap-2 bg-pink-100 text-pink-800 px-3 py-1 rounded-full text-sm">
            <span class="flex items-center gap-1">
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
              </svg>
              {activeFilters.parqueos} parqueos
            </span>
            <button 
              class="hover:bg-pink-200 rounded-full p-0.5 transition-colors"
              onclick="removeFilter('parqueos')"
              aria-label="Remover filtro de parqueos"
            >
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        )}
        
        {/* Botón para limpiar todos los filtros */}
        {showClearAll && activeFilterCount > 1 && (
          <button 
            class="inline-flex items-center gap-2 text-gray-600 hover:text-gray-800 px-3 py-1 border border-gray-300 rounded-full text-sm hover:bg-gray-50 transition-colors ml-2"
            onclick="clearAllFilters()"
            aria-label="Limpiar todos los filtros"
          >
            <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
            </svg>
            Limpiar todos ({activeFilterCount})
          </button>
        )}
        
        {/* Indicador de resultados filtrados */}
        <div class="ml-auto text-xs text-gray-500 hidden md:block">
          <span class="inline-flex items-center gap-1">
            <svg class="w-3 h-3 text-[#f04e00]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.207A1 1 0 013 6.5V4z"></path>
            </svg>
            Resultados filtrados
          </span>
        </div>
      </div>
    </div>
  </section>
)}

<script>
  // Función para remover filtro individual
  window.removeFilter = function(filterType) {
    const currentUrl = new URL(window.location.href);
    const pathSegments = currentUrl.pathname.split('/').filter(Boolean);
    
    console.log('🗑️ Removiendo filtro:', filterType, 'de URL:', pathSegments);
    
    // Lógica para remover segmento específico según tipo de filtro
    const updatedSegments = pathSegments.filter(segment => {
      switch(filterType) {
        case 'tipo':
          return !['apartamento', 'villa', 'casa', 'penthouse', 'terreno', 'local-comercial'].includes(segment);
        
        case 'ubicacion':
          return !['distrito-nacional', 'santiago', 'punta-cana', 'puerto-plata', 'la-romana', 'san-pedro'].includes(segment);
        
        case 'sector':
          return !['piantini', 'bella-vista', 'evaristo-morales', 'naco', 'gazcue', 'zona-universitaria', 
                  'cerros-de-gurabo', 'jardines-metropolitanos', 'bella-vista-santiago', 'los-jardines',
                  'bavaro', 'cap-cana', 'uvero-alto', 'cortecito'].includes(segment);
        
        case 'operacion':
          return !['comprar', 'alquilar'].includes(segment);
        
        case 'habitaciones':
          return !segment.includes('-habitaciones');
        
        case 'banos':
          return !segment.includes('-banos');
        
        case 'parqueos':
          return !segment.includes('-parqueos');
        
        case 'precio':
          return !segment.includes('precio-desde-');
        
        default:
          return true;
      }
    });
    
    const newPath = '/' + updatedSegments.join('/');
    console.log('🔄 Navegando a:', newPath);
    
    // Agregar una pequeña animación antes de navegar
    const filterElement = event?.target?.closest('.inline-flex');
    if (filterElement) {
      filterElement.style.transform = 'scale(0.9)';
      filterElement.style.opacity = '0.5';
      setTimeout(() => {
        window.location.href = newPath;
      }, 150);
    } else {
      window.location.href = newPath;
    }
  };
  
  // Función para limpiar todos los filtros
  window.clearAllFilters = function() {
    console.log('🧹 Limpiando todos los filtros');
    
    const currentUrl = new URL(window.location.href);
    const pathSegments = currentUrl.pathname.split('/').filter(Boolean);
    
    // Mantener solo la operación (comprar/alquilar) si existe
    const operation = pathSegments.find(seg => ['comprar', 'alquilar'].includes(seg)) || 'comprar';
    
    // Agregar animación a todos los filtros
    const filterElements = document.querySelectorAll('.inline-flex[onclick*="removeFilter"]');
    filterElements.forEach((element, index) => {
      setTimeout(() => {
        element.style.transform = 'scale(0.8)';
        element.style.opacity = '0.3';
      }, index * 50);
    });
    
    // Navegar después de la animación
    setTimeout(() => {
      window.location.href = '/' + operation;
    }, filterElements.length * 50 + 200);
  };

  // Función para añadir efectos hover mejorados
  document.addEventListener('DOMContentLoaded', function() {
    // Agregar efectos de hover suaves a los botones de remover
    const removeButtons = document.querySelectorAll('[onclick*="removeFilter"]');
    removeButtons.forEach(button => {
      button.addEventListener('mouseenter', function() {
        this.style.transform = 'scale(1.1)';
      });
      
      button.addEventListener('mouseleave', function() {
        this.style.transform = 'scale(1)';
      });
    });
  });
</script>

<style>
  /* Transiciones suaves para los filtros */
  .inline-flex {
    transition: all 0.2s ease-in-out;
  }
  
  .inline-flex:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  /* Animación de entrada para los filtros */
  @keyframes filterSlideIn {
    from {
      opacity: 0;
      transform: translateX(-10px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateX(0) scale(1);
    }
  }
  
  .inline-flex {
    animation: filterSlideIn 0.3s ease-out;
  }
  
  /* Estilos específicos para cada tipo de filtro */
  .inline-flex button {
    transition: all 0.15s ease-in-out;
  }
  
  .inline-flex button:hover {
    transform: scale(1.2);
  }
  
  .inline-flex button:active {
    transform: scale(0.9);
  }
</style>