---
export interface Props {
  videos?: Array<{
    id: string;
    title: string;
    description?: string;
    thumbnail?: string | null;
    duration: string;
    views?: string | number;
    category: 'decoracion' | 'casa-famosos' | 'proyectos' | 'recorridos' | 'entrevistas' | 'tips';
    videoId: string;
    videoSlug: string;
    featured?: boolean;
    // ‚úÖ Campos para ordenamiento
    total_weight?: number;
    content_priority?: string;
    sort_order?: number;
  }>;
  title?: string;
  subtitle?: string;
  layout?: 'grid' | 'carousel' | 'featured';
  propertyRelated?: boolean;
}

const { 
  videos: rawVideos = [], 
  title = "Contenido Exclusivo CLIC", 
  subtitle = "Descubre m√°s contenido exclusivo sobre bienes ra√≠ces",
  layout = 'grid',
  propertyRelated = false
} = Astro.props;

if (!rawVideos || rawVideos.length === 0) return null;

// ‚úÖ ORDENAR VIDEOS POR RELEVANCIA Y LIMITAR A 8
const sortedVideos = rawVideos
  .sort((a, b) => {
    // 1. Prioridad: featured videos primero (solo si realmente est√°n marcados)
    if (a.featured && !b.featured) return -1;
    if (!a.featured && b.featured) return 1;
    
    // 2. Content priority: tag_related > high > medium > default
    const priorityOrder = { 'tag_related': 4, 'high': 3, 'medium': 2, 'default': 1 };
    const priorityA = priorityOrder[a.content_priority] || 1;
    const priorityB = priorityOrder[b.content_priority] || 1;
    
    if (priorityA !== priorityB) {
      return priorityB - priorityA; // Mayor prioridad primero
    }
    
    // 3. Total weight (mayor peso primero)
    const weightA = a.total_weight || 0;
    const weightB = b.total_weight || 0;
    
    if (weightA !== weightB) {
      return weightB - weightA;
    }
    
    // 4. Sort order (menor sort_order primero)
    const sortA = a.sort_order || 0;
    const sortB = b.sort_order || 0;
    
    return sortA - sortB;
  })
  .slice(0, 8); // ‚úÖ M√ÅXIMO 8 VIDEOS

console.log(`üì∫ [VideoGallery] Mostrando ${sortedVideos.length} videos ordenados:`, 
  sortedVideos.map((v, i) => `${i+1}. "${v.title.substring(0, 40)}..." (peso: ${v.total_weight || 0}, featured: ${v.featured || false}, prioridad: ${v.content_priority || 'default'})`));

// Mapeo de categor√≠as a etiquetas visuales y URLs
const categoryLabels = {
  'decoracion': { label: 'Decoraci√≥n', color: 'bg-purple-500', slug: 'tips-de-decoracion' },
  'casa-famosos': { label: 'Casa de Famosos', color: 'bg-red-500', slug: 'la-casa-de-los-famosos' },
  'proyectos': { label: 'Proyectos', color: 'bg-blue-500', slug: 'proyectos-nuevos' },
  'recorridos': { label: 'Recorridos', color: 'bg-green-500', slug: 'recorridos-de-propiedades' },
  'entrevistas': { label: 'Entrevistas', color: 'bg-yellow-500', slug: 'entrevistas-exclusivas' },
  'tips': { label: 'Tips', color: 'bg-pink-500', slug: 'tips-de-inversion' }
};

// Funci√≥n helper para obtener la categor√≠a con fallback
function getCategoryInfo(category: string) {
  return categoryLabels[category] || { label: 'Video', color: 'bg-gray-500', slug: 'videos' };
}

// ‚úÖ FUNCI√ìN CORREGIDA: usar videoSlug en lugar de videoId, con validaci√≥n
function getVideoUrl(video: any) {
  // ‚úÖ Solo crear URL si hay un slug v√°lido
  if (!video.videoSlug) {
    console.warn(`‚ö†Ô∏è Video sin slug v√°lido: "${video.title}" - ID: ${video.id}`);
    return null; // No crear URL si no hay slug
  }
  
  const categoryInfo = getCategoryInfo(video.category);
  return `/videos/${categoryInfo.slug}/${video.videoSlug}`;
}

// ‚úÖ FUNCI√ìN MEJORADA: formatear views de manera elegante
function formatViews(views: string | number) {
  if (!views) return null;
  
  const num = typeof views === 'string' ? parseInt(views.replace(/[^\d]/g, '')) : views;
  
  if (isNaN(num)) return views;
  
  if (num >= 1000000) {
    return `${(num / 1000000).toFixed(1)}M vistas`;
  } else if (num >= 1000) {
    return `${(num / 1000).toFixed(1)}K vistas`;
  } else {
    return `${num} vistas`;
  }
}

// ‚úÖ SOLO USAR VIDEOS REALMENTE MARCADOS COMO FEATURED
const featuredVideo = sortedVideos.find(v => v.featured === true);
const regularVideos = featuredVideo ? 
  sortedVideos.filter(v => v.featured !== true) : 
  sortedVideos;
---

<section class="py-16 bg-gradient-to-b from-white to-gray-50">
  <div class="container mx-auto px-4">
    {/* ‚úÖ HEADER MEJORADO - T√çTULO DIN√ÅMICO */}
    <div class="flex items-center justify-between mb-10">
      <div>
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-2">
          {propertyRelated ? 'Videos Exclusivos de la Zona' : title}
        </h2>
        {subtitle && (
          <p class="text-lg text-gray-600">
            {propertyRelated ? 'Conoce m√°s sobre el √°rea y el mercado inmobiliario' : subtitle}
          </p>
        )}
        
        {/* ‚úÖ STATS DESTACADOS MEJORADOS */}
        <div class="flex items-center gap-2 mt-3">
          <div class="flex items-center gap-1">
            <svg class="w-6 h-6 text-red-600" fill="currentColor" viewBox="0 0 24 24">
              <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
            </svg>
            <span class="text-sm font-medium text-gray-700">200K+ Suscriptores</span>
          </div>
          <span class="text-gray-400">‚Ä¢</span>
          <span class="text-sm text-gray-600">üè† Canal inmobiliario #1 de RD</span>
          <span class="text-gray-400">‚Ä¢</span>
          <span class="text-sm font-medium text-red-600">üåü Casa de Famosos</span>
        </div>
      </div>
      <a 
        href="/videos" 
        class="hidden md:flex items-center gap-2 px-4 py-2 bg-[#f04e00] text-white rounded-lg hover:bg-[#d94400] transition-colors"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
        </svg>
        Ver todos los videos
      </a>
    </div>

    {/* Layout Featured + Grid - SOLO SI HAY VIDEO REALMENTE FEATURED */}
    {featuredVideo && layout === 'featured' ? (
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
        {/* Video destacado grande - MEJORADO */}
        <div class="lg:col-span-1">
          {getVideoUrl(featuredVideo) ? (
            <a 
              href={getVideoUrl(featuredVideo)}
              class="group block relative"
            >
              <div class="relative aspect-video overflow-hidden rounded-xl shadow-lg">
                {featuredVideo.thumbnail ? (
                  <img 
                    src={featuredVideo.thumbnail} 
                    alt={featuredVideo.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
                  />
                ) : (
                  <div class="w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                    <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                    </svg>
                  </div>
                )}
                
                <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent"></div>
                
                <div class="absolute inset-0 flex items-center justify-center">
                  <div class="w-20 h-20 bg-red-600 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform shadow-2xl">
                    <svg class="w-10 h-10 text-white ml-1" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M8 5v14l11-7z"/>
                    </svg>
                  </div>
                </div>
                
                <div class="absolute top-4 left-4 flex gap-2">
                  <span class="bg-[#f04e00] text-white px-3 py-1 rounded-full text-xs font-medium shadow-lg">
                    Destacado
                  </span>
                  <span class={`px-3 py-1 ${getCategoryInfo(featuredVideo.category).color} text-white text-xs font-medium rounded-full shadow-lg`}>
                    {getCategoryInfo(featuredVideo.category).label}
                  </span>
                </div>
                
                <div class="absolute bottom-4 left-4 right-4 flex items-center justify-between">
                  <div class="flex items-center gap-3">
                    {formatViews(featuredVideo.views) && (
                      <div class="flex items-center gap-1 bg-black/70 text-white text-sm px-3 py-1 rounded-full">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                        </svg>
                        <span>{formatViews(featuredVideo.views)}</span>
                      </div>
                    )}
                  </div>
                  
                  <div class="flex items-center gap-1 bg-black/70 text-white text-sm px-3 py-1 rounded-full">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <span>{featuredVideo.duration}</span>
                  </div>
                </div>
              </div>
              
              <div class="mt-4 space-y-3">
                <h3 class="text-xl font-bold text-gray-900 group-hover:text-[#f04e00] transition-colors leading-tight">
                  {featuredVideo.title}
                </h3>
                {featuredVideo.description && (
                  <p class="text-gray-600 leading-relaxed line-clamp-2">{featuredVideo.description}</p>
                )}
                
                <div class="flex items-center gap-2 text-[#f04e00] font-medium pt-2">
                  <span>Ver video completo</span>
                  <svg class="w-4 h-4 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </div>
              </div>
            </a>
          ) : (
            <div class="group relative opacity-75">
              <div class="relative aspect-video overflow-hidden rounded-xl shadow-lg">
                {featuredVideo.thumbnail ? (
                  <img 
                    src={featuredVideo.thumbnail} 
                    alt={featuredVideo.title}
                    class="w-full h-full object-cover"
                  />
                ) : (
                  <div class="w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                    <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                    </svg>
                  </div>
                )}
                
                <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent"></div>
                
                <div class="absolute inset-0 flex items-center justify-center">
                  <div class="w-20 h-20 bg-gray-600 rounded-full flex items-center justify-center">
                    <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                    </svg>
                  </div>
                </div>
                
                <span class="absolute top-4 left-4 bg-gray-600 text-white px-3 py-1 rounded-full text-xs font-medium">
                  Pr√≥ximamente
                </span>
              </div>
              
              <div class="mt-4 space-y-3">
                <h3 class="text-xl font-bold text-gray-600 leading-tight">
                  {featuredVideo.title}
                </h3>
                {featuredVideo.description && (
                  <p class="text-gray-500 leading-relaxed line-clamp-2">{featuredVideo.description}</p>
                )}
              </div>
            </div>
          )}
        </div>
        
        {/* Videos regulares en grid */}
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
          {regularVideos.slice(0, 4).map((video) => {
            const videoUrl = getVideoUrl(video);
            return videoUrl ? (
              <a 
                href={videoUrl}
                class="group block"
              >
                <div class="relative aspect-video overflow-hidden rounded-lg shadow-md">
                  {video.thumbnail ? (
                    <img 
                      src={video.thumbnail} 
                      alt={video.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                    />
                  ) : (
                    <div class="w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                      <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                      </svg>
                    </div>
                  )}
                  
                  <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-90"></div>
                  
                  <div class="absolute inset-0 flex items-center justify-center">
                    <div class="w-12 h-12 bg-white/90 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity">
                      <svg class="w-6 h-6 text-red-600 ml-1" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M8 5v14l11-7z"/>
                      </svg>
                    </div>
                  </div>
                  
                  <span class={`absolute top-2 left-2 px-2 py-1 ${getCategoryInfo(video.category).color} text-white text-xs font-medium rounded shadow-lg`}>
                    {getCategoryInfo(video.category).label}
                  </span>
                  
                  <div class="absolute bottom-2 left-2 right-2 flex items-center justify-between">
                    {formatViews(video.views) && (
                      <div class="flex items-center gap-1 bg-black/70 text-white text-xs px-2 py-1 rounded-full">
                        <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                        </svg>
                        <span>{formatViews(video.views)}</span>
                      </div>
                    )}
                    
                    <div class="flex items-center gap-1 bg-black/70 text-white text-xs px-2 py-1 rounded-full">
                      <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                      </svg>
                      <span>{video.duration}</span>
                    </div>
                  </div>
                </div>
                
                <div class="mt-3">
                  <h4 class="text-sm font-medium text-gray-900 group-hover:text-[#f04e00] transition-colors line-clamp-2 leading-tight">
                    {video.title}
                  </h4>
                </div>
              </a>
            ) : (
              <div class="group block opacity-75">
                <div class="relative aspect-video overflow-hidden rounded-lg shadow-md">
                  {video.thumbnail ? (
                    <img 
                      src={video.thumbnail} 
                      alt={video.title}
                      class="w-full h-full object-cover"
                    />
                  ) : (
                    <div class="w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                      <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                      </svg>
                    </div>
                  )}
                  
                  <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-90"></div>
                  
                  <span class="absolute top-2 left-2 bg-gray-600 text-white px-2 py-1 text-xs font-medium rounded">
                    Pr√≥ximamente
                  </span>
                  
                  <div class="absolute bottom-2 right-2">
                    <div class="flex items-center gap-1 bg-black/70 text-white text-xs px-2 py-1 rounded-full">
                      <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                      </svg>
                      <span>{video.duration}</span>
                    </div>
                  </div>
                </div>
                
                <div class="mt-3">
                  <h4 class="text-sm font-medium text-gray-600 line-clamp-2 leading-tight">
                    {video.title}
                  </h4>
                </div>
              </div>
            );
          })}
        </div>
      </div>
    ) : (
      /* Grid normal - MEJORADO */
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        {sortedVideos.map((video) => {
          const videoUrl = getVideoUrl(video);
          return videoUrl ? (
            <a 
              href={videoUrl}
              class="group block"
            >
              <div class="relative aspect-video overflow-hidden rounded-lg shadow-md group-hover:shadow-xl transition-shadow">
                {video.thumbnail ? (
                  <img 
                    src={video.thumbnail} 
                    alt={video.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                  />
                ) : (
                  <div class="w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                    <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                    </svg>
                  </div>
                )}
                
                <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity"></div>
                
                <div class="absolute inset-0 flex items-center justify-center">
                  <div class="w-14 h-14 bg-white/90 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all transform scale-75 group-hover:scale-100">
                    <svg class="w-7 h-7 text-red-600 ml-1" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M8 5v14l11-7z"/>
                    </svg>
                  </div>
                </div>
                
                <span class={`absolute top-3 left-3 px-2 py-1 ${getCategoryInfo(video.category).color} text-white text-xs font-medium rounded`}>
                  {getCategoryInfo(video.category).label}
                </span>
                
                {video.featured === true && (
                  <span class="absolute top-3 right-3 bg-[#f04e00] text-white px-2 py-1 rounded text-xs font-medium">
                    Destacado
                  </span>
                )}
                
                <div class="absolute bottom-3 left-3 right-3 flex items-center justify-between">
                  {formatViews(video.views) && (
                    <div class="flex items-center gap-1 bg-black/70 text-white text-xs px-2 py-1 rounded-full">
                      <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                      </svg>
                      <span>{formatViews(video.views)}</span>
                    </div>
                  )}
                  
                  <div class="flex items-center gap-1 bg-black/70 text-white text-xs px-2 py-1 rounded-full">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <span>{video.duration}</span>
                  </div>
                </div>
              </div>
              
              <div class="mt-3 space-y-1">
                <h3 class="font-semibold text-gray-900 group-hover:text-[#f04e00] transition-colors line-clamp-2 leading-tight">
                  {video.title}
                </h3>
                {video.description && (
                  <p class="text-sm text-gray-600 line-clamp-2 leading-relaxed">{video.description}</p>
                )}
              </div>
            </a>
          ) : (
            <div class="group block opacity-75">
              <div class="relative aspect-video overflow-hidden rounded-lg shadow-md">
                {video.thumbnail ? (
                  <img 
                    src={video.thumbnail} 
                    alt={video.title}
                    class="w-full h-full object-cover"
                  />
                ) : (
                  <div class="w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                    <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                    </svg>
                  </div>
                )}
                
                <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent"></div>
                
                <span class="absolute top-3 left-3 bg-gray-600 text-white px-2 py-1 text-xs font-medium rounded">
                  Pr√≥ximamente
                </span>
                
                <div class="absolute bottom-3 right-3">
                  <div class="flex items-center gap-1 bg-black/70 text-white text-xs px-2 py-1 rounded-full">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    <span>{video.duration}</span>
                  </div>
                </div>
              </div>
              
              <div class="mt-3 space-y-1">
                <h3 class="font-semibold text-gray-600 line-clamp-2 leading-tight">
                  {video.title}
                </h3>
                {video.description && (
                  <p class="text-sm text-gray-500 line-clamp-2 leading-relaxed">{video.description}</p>
                )}
              </div>
            </div>
          );
        })}
      </div>
    )}

    {/* Call to action mejorado */}
    <div class="text-center mt-10">
      <a 
        href="/videos" 
        class="inline-flex items-center gap-2 text-[#f04e00] hover:text-[#d94400] font-medium transition-colors"
      >
        Explorar todas las categor√≠as de videos
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
  </div>
</section>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>