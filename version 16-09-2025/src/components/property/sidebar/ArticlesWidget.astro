---
// src/components/property/sidebar/ArticlesWidget.astro
export interface Props {
 data: any;
}

const { data } = Astro.props;

// Función para limpiar texto de artículos
function cleanArticleText(text) {
 if (!text) return '';
 
 return text
   .replace(/\*\*(.*?)\*\*/g, '$1')  // Remover **texto**
   .replace(/<b>(.*?)<\/b>/gi, '$1') // Remover <b>texto</b>
   .replace(/<strong>(.*?)<\/strong>/gi, '$1') // Remover <strong>texto</strong>
   .replace(/<i>(.*?)<\/i>/gi, '$1') // Remover <i>texto</i>
   .replace(/<em>(.*?)<\/em>/gi, '$1') // Remover <em>texto</em>
   .replace(/<br\s*\/?>/gi, ' ') // Remover <br>
   .replace(/<p>(.*?)<\/p>/gi, '$1 ') // Remover <p>texto</p>
   .replace(/<[^>]*>/g, '') // Remover cualquier otra etiqueta HTML
   .replace(/&nbsp;/g, ' ') // Remover &nbsp;
   .replace(/&amp;/g, '&') // Decodificar &amp;
   .replace(/&lt;/g, '<') // Decodificar &lt;
   .replace(/&gt;/g, '>') // Decodificar &gt;
   .replace(/&quot;/g, '"') // Decodificar &quot;
   .replace(/&#39;/g, "'") // Decodificar &#39;
   .replace(/\s+/g, ' ') // Múltiples espacios a uno
   .trim();
}

// Función para formatear fecha
function formatDate(dateString) {
 if (!dateString) return '';
 
 try {
   const date = new Date(dateString);
   return new Intl.DateTimeFormat('es-DO', {
     day: 'numeric',
     month: 'short',
     year: 'numeric'
   }).format(date);
 } catch {
   return '';
 }
}

// Función para formatear tiempo de lectura
function formatReadingTime(minutes) {
 if (!minutes || minutes <= 0) return '5 min';
 
 if (minutes < 60) {
   return `${Math.round(minutes)} min`;
 } else {
   const hours = Math.floor(minutes / 60);
   const remainingMinutes = minutes % 60;
   return remainingMinutes > 0 ? `${hours}h ${remainingMinutes}m` : `${hours}h`;
 }
}

// Obtener artículos de ambas fuentes
const rawArticles = [
 ...(data.content?.articles || []),
 ...(data.relatedContent?.articles || [])
];

// Limpiar y procesar artículos
const articles = rawArticles.map(article => ({
 ...article,
 title: cleanArticleText(article.title || 'Artículo sin título'),
 excerpt: cleanArticleText(article.excerpt || article.meta_description || ''),
 content: cleanArticleText(article.content || ''),
 meta_title: cleanArticleText(article.meta_title || ''),
 meta_description: cleanArticleText(article.meta_description || ''),
 formatted_date: formatDate(article.published_at || article.created_at),
 reading_time_display: formatReadingTime(article.reading_time)
}));
---

<!-- Articles Widget -->
{articles.length > 0 && (
 <div class="bg-white rounded-lg shadow-md p-6 border border-gray-200">
   <div class="flex items-center gap-2 mb-6">
     <svg class="w-5 h-5 text-[#f04e00]" fill="currentColor" viewBox="0 0 24 24">
       <path d="M4 6h16v2H4zm0 5h16v2H4zm0 5h16v2H4z"/>
     </svg>
     <h3 class="text-lg font-semibold text-gray-900">Artículos Relacionados</h3>
   </div>

   <div class="space-y-3">
     {articles.slice(0, 6).map((article) => {
       // Determinar el texto del extracto
       const excerptText = article.excerpt || 
                          (article.content ? article.content.substring(0, 80) + '...' : '') ||
                          'Descubre más información útil sobre bienes raíces';
       
       // Truncar si es muy largo
       const displayExcerpt = excerptText.length > 80 ? 
                             `${excerptText.substring(0, 80)}...` : 
                             excerptText;

       // Determinar imagen
       const displayImage = article.featured_image || '/images/default-article.jpg';
       
   // ✅ AGREGAR "/" cuando hay slug
const articleUrl = article.slug ? `/${article.slug}` : `/articulos/${article.id}`;
       
       return (
         <article class="group">
           <a 
             href={articleUrl}
             class="block hover:bg-gray-50 rounded-lg p-3 -m-3 transition-all duration-200 border border-transparent hover:border-gray-200"
           >
             <div class="flex gap-3">
               <!-- Imagen del artículo -->
               <div class="flex-shrink-0">
                 <div class="relative w-14 h-14 rounded-lg overflow-hidden bg-gray-100">
                   <img 
                     src={displayImage} 
                     alt={article.title}
                     class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-200"
                     onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                   />
                   <!-- Fallback icon -->
                   <div 
                     class="absolute inset-0 flex items-center justify-center bg-gradient-to-br from-[#f04e00] to-[#e03400] text-white"
                     style={displayImage !== '/images/default-article.jpg' ? 'display: none;' : 'display: flex;'}
                   >
                     <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                       <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                     </svg>
                   </div>
                 </div>
               </div>

               <!-- Contenido del artículo -->
               <div class="flex-1 min-w-0">
                 <h4 class="font-semibold text-gray-900 text-sm leading-tight mb-1 group-hover:text-[#f04e00] transition-colors line-clamp-2">
                   {article.title}
                 </h4>
                 
                 <p class="text-xs text-gray-600 leading-relaxed mb-2 line-clamp-2">
                   {displayExcerpt}
                 </p>

                 <!-- Metadatos simplificados -->
                 <div class="flex items-center justify-between text-xs text-gray-500">
                   <div class="flex items-center gap-2">
                     {article.formatted_date && (
                       <span class="flex items-center gap-1">
                         <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
                           <path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"/>
                         </svg>
                         {article.formatted_date}
                       </span>
                     )}
                     
                     {article.formatted_date && article.reading_time_display && (
                       <span>•</span>
                     )}
                     
                     {article.reading_time_display && (
                       <span class="flex items-center gap-1">
                         <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
                           <path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"/>
                           <path d="M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z"/>
                         </svg>
                         {article.reading_time_display}
                       </span>
                     )}
                   </div>

                   <!-- Click indicator -->
                   <svg class="w-3 h-3 text-gray-400 group-hover:text-[#f04e00] transition-colors flex-shrink-0" fill="currentColor" viewBox="0 0 24 24">
                     <path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"/>
                   </svg>
                 </div>
               </div>
             </div>
           </a>
         </article>
       );
     })}
   </div>

   <!-- Footer simplificado -->
   <div class="mt-6 pt-4 border-t border-gray-200">
     <div class="flex items-center justify-between">
       <div class="flex items-center gap-2 text-sm text-gray-600">
         <svg class="w-4 h-4 text-[#f04e00]" fill="currentColor" viewBox="0 0 24 24">
           <path d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"/>
         </svg>
         <span>
           {articles.length === 1 ? '1 artículo disponible' : `${articles.length} artículos disponibles`}
         </span>
       </div>
       
       <a 
         href="/articulos" 
         class="text-sm text-[#f04e00] hover:text-[#d94400] font-medium transition-colors flex items-center gap-1"
       >
         <span>Ver todos</span>
         <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
           <path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"/>
         </svg>
       </a>
     </div>
   </div>
 </div>
)}

<!-- Fallback: mensaje cuando no hay artículos -->
{articles.length === 0 && (
 <div class="bg-white rounded-lg shadow-md p-6 border border-gray-200">
   <div class="flex items-center gap-2 mb-4">
     <svg class="w-5 h-5 text-gray-600" fill="currentColor" viewBox="0 0 24 24">
       <path d="M4 6h16v2H4zm0 5h16v2H4zm0 5h16v2H4z"/>
     </svg>
     <h3 class="text-lg font-semibold text-gray-900">Artículos</h3>
   </div>
   
   <div class="text-center py-4">
     <svg class="w-12 h-12 text-gray-300 mx-auto mb-3" fill="currentColor" viewBox="0 0 24 24">
       <path d="M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 2 2h16c1.1 0 2-.9 2-2V8l-6-6zm4 18H6V4h7v5h5v11z"/>
     </svg>
     <p class="text-gray-600 text-sm mb-3">No hay artículos disponibles en este momento</p>
     <a 
       href="/articulos" 
       class="inline-flex items-center gap-2 text-[#f04e00] hover:text-[#d94400] font-medium text-sm transition-colors"
     >
       <span>Explorar todos los artículos</span>
       <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
         <path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"/>
       </svg>
     </a>
   </div>
 </div>
)}

<style>
 .line-clamp-2 {
   display: -webkit-box;
   -webkit-line-clamp: 2;
   -webkit-box-orient: vertical;
   overflow: hidden;
 }
</style>