---
// src/components/property/PropertyHero.astro
export interface Props {
  data: any;
}

const { data } = Astro.props;

const property = data.property || {};
const images = data.images || [];

console.log('üè† PropertyHero loaded:', {
  title: property.title,
  imagesCount: images.length,
  isProject: data.isProject,
  mainImage: data.mainImage
});
---

<!-- Hero Gallery Section - Full Screen -->
<div class="relative w-full h-[70vh] min-h-[500px] bg-gray-50">
  <!-- Gallery Grid -->
  <div class="grid grid-cols-4 grid-rows-2 gap-2 h-full p-2">
    <!-- Main Image -->
    <div class="col-span-2 row-span-2 relative overflow-hidden cursor-pointer group rounded-2xl shadow-xl" onclick="openLightbox(0)">
      <img 
        src={images[0] || data.mainImage || '/images/placeholder-property.jpg'}
        alt={property.title}
        class="w-full h-full object-cover transition-all duration-700 ease-out group-hover:scale-105"
        loading="eager"
        onerror="this.src='/images/placeholder-property.jpg'"
      />
      <!-- Degradado m√°s dram√°tico para mejor contraste del texto -->
      <div class="absolute inset-x-0 bottom-0 h-64 bg-gradient-to-t from-black/90 via-black/60 via-black/30 to-transparent pointer-events-none"></div>
      
      <!-- T√≠tulo con mejor contraste y jerarqu√≠a -->
      <div class="absolute bottom-6 left-6 right-6 pointer-events-auto">
        <div class="space-y-3">
          <h1 class="text-2xl md:text-3xl lg:text-4xl font-bold text-white leading-tight tracking-tight drop-shadow-2xl">
            {property.title}
          </h1>
          {property.subtitle && (
            <h2 class="text-base md:text-lg text-white/95 font-light tracking-wide drop-shadow-lg">
              {property.subtitle}
            </h2>
          )}
        </div>
      </div>
    </div>
    
    <!-- Secondary Images -->
    {images.length > 1 && images.slice(1, 5).map((img, index) => (
      <div class="relative overflow-hidden cursor-pointer group rounded-xl shadow-lg hover:shadow-2xl transition-all duration-500" onclick={`openLightbox(${index + 1})`}>
        <img 
          src={img}
          alt={`${property.title} - Vista ${index + 2}`}
          class="w-full h-full object-cover transition-all duration-700 ease-out group-hover:scale-105"
          loading="lazy"
          onerror="this.src='/images/placeholder-property.jpg'"
        />
      </div>
    ))}
    
    <!-- Placeholder images if we don't have enough -->
    {images.length <= 4 && [...Array(Math.max(0, 5 - images.length))].map((_, index) => (
      <div class="relative overflow-hidden bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center rounded-xl">
        <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
        </svg>
      </div>
    ))}
  </div>

  <!-- Overlay Content - Elementos flotantes elegantes -->
  <div class="absolute inset-0 pointer-events-none">
    
    <!-- Referencia y Proyecto - Top Left, en l√≠nea horizontal -->
    <div class="absolute top-6 left-6 pointer-events-auto">
      <div class="flex items-center gap-3">
        <!-- Referencia discreta -->
        <div class="bg-black/40 backdrop-blur-sm px-3 py-1.5 rounded-lg">
          <span class="text-xs font-medium text-white/90 tracking-wide">REF: {property.reference}</span>
        </div>
        
        <!-- Badge de Proyecto -->
        {data.isProject && (
          <div class="bg-gradient-to-r from-[#f04e00] to-[#e03400] text-white px-4 py-1.5 rounded-lg shadow-lg">
            <span class="text-xs font-bold tracking-wide">PROYECTO</span>
          </div>
        )}
      </div>
    </div>

    <!-- Precio - Dise√±o Premium y Minimalista -->
    <div class="absolute top-6 right-6 pointer-events-auto">
      <div class="bg-white shadow-xl rounded-xl overflow-hidden border border-gray-100">
        <div class="px-6 py-5">
          <div class="text-2xl font-bold text-gray-900 leading-tight">
            {property.price}
          </div>
          {data.isProject && property.reservation && (
            <div class="text-sm text-[#f04e00] font-semibold mt-1">
              Reserva con {property.reservation}
            </div>
          )}
        </div>
      </div>
    </div>

    <!-- View Photos Button - Heroicons -->
    <div class="absolute bottom-6 right-6 pointer-events-auto">
      <button 
        onclick="openLightbox(0)"
        class="bg-white/95 backdrop-blur-md text-gray-900 px-6 py-3 rounded-lg font-semibold shadow-xl border border-gray-200/50 flex items-center gap-3 hover:bg-white hover:shadow-2xl transition-all duration-300 hover:-translate-y-0.5"
      >
        <!-- Heroicon: photo -->
        <svg class="w-5 h-5 text-[#f04e00]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z" />
        </svg>
        <span>{images.length > 0 ? images.length : 18} fotos</span>
      </button>
    </div>

  </div>
</div>