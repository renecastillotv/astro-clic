---
export interface Props {
  articles: Array<{
    slug: string;
    url: string;
    title: string;
    excerpt: string;
    featuredImage?: string | null;
    author: {
      name: string;
      avatar?: string;
    };
    publishedAt: string;
    readTime: string;
    category: string;
    views?: string | number;
    featured?: boolean;
    total_weight?: number;
    content_priority?: string;
    sort_order?: number;
  }>;
  title?: string;
  subtitle?: string;
  layout?: 'grid' | 'featured';
  articlesStats?: {
    total_articles: number;
    last_updated?: string;
  };
  language?: 'es' | 'en' | 'fr';
}

const { 
  articles: rawArticles = [], 
  title,
  subtitle,
  layout = 'grid',
  articlesStats,
  language = 'es'
} = Astro.props;

// Traducciones para textos est√°ticos
const translations = {
  es: {
    defaultTitle: "Art√≠culos que te pueden interesar",
    defaultSubtitle: "Gu√≠as, an√°lisis y consejos expertos sobre bienes ra√≠ces",
    selectedArticles: "art√≠culos seleccionados",
    weeklyUpdated: "Contenido actualizado semanalmente",
    viewAllArticles: "Ver todos los art√≠culos",
    featured: "Destacado",
    readFullArticle: "Leer art√≠culo completo",
    readArticle: "Leer art√≠culo",
    readings: "lecturas",
    exploreAllCategories: "Explorar todas las categor√≠as y art√≠culos",
    // Meses para formateo de fecha
    months: ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 
             'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre']
  },
  en: {
    defaultTitle: "Articles that may interest you",
    defaultSubtitle: "Guides, analysis and expert advice on real estate",
    selectedArticles: "selected articles",
    weeklyUpdated: "Content updated weekly",
    viewAllArticles: "View all articles",
    featured: "Featured",
    readFullArticle: "Read full article",
    readArticle: "Read article",
    readings: "views",
    exploreAllCategories: "Explore all categories and articles",
    months: ['January', 'February', 'March', 'April', 'May', 'June',
             'July', 'August', 'September', 'October', 'November', 'December']
  },
  fr: {
    defaultTitle: "Articles qui pourraient vous int√©resser",
    defaultSubtitle: "Guides, analyses et conseils d'experts en immobilier",
    selectedArticles: "articles s√©lectionn√©s",
    weeklyUpdated: "Contenu mis √† jour chaque semaine",
    viewAllArticles: "Voir tous les articles",
    featured: "En vedette",
    readFullArticle: "Lire l'article complet",
    readArticle: "Lire l'article",
    readings: "lectures",
    exploreAllCategories: "Explorer toutes les cat√©gories et articles",
    months: ['janvier', 'f√©vrier', 'mars', 'avril', 'mai', 'juin',
             'juillet', 'ao√ªt', 'septembre', 'octobre', 'novembre', 'd√©cembre']
  }
};

// Obtener las traducciones para el idioma actual
const t = translations[language] || translations.es;

// Usar t√≠tulo y subt√≠tulo proporcionados o los valores por defecto traducidos
const finalTitle = title || t.defaultTitle;
const finalSubtitle = subtitle || t.defaultSubtitle;

if (!rawArticles || rawArticles.length === 0) return null;

// Ordenar art√≠culos por relevancia y limitar a 6
const sortedArticles = rawArticles
  .sort((a, b) => {
    if (a.featured && !b.featured) return -1;
    if (!a.featured && b.featured) return 1;
    
    const priorityOrder = { 'tag_related': 4, 'high': 3, 'medium': 2, 'default': 1 };
    const priorityA = priorityOrder[a.content_priority] || 1;
    const priorityB = priorityOrder[b.content_priority] || 1;
    
    if (priorityA !== priorityB) {
      return priorityB - priorityA;
    }
    
    const weightA = a.total_weight || 0;
    const weightB = b.total_weight || 0;
    
    if (weightA !== weightB) {
      return weightB - weightA;
    }
    
    const sortA = a.sort_order || 0;
    const sortB = b.sort_order || 0;
    
    return sortA - sortB;
  })
  .slice(0, 6);

console.log(`üì∞ [RelatedArticles] Mostrando ${sortedArticles.length} art√≠culos ordenados:`, 
  sortedArticles.map((a, i) => `${i+1}. "${a.title.substring(0, 40)}..." (peso: ${a.total_weight || 0}, featured: ${a.featured || false}, prioridad: ${a.content_priority || 'default'})`));

// Sistema din√°mico de colores para categor√≠as
const availableColors = [
  'bg-blue-500',
  'bg-green-500',
  'bg-purple-500',
  'bg-orange-500',
  'bg-red-500',
  'bg-yellow-500',
  'bg-pink-500',
  'bg-indigo-500',
  'bg-teal-500',
  'bg-cyan-500',
  'bg-emerald-500',
  'bg-rose-500'
];

function getCategoryColorMap(articles: any[]) {
  const uniqueCategories = [...new Set(articles.map(a => a.category))];
  const colorMap = new Map();
  
  uniqueCategories.forEach((category, index) => {
    const colorIndex = index % availableColors.length;
    colorMap.set(category, availableColors[colorIndex]);
  });
  
  return colorMap;
}

const categoryColorMap = getCategoryColorMap(sortedArticles);

function getCategoryColor(category: string) {
  return categoryColorMap.get(category) || 'bg-gray-500';
}

// Formatear fecha seg√∫n el idioma
function formatDate(dateString: string) {
  const date = new Date(dateString);
  
  if (language === 'es') {
    const day = date.getDate();
    const month = t.months[date.getMonth()];
    const year = date.getFullYear();
    return `${day} de ${month}, ${year}`;
  } else if (language === 'en') {
    const month = t.months[date.getMonth()];
    const day = date.getDate();
    const year = date.getFullYear();
    return `${month} ${day}, ${year}`;
  } else { // fr
    const day = date.getDate();
    const month = t.months[date.getMonth()];
    const year = date.getFullYear();
    return `${day} ${month} ${year}`;
  }
}

function getArticleUrl(article: any) {
  if (!article.url || article.url.trim() === '') {
    console.warn(`‚ö†Ô∏è Art√≠culo sin URL v√°lida: "${article.title}" - slug: ${article.slug}`);
    return article.slug || '#';
  }
  
  return article.url;
}

// URL del bot√≥n seg√∫n el idioma
const articlesUrl = language === 'en' ? '/en/articles' : 
                    language === 'fr' ? '/fr/articles' : 
                    '/articulos';

const featuredArticle = sortedArticles.find(a => a.featured === true);
const featuredCount = sortedArticles.filter(a => a.featured === true).length;

const articlesForSmallGrid = featuredArticle && layout === 'featured' ? 
  sortedArticles.slice(1) :
  sortedArticles;

console.log(`‚≠ê [RelatedArticles] Art√≠culos destacados: ${featuredCount}`, 
  featuredCount > 1 ? '(m√∫ltiples destacados - todos se muestran)' : '');
console.log('üé® [RelatedArticles] Categor√≠as y colores asignados:', 
  Array.from(categoryColorMap.entries()).map(([cat, color]) => `${cat}: ${color}`));
---

<section class="py-16 bg-gradient-to-b from-white to-gray-50">
  <div class="container mx-auto px-4">
    {/* Header mejorado con stats reales */}
    <div class="flex items-center justify-between mb-10">
      <div>
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-2">{finalTitle}</h2>
        {finalSubtitle && (
          <p class="text-lg text-gray-600">{finalSubtitle}</p>
        )}
        <div class="flex items-center gap-2 mt-3">
          <div class="flex items-center gap-1">
            <svg class="w-5 h-5 text-[#f04e00]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            <span class="text-sm font-medium text-gray-700">
              {sortedArticles.length} {t.selectedArticles}
            </span>
          </div>
          <span class="text-gray-400">‚Ä¢</span>
          <span class="text-sm text-gray-600">
            {articlesStats?.last_updated || t.weeklyUpdated}
          </span>
        </div>
      </div>
      <a 
        href={articlesUrl}
        class="hidden md:flex items-center gap-2 px-4 py-2 bg-[#f04e00] text-white rounded-lg hover:bg-[#d94400] transition-colors"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
        </svg>
        {t.viewAllArticles}
      </a>
    </div>

    {/* Layout Featured: PRIMER ART√çCULO GRANDE + RESTO EN GRID PEQUE√ëO */}
    {featuredArticle && layout === 'featured' ? (
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
        {/* Art√≠culo destacado grande */}
        <div class="lg:col-span-1">
          <article class="group">
            <a href={getArticleUrl(featuredArticle)}>
              <div class="relative aspect-[4/3] overflow-hidden rounded-xl shadow-lg mb-4">
                {featuredArticle.featuredImage ? (
                  <img 
                    src={featuredArticle.featuredImage} 
                    alt={featuredArticle.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
                  />
                ) : (
                  <div class="w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                    <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                  </div>
                )}
                
                <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent"></div>
                
                <div class="absolute top-4 left-4 flex gap-2">
                  <span class="bg-[#f04e00] text-white px-3 py-1 rounded-full text-xs font-medium shadow-lg">
                    {t.featured}
                  </span>
                  <span class={`px-3 py-1 ${getCategoryColor(featuredArticle.category)} text-white text-xs font-medium rounded-full shadow-lg`}>
                    {featuredArticle.category}
                  </span>
                </div>
                
                <div class="absolute bottom-4 left-4 right-4">
                  <div class="flex items-center justify-between text-white">
                    <div class="flex items-center gap-3">
                      {featuredArticle.author.avatar && (
                        <img 
                          src={featuredArticle.author.avatar} 
                          alt={featuredArticle.author.name}
                          class="w-12 h-12 rounded-full border-2 border-white/50 shadow-lg"
                        />
                      )}
                      <div>
                        <p class="text-sm font-medium text-white drop-shadow-lg">{featuredArticle.author.name}</p>
                        <p class="text-xs text-white/80 drop-shadow-lg">{formatDate(featuredArticle.publishedAt)}</p>
                      </div>
                    </div>
                    
                    <div class="flex items-center gap-3 text-sm">
                      <div class="flex items-center gap-1 bg-black/60 px-2 py-1 rounded-full">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <span>{featuredArticle.readTime}</span>
                      </div>
                      {featuredArticle.views && (
                        <div class="flex items-center gap-1 bg-black/60 px-2 py-1 rounded-full">
                          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                          </svg>
                          <span>{featuredArticle.views}</span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="space-y-3">
                <h3 class="text-2xl font-bold text-gray-900 group-hover:text-[#f04e00] transition-colors leading-tight">
                  {featuredArticle.title}
                </h3>
                <p class="text-gray-600 leading-relaxed line-clamp-3">{featuredArticle.excerpt}</p>
                
                <div class="flex items-center gap-2 text-[#f04e00] font-medium pt-2">
                  <span>{t.readFullArticle}</span>
                  <svg class="w-4 h-4 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </div>
              </div>
            </a>
          </article>
        </div>
        
        {/* Grid peque√±o */}
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
          {articlesForSmallGrid.slice(0, 4).map((article) => (
            <article class="group">
              <a href={getArticleUrl(article)}>
                <div class="relative aspect-[4/3] overflow-hidden rounded-lg mb-3 shadow-md">
                  {article.featuredImage ? (
                    <img 
                      src={article.featuredImage} 
                      alt={article.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                    />
                  ) : (
                    <div class="w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                      <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                      </svg>
                    </div>
                  )}
                  
                  <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-90"></div>
                  
                  <div class="absolute top-2 left-2 flex gap-1">
                    {article.featured === true && (
                      <span class="bg-[#f04e00] text-white px-2 py-1 rounded text-xs font-medium shadow-lg">
                        {t.featured}
                      </span>
                    )}
                    <span class={`px-2 py-1 ${getCategoryColor(article.category)} text-white text-xs font-medium rounded shadow-lg`}>
                      {article.category}
                    </span>
                  </div>
                  
                  <div class="absolute bottom-2 left-2 right-2 flex items-center justify-between">
                    <div class="flex items-center gap-1 bg-black/70 text-white text-xs px-2 py-1 rounded-full">
                      <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                      </svg>
                      <span>{article.readTime}</span>
                    </div>
                    
                    {article.views && (
                      <div class="flex items-center gap-1 bg-black/70 text-white text-xs px-2 py-1 rounded-full">
                        <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                        </svg>
                        <span>{article.views}</span>
                      </div>
                    )}
                  </div>
                </div>
                
                <div class="space-y-2">
                  <h4 class="font-semibold text-gray-900 group-hover:text-[#f04e00] transition-colors line-clamp-2 leading-tight">
                    {article.title}
                  </h4>
                  <p class="text-sm text-gray-600 line-clamp-2 leading-relaxed">{article.excerpt}</p>
                </div>
              </a>
            </article>
          ))}
        </div>
      </div>
    ) : (
      /* Grid normal */
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {sortedArticles.map((article) => (
          <article class="group bg-white rounded-xl shadow-md hover:shadow-2xl transition-all duration-300 overflow-hidden">
            <a href={getArticleUrl(article)}>
              <div class="relative aspect-[16/9] overflow-hidden">
                {article.featuredImage ? (
                  <img 
                    src={article.featuredImage} 
                    alt={article.title}
                    class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                    loading="lazy"
                  />
                ) : (
                  <div class="w-full h-full bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                    <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                  </div>
                )}
                <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity"></div>
                
                <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity">
                  <div class="bg-white/90 px-4 py-2 rounded-full">
                    <span class="text-sm font-medium text-gray-900">{t.readArticle}</span>
                  </div>
                </div>
                
                <div class="absolute top-4 left-4 flex gap-2">
                  {article.featured === true && (
                    <span class="bg-[#f04e00] text-white px-3 py-1 rounded-full text-xs font-medium">
                      {t.featured}
                    </span>
                  )}
                  <span class={`px-3 py-1 ${getCategoryColor(article.category)} text-white text-xs font-medium rounded-full`}>
                    {article.category}
                  </span>
                </div>
              </div>
              
              <div class="p-6">
                <div class="flex items-center gap-2 text-sm text-gray-500 mb-3">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  <span>{article.readTime}</span>
                  {article.views && (
                    <>
                      <span>‚Ä¢</span>
                      <span>{article.views} {t.readings}</span>
                    </>
                  )}
                </div>
                
                <h3 class="text-xl font-bold text-gray-900 mb-3 group-hover:text-[#f04e00] transition-colors line-clamp-2">
                  {article.title}
                </h3>
                
                <p class="text-gray-600 mb-4 line-clamp-3">{article.excerpt}</p>
                
                <div class="flex items-center justify-between">
                  <div class="flex items-center gap-3">
                    {article.author.avatar && (
                      <img 
                        src={article.author.avatar} 
                        alt={article.author.name}
                        class="w-8 h-8 rounded-full"
                      />
                    )}
                    <div>
                      <p class="text-sm font-medium text-gray-900">{article.author.name}</p>
                      <p class="text-xs text-gray-500">{formatDate(article.publishedAt)}</p>
                    </div>
                  </div>
                  
                  <svg class="w-5 h-5 text-gray-400 group-hover:text-[#f04e00] group-hover:translate-x-1 transition-all" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </div>
              </div>
            </a>
          </article>
        ))}
      </div>
    )}

    {/* Call to action mejorado */}
    <div class="text-center mt-12">
      <a 
        href={articlesUrl}
        class="inline-flex items-center gap-2 text-[#f04e00] hover:text-[#d94400] font-medium transition-colors text-lg"
      >
        {t.exploreAllCategories}
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>

    {/* CTA m√≥vil */}
    <div class="mt-8 text-center md:hidden">
      <a 
        href={articlesUrl}
        class="inline-flex items-center gap-2 px-6 py-3 bg-[#f04e00] text-white rounded-lg hover:bg-[#d94400] transition-colors"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
        </svg>
        {t.viewAllArticles}
      </a>
    </div>
  </div>
</section>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>