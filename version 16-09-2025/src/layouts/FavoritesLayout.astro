---
// src/layouts/FavoritesLayout.astro - Layout para p√°gina principal de favoritos
import Layout from './Layout.astro';

// ===================================================================
// EXTRACCI√ìN DE DATOS DEL PROP
// ===================================================================

const { data } = Astro.props;
const language = data?.language || 'es';

// ===================================================================
// TEXTOS POR IDIOMA
// ===================================================================

const TEXTS = {
  es: {
    title: 'Mis Favoritos - CLIC Inmobiliaria',
    description: 'Administra tus propiedades favoritas. Guarda, organiza y comparte las propiedades que m√°s te interesan.',
    pageTitle: 'Mis Favoritos',
    pageSubtitle: 'Administra y organiza las propiedades que m√°s te interesan',
    loading: 'Cargando tus favoritos...',
    noFavorites: 'No tienes favoritos a√∫n',
    noFavoritesDescription: 'Explora nuestras propiedades y haz clic en ‚ù§Ô∏è para guardar las que m√°s te gusten',
    exploreButton: 'Explorar propiedades',
    userListTitle: 'Tu lista de favoritos',
    deviceId: 'Device ID:',
    email: 'Email:',
    noEmail: 'No asignado',
    assignEmail: 'Asignar email',
    changeEmail: 'Cambiar email',
    share: 'Compartir',
    propertiesSaved: 'Propiedades guardadas',
    sortBy: 'Ordenar:',
    sortRecent: 'M√°s recientes',
    sortPriceDesc: 'Precio: mayor a menor',
    sortPriceAsc: 'Precio: menor a mayor',
    sortTitle: 'T√≠tulo A-Z',
    routes: {
      properties: '/comprar'
    }
  },
  en: {
    title: 'My Favorites - CLIC Real Estate',
    description: 'Manage your favorite properties. Save, organize and share the properties that interest you most.',
    pageTitle: 'My Favorites',
    pageSubtitle: 'Manage and organize the properties that interest you most',
    loading: 'Loading your favorites...',
    noFavorites: 'You don\'t have favorites yet',
    noFavoritesDescription: 'Explore our properties and click ‚ù§Ô∏è to save the ones you like most',
    exploreButton: 'Explore properties',
    userListTitle: 'Your favorites list',
    deviceId: 'Device ID:',
    email: 'Email:',
    noEmail: 'Not assigned',
    assignEmail: 'Assign email',
    changeEmail: 'Change email',
    share: 'Share',
    propertiesSaved: 'Properties saved',
    sortBy: 'Sort by:',
    sortRecent: 'Most recent',
    sortPriceDesc: 'Price: high to low',
    sortPriceAsc: 'Price: low to high',
    sortTitle: 'Title A-Z',
    routes: {
      properties: '/en/buy'
    }
  },
  fr: {
    title: 'Mes Favoris - CLIC Immobilier',
    description: 'G√©rez vos propri√©t√©s favorites. Sauvegardez, organisez et partagez les propri√©t√©s qui vous int√©ressent le plus.',
    pageTitle: 'Mes Favoris',
    pageSubtitle: 'G√©rez et organisez les propri√©t√©s qui vous int√©ressent le plus',
    loading: 'Chargement de vos favoris...',
    noFavorites: 'Vous n\'avez pas encore de favoris',
    noFavoritesDescription: 'Explorez nos propri√©t√©s et cliquez sur ‚ù§Ô∏è pour sauvegarder celles que vous pr√©f√©rez',
    exploreButton: 'Explorer les propri√©t√©s',
    userListTitle: 'Votre liste de favoris',
    deviceId: 'ID de l\'appareil:',
    email: 'Email:',
    noEmail: 'Non assign√©',
    assignEmail: 'Assigner email',
    changeEmail: 'Changer email',
    share: 'Partager',
    propertiesSaved: 'Propri√©t√©s sauvegard√©es',
    sortBy: 'Trier par:',
    sortRecent: 'Plus r√©cents',
    sortPriceDesc: 'Prix: √©lev√© √† bas',
    sortPriceAsc: 'Prix: bas √† √©lev√©',
    sortTitle: 'Titre A-Z',
    routes: {
      properties: '/fr/acheter'
    }
  }
};

const text = TEXTS[language] || TEXTS.es;

console.log('‚úÖ FavoritesLayout preparado:', {
  language,
  originalUrl: data?.originalUrl
});
---

<Layout 
  title={text.title}
  description={text.description}
  language={language}
>
  <!-- Hero Section -->
  <section class="bg-gray-50 py-12">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto text-center">
        <h1 class="text-4xl font-bold text-gray-900 mb-4">
          {text.pageTitle}
        </h1>
        <p class="text-xl text-gray-600">
          {text.pageSubtitle}
        </p>
      </div>
    </div>
  </section>

  <!-- Main Content -->
  <section class="py-12">
    <div class="container mx-auto px-4">
      <div class="max-w-6xl mx-auto">
        
        <!-- Loading State -->
        <div id="loadingState" class="text-center py-12">
          <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-[#f04e00]"></div>
          <p class="mt-4 text-gray-600">{text.loading}</p>
        </div>

        <!-- No Favorites State -->
        <div id="noFavoritesState" class="text-center py-12 hidden">
          <div class="text-6xl mb-6">üíî</div>
          <h2 class="text-2xl font-bold text-gray-900 mb-4">{text.noFavorites}</h2>
          <p class="text-gray-600 mb-8">
            {text.noFavoritesDescription}
          </p>
          <div class="space-y-4">
            <a 
              href={text.routes.properties}
              class="inline-block bg-[#f04e00] text-white px-6 py-3 rounded-lg hover:bg-[#e03d00] transition-colors font-semibold"
            >
              {text.exploreButton}
            </a>
          </div>
        </div>

        <!-- Favorites Content -->
        <div id="favoritesContent" class="hidden">
          
          <!-- User Info Card -->
          <div class="bg-white rounded-lg shadow-md p-6 mb-8">
            <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
              <div>
                <h2 class="text-xl font-bold text-gray-900 mb-2">{text.userListTitle}</h2>
                <div class="space-y-1 text-sm text-gray-600">
                  <div class="flex items-center gap-2">
                    <svg class="w-4 h-4 text-[#f04e00]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z"/>
                    </svg>
                    <span>{text.deviceId} <span id="deviceId" class="font-mono font-semibold text-[#f04e00]">-</span></span>
                  </div>
                  <div class="flex items-center gap-2">
                    <svg class="w-4 h-4 text-[#f04e00]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                    </svg>
                    <span>{text.email} <span id="userEmail" class="text-gray-500">{text.noEmail}</span></span>
                  </div>
                </div>
              </div>
              
              <div class="flex gap-2">
                <button 
                  onclick="showEmailModal()"
                  class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm font-medium"
                  id="emailButton"
                >
                  {text.assignEmail}
                </button>
                <button 
                  onclick="shareList()"
                  class="px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors text-sm font-medium"
                >
                  {text.share}
                </button>
              </div>
            </div>
          </div>

          <!-- Favorites Count -->
          <div class="flex items-center justify-between mb-6">
            <h3 class="text-lg font-semibold text-gray-900">
              {text.propertiesSaved} (<span id="favoritesCount">0</span>)
            </h3>
            
            <div class="flex items-center gap-2">
              <label for="sort-favorites" class="text-sm text-gray-700">{text.sortBy}</label>
              <select 
                id="sort-favorites"
                class="text-sm border border-gray-300 rounded-md px-3 py-1 focus:ring-2 focus:ring-[#f04e00] focus:border-[#f04e00]"
              >
                <option value="recent">{text.sortRecent}</option>
                <option value="price-desc">{text.sortPriceDesc}</option>
                <option value="price-asc">{text.sortPriceAsc}</option>
                <option value="title">{text.sortTitle}</option>
              </select>
            </div>
          </div>

          <!-- Properties Grid -->
          <div id="propertiesGrid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            <!-- Properties will be loaded here -->
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Email Modal -->
  <div id="emailModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
    <div class="bg-white rounded-2xl shadow-2xl max-w-md w-full relative animate-fadeIn">
      <button onclick="closeEmailModal()" class="absolute top-4 right-4 p-2 text-gray-400 hover:text-gray-600 transition-colors">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>

      <div class="p-8 text-center">
        <div class="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-6">
          <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
          </svg>
        </div>
        
        <h2 class="text-2xl font-bold text-gray-900 mb-3" id="emailModalTitle">{text.assignEmail}</h2>
        <p class="text-gray-600 mb-6" id="emailModalDescription">
          Vincula tu email para acceder f√°cilmente a tus favoritos
        </p>
        
        <form onsubmit="saveEmail(event)" class="space-y-4">
          <div>
            <input 
              type="email" 
              id="newEmail" 
              class="w-full border border-gray-300 rounded-lg px-4 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500" 
              placeholder="tu@email.com"
              required
            >
          </div>

          <button type="submit" class="w-full bg-blue-600 text-white py-3 px-6 rounded-lg hover:bg-blue-700 transition-colors font-semibold">
            Guardar email
          </button>
        </form>

        <button onclick="closeEmailModal()" class="w-full text-gray-500 hover:text-gray-700 mt-4 text-sm">
          Cancelar
        </button>
      </div>
    </div>
  </div>
</Layout>

<style>
  @keyframes fadeIn {
    from { opacity: 0; transform: scale(0.95); }
    to { opacity: 1; transform: scale(1); }
  }
  
  .animate-fadeIn {
    animation: fadeIn 0.2s ease-out;
  }

  .property-card {
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  }
  
  .property-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .remove-btn {
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
  }
  
  .property-card:hover .remove-btn {
    opacity: 1;
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .badge-project {
    background: linear-gradient(135deg, #f04e00, #ff6b35);
  }

  .badge-status {
    background: linear-gradient(135deg, #10b981, #34d399);
  }
</style>

<script>
  // Importar toda la funcionalidad desde favoritos.astro
  // (El JavaScript original se mantiene igual pero se ejecuta en el contexto del layout)
  
  // ===== P√ÅGINA DE FAVORITOS CON DATOS REALES =====
  
  let pageState = {
    properties: [],
    visitors: [],
    reactions: {},
    isLoading: false
  };

  // ===== INICIALIZACI√ìN =====
  async function initializePage() {
    console.log('üöÄ Inicializando p√°gina de favoritos desde layout');
    
    if (!window.simpleFavoritesManager) {
      console.error('‚ùå SimpleFavoritesManager not available');
      showNoFavoritesState();
      return;
    }

    // Esperar a que el manager est√© cargado
    if (!window.simpleFavoritesManager.isLoaded) {
      console.log('‚è≥ Esperando que el manager cargue...');
      setTimeout(initializePage, 500);
      return;
    }

    const info = window.simpleFavoritesManager.getDeviceInfo();
    console.log('üìä Device info:', info);

    if (info.count > 0) {
      await loadFavoritesData();
    } else {
      showNoFavoritesState();
    }

    // Escuchar cambios del manager
    window.simpleFavoritesManager.addListener(onManagerUpdate);

    // Ocultar loading
    document.getElementById('loadingState').classList.add('hidden');
  }

  // ===== FUNCIONES DE ESTADO =====
  function showNoFavoritesState() {
    document.getElementById('noFavoritesState').classList.remove('hidden');
    document.getElementById('favoritesContent').classList.add('hidden');
    document.getElementById('loadingState').classList.add('hidden');
  }

  function showFavoritesContent() {
    document.getElementById('noFavoritesState').classList.add('hidden');
    document.getElementById('favoritesContent').classList.remove('hidden');
    document.getElementById('loadingState').classList.add('hidden');
    
    const info = window.simpleFavoritesManager.getDeviceInfo();
    updateUserInfo(info);
    renderProperties();
  }

  // ===== CARGAR DATOS =====
  async function loadFavoritesData() {
    if (pageState.isLoading) return;
    
    pageState.isLoading = true;
    console.log('üì¶ Cargando detalles de favoritos...');

    try {
      const info = window.simpleFavoritesManager.getDeviceInfo();
      const properties = await window.simpleFavoritesManager.getFavoritesWithDetails();
      
      console.log('‚úÖ Propiedades cargadas:', {
        count: properties.length,
        properties: properties.map(p => ({ 
          id: p.id, 
          titulo: p.titulo, 
          precio: p.precio 
        }))
      });

      pageState.properties = properties;

      if (properties.length > 0) {
        await Promise.all([loadVisitors(), loadReactions()]);
        showFavoritesContent();
      } else {
        showNoFavoritesState();
      }

    } catch (error) {
      console.error('‚ùå Error cargando favoritos:', error);
      showNoFavoritesState();
    } finally {
      pageState.isLoading = false;
    }
  }

  async function loadVisitors() {
    try {
      const info = window.simpleFavoritesManager.getDeviceInfo();
      if (!info.deviceId) return;

      const response = await fetch(`https://pacewqgypevfgjmdsorz.supabase.co/functions/v1/favorites/${info.deviceId}/visitors`, {
        headers: {
          'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBhY2V3cWd5cGV2ZmdqbWRzb3J6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg2NjU4OTksImV4cCI6MjA2NDI0MTg5OX0.Qlg-UVy-sikr76GxYmTcfCz1EnAqPHxvFeLrdqnjuWs'
        }
      });
      
      if (response.ok) {
        const data = await response.json();
        pageState.visitors = data.visitors || [];
        console.log('‚úÖ Visitantes cargados:', pageState.visitors.length);
      }
    } catch (error) {
      console.error('‚ùå Error loading visitors:', error);
      pageState.visitors = [];
    }
  }

  async function loadReactions() {
    try {
      const info = window.simpleFavoritesManager.getDeviceInfo();
      if (!info.deviceId) return;

      const response = await fetch(`https://pacewqgypevfgjmdsorz.supabase.co/functions/v1/favorites/${info.deviceId}/reactions`, {
        headers: {
          'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBhY2V3cWd5cGV2ZmdqbWRzb3J6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg2NjU4OTksImV4cCI6MjA2NDI0MTg5OX0.Qlg-UVy-sikr76GxYmTcfCz1EnAqPHxvFeLrdqnjuWs'
        }
      });
      
      if (response.ok) {
        const data = await response.json();
        pageState.reactions = data.reactions || {};
        console.log('‚úÖ Reacciones cargadas:', Object.keys(pageState.reactions).length);
      }
    } catch (error) {
      console.error('‚ùå Error loading reactions:', error);
      pageState.reactions = {};
    }
  }

  // ===== ACTUALIZAR UI =====
  function onManagerUpdate(info) {
    console.log('üîÑ Manager updated in favoritos page:', info);
    updateUserInfo(info);
    
    if (info.count !== pageState.properties.length) {
      if (info.count > 0) {
        loadFavoritesData();
      } else {
        showNoFavoritesState();
      }
    }
  }

  function updateUserInfo(info) {
    const deviceIdElement = document.getElementById('deviceId');
    const favoritesCountElement = document.getElementById('favoritesCount');
    const emailElement = document.getElementById('userEmail');
    const emailButton = document.getElementById('emailButton');
    
    if (deviceIdElement) {
      deviceIdElement.textContent = info.deviceId || '-';
    }
    
    if (favoritesCountElement) {
      favoritesCountElement.textContent = info.count || 0;
    }
    
    if (emailElement && emailButton) {
      if (info.email) {
        emailElement.textContent = info.email;
        emailElement.classList.remove('text-gray-500');
        emailElement.classList.add('text-gray-900');
        emailButton.textContent = 'Cambiar email';
      } else {
        emailElement.textContent = 'No asignado';
        emailElement.classList.remove('text-gray-900');
        emailElement.classList.add('text-gray-500');
        emailButton.textContent = 'Asignar email';
      }
    }
  }

  function renderProperties() {
    const grid = document.getElementById('propertiesGrid');
    
    if (pageState.properties.length === 0) {
      grid.innerHTML = `
        <div class="col-span-full text-center py-12 text-gray-500">
          <div class="text-4xl mb-4">üì¶</div>
          <p>No hay propiedades en tu lista</p>
        </div>
      `;
      return;
    }
    
    const sortedProperties = sortProperties([...pageState.properties]);
    
    grid.innerHTML = sortedProperties.map(property => {
      const image = getPropertyImage(property);
      const title = formatPropertyTitle(property);
      const location = formatPropertyLocation(property);
      const price = formatPropertyPrice(property);
      const code = getPropertyCode(property);
      const type = getPropertyType(property);
      const bedrooms = getPropertyBedrooms(property);
      const bathrooms = getPropertyBathrooms(property);
      const area = getPropertyArea(property);
      const parking = getPropertyParking(property);
      const url = getPropertyUrl(property);
      const status = getPropertyStatus(property);
      const projectFlag = isProject(property);
      const reactions = pageState.reactions[property.id] || { likes: [], dislikes: [], comments: [] };
      const totalReactions = reactions.likes.length + reactions.dislikes.length + reactions.comments.length;
      
      return `
        <div class="property-card bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden relative">
          <!-- Bot√≥n remover -->
          <button 
            onclick="removeProperty('${property.id}')"
            class="remove-btn absolute top-3 right-3 p-2 bg-red-500 text-white rounded-full hover:bg-red-600 transition-colors z-10 shadow-lg"
            title="Remover de favoritos"
          >
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
          
          <!-- Imagen -->
          <div class="relative aspect-[4/3] overflow-hidden bg-gray-200">
            <img 
              src="${image}" 
              alt="${title}"
              class="w-full h-full object-cover"
              loading="lazy"
              onerror="this.src='https://via.placeholder.com/400x300/e5e7eb/9ca3af?text=Sin+Imagen';"
            />
            
            <!-- Badges superiores -->
            <div class="absolute top-3 left-3 flex flex-col gap-2">
              ${projectFlag ? `
                <span class="badge-project text-white px-2 py-1 rounded text-xs font-medium">
                  Proyecto
                </span>
              ` : ''}
              
              ${type && type !== 'Propiedad' ? `
                <span class="bg-white/90 text-gray-700 px-2 py-1 rounded text-xs font-medium">
                  ${type}
                </span>
              ` : ''}
              
              ${status && status !== 'Publicada' && status !== 'Disponible' ? `
                <span class="badge-status text-white px-2 py-1 rounded text-xs font-medium">
                  ${status}
                </span>
              ` : ''}
            </div>

            <!-- Badge de reacciones -->
            ${totalReactions > 0 ? `
              <div class="absolute bottom-3 right-3">
                <span class="bg-blue-500 text-white px-2 py-1 rounded-full text-xs font-medium flex items-center gap-1">
                  <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
                  </svg>
                  ${totalReactions}
                </span>
              </div>
            ` : ''}
          </div>
          
          <!-- Contenido -->
          <div class="p-4">
            <!-- C√≥digo de referencia -->
            ${code ? `
              <div class="text-xs text-gray-400 font-mono mb-2">
                ref.: ${code}
              </div>
            ` : ''}
            
            <!-- Ubicaci√≥n -->
            <div class="flex items-center gap-1 mb-2">
              <svg class="w-4 h-4 text-gray-400 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
              <p class="text-sm text-gray-600 truncate">${location}</p>
            </div>
            
            <!-- T√≠tulo -->
            <h3 class="font-semibold text-gray-900 line-clamp-2 leading-tight mb-3">
              ${title}
            </h3>
            
            <!-- Caracter√≠sticas -->
            <div class="flex flex-wrap gap-3 text-sm text-gray-600 mb-3">
              <span class="flex items-center gap-1">
                <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                  <path d="M2 4v16"/>
                  <path d="M2 8h18a2 2 0 0 1 2 2v10"/>
                  <path d="M2 17h20"/>
                  <path d="M6 8v9"/>
                </svg>
                ${bedrooms} hab
              </span>
              
              ${bathrooms > 0 ? `
                <span class="flex items-center gap-1">
                  <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <path d="M9 6 6.5 3.5a1.5 1.5 0 0 0-1-.5C4.683 3 4 3.683 4 4.5V17a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5"/>
                    <line x1="10" x2="8" y1="5" y2="7"/>
                    <line x1="2" x2="22" y1="12" y2="12"/>
                    <line x1="7" x2="7" y1="19" y2="21"/>
                    <line x1="17" x2="17" y1="19" y2="21"/>
                  </svg>
                  ${bathrooms} ba√±os
                </span>
              ` : ''}
              
              ${area > 0 ? `
                <span class="flex items-center gap-1">
                  <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <path d="M21.3 15.3a2.4 2.4 0 0 1 0 3.4l-2.6 2.6a2.4 2.4 0 0 1-3.4 0L2.7 8.7a2.41 2.41 0 0 1 0-3.4l2.6-2.6a2.41 2.41 0 0 1 3.4 0Z"/>
                    <path d="m14.5 12.5 2-2"/>
                    <path d="m11.5 9.5 2-2"/>
                    <path d="m8.5 6.5 2-2"/>
                    <path d="m17.5 15.5 2-2"/>
                  </svg>
                  ${area} m¬≤
                </span>
              ` : ''}
              
              ${parking > 0 ? `
                <span class="flex items-center gap-1">
                  <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <rect x="3" y="3" width="18" height="18" rx="2"/>
                    <path d="M9 17V7h4a3 3 0 0 1 0 6h-4"/>
                  </svg>
                  ${parking} parq.
                </span>
              ` : ''}
            </div>
            
            <!-- Precio -->
            <div class="text-xl font-bold text-[#f04e00] mb-4">
              ${price}
            </div>

            <!-- Feedback de visitantes -->
            ${totalReactions > 0 ? `
              <div class="border-t pt-4 space-y-3">
                <!-- Resumen de reacciones -->
                <div class="flex items-center gap-4 text-sm">
                  ${reactions.likes.length > 0 ? `
                    <div class="flex items-center gap-1 text-green-600">
                      <span>üëç</span>
                      <span>${reactions.likes.length}</span>
                    </div>
                  ` : ''}
                  
                  ${reactions.dislikes.length > 0 ? `
                    <div class="flex items-center gap-1 text-red-600">
                      <span>üëé</span>
                      <span>${reactions.dislikes.length}</span>
                    </div>
                  ` : ''}
                  
                  ${reactions.comments.length > 0 ? `
                    <div class="flex items-center gap-1 text-blue-600">
                      <span>üí¨</span>
                      <span>${reactions.comments.length}</span>
                    </div>
                  ` : ''}
                </div>

                <!-- Comentarios recientes -->
                ${reactions.comments.slice(0, 2).map(comment => `
                  <div class="text-sm bg-gray-50 p-2 rounded">
                    <div class="font-medium text-gray-900">${comment.visitor_alias}:</div>
                    <div class="text-gray-700">${comment.comment_text}</div>
                  </div>
                `).join('')}

                ${reactions.comments.length > 2 ? `
                  <button 
                    onclick="showAllFeedback('${property.id}')" 
                    class="text-sm text-blue-600 hover:text-blue-800"
                  >
                    Ver todos los comentarios (${reactions.comments.length})
                  </button>
                ` : ''}
              </div>
            ` : ''}
            
            <!-- Bot√≥n ver propiedad -->
            <a 
              href="${url}"
              class="block w-full bg-gray-100 text-gray-700 text-center py-2 px-4 rounded-lg hover:bg-gray-200 transition-colors font-medium text-sm mt-4"
            >
              Ver propiedad
            </a>
          </div>
        </div>
      `;
    }).join('');
  }

  // ===== HELPER FUNCTIONS PARA RENDERIZADO =====
  
  function extractPriceValue(priceString) {
    const numbers = priceString.replace(/[^\d]/g, '');
    return parseFloat(numbers) || 0;
  }

  function getPropertyImage(property) {
    return property.imagen || 
           (property.imagenes && property.imagenes.length > 0 ? property.imagenes[0] : null) ||
           'https://via.placeholder.com/400x300/e5e7eb/9ca3af?text=Sin+Imagen';
  }

  function formatPropertyTitle(property) {
    return property.titulo || property.name || property.private_name || 'Propiedad sin nombre';
  }

  function formatPropertyLocation(property) {
    return property.sector || 'Ubicaci√≥n no especificada';
  }

  function formatPropertyPrice(property) {
    if (property.precio && property.precio !== 'Precio a consultar') {
      return property.precio;
    }
    
    if (property.precios) {
      if (property.precios.venta) {
        return `${property.precios.venta.formateado} (Venta)`;
      }
      if (property.precios.venta_amueblado) {
        return `${property.precios.venta_amueblado.formateado} (Venta Amueblado)`;
      }
      if (property.precios.alquiler) {
        return `${property.precios.alquiler.formateado}/mes (Alquiler)`;
      }
      if (property.precios.alquiler_amueblado) {
        return `${property.precios.alquiler_amueblado.formateado}/mes (Alquiler Amueblado)`;
      }
      if (property.precios.alquiler_temporal) {
        return `${property.precios.alquiler_temporal.formateado}/mes (Temporal)`;
      }
    }
    
    return 'Precio a consultar';
  }

  function getPropertyCode(property) {
    return property.code || property.internal_code || null;
  }

  function getPropertyType(property) {
    return property.tipo || 'Propiedad';
  }

  function getPropertyBedrooms(property) {
    return property.habitaciones || property.bedrooms || 0;
  }

  function getPropertyBathrooms(property) {
    return property.banos || property.bathrooms || 0;
  }

  function getPropertyArea(property) {
    return property.metros || property.metros_construidos || property.built_area || 0;
  }

  function getPropertyParking(property) {
    return property.estacionamientos || property.parking_spots || 0;
  }

  function getPropertyUrl(property) {
    return property.url || property.slug || `/propiedad/${property.id}`;
  }

  function getPropertyStatus(property) {
    return property.estado || property.property_status || null;
  }

  function isProject(property) {
    return property.is_project === true;
  }

  // ===== ORDENAR PROPIEDADES =====
  function sortProperties(properties) {
    const sortType = document.getElementById('sort-favorites')?.value || 'recent';
    
    switch (sortType) {
      case 'price-desc':
        return properties.sort((a, b) => {
          const priceA = extractPriceValue(formatPropertyPrice(a));
          const priceB = extractPriceValue(formatPropertyPrice(b));
          return priceB - priceA;
        });
      case 'price-asc':
        return properties.sort((a, b) => {
          const priceA = extractPriceValue(formatPropertyPrice(a));
          const priceB = extractPriceValue(formatPropertyPrice(b));
          return priceA - priceB;
        });
      case 'title':
        return properties.sort((a, b) => {
          const titleA = formatPropertyTitle(a);
          const titleB = formatPropertyTitle(b);
          return titleA.localeCompare(titleB);
        });
      case 'recent':
      default:
        return properties;
    }
  }

  // ===== FUNCIONES DE INTERACCI√ìN =====
  async function removeProperty(propertyId) {
    if (!confirm('¬øRemover esta propiedad de tus favoritos?')) return;
    
    try {
      await window.simpleFavoritesManager.removeFavorite(propertyId);
      pageState.properties = pageState.properties.filter(p => p.id !== propertyId);
      
      if (pageState.properties.length > 0) {
        renderProperties();
        updateUserInfo(window.simpleFavoritesManager.getDeviceInfo());
      } else {
        showNoFavoritesState();
      }
      
    } catch (error) {
      console.error('‚ùå Error removiendo propiedad:', error);
      alert('Error al remover la propiedad. Int√©ntalo de nuevo.');
    }
  }

  async function saveEmail(event) {
    event.preventDefault();
    const email = document.getElementById('newEmail').value;
    
    try {
      await window.simpleFavoritesManager.updateEmail(email);
      updateUserInfo(window.simpleFavoritesManager.getDeviceInfo());
      closeEmailModal();
      alert('Email actualizado correctamente');
    } catch (error) {
      console.error('‚ùå Error guardando email:', error);
      alert('Error al guardar el email. Int√©ntalo de nuevo.');
    }
  }

  function shareList() {
    const info = window.simpleFavoritesManager.getDeviceInfo();
    const shareUrl = `${window.location.origin}/favoritos/compartir?id=${info.deviceId}`;
    
    const shareData = {
      title: 'Mis propiedades favoritas',
      text: `Mira las propiedades que me interesan`,
      url: shareUrl
    };
    
    if (navigator.share) {
      navigator.share(shareData);
    } else {
      navigator.clipboard.writeText(shareUrl).then(() => {
        alert('Enlace copiado al portapapeles');
      });
    }
  }

  function showEmailModal() {
    document.getElementById('emailModal').classList.remove('hidden');
    document.getElementById('emailModal').classList.add('flex');
    
    const info = window.simpleFavoritesManager.getDeviceInfo();
    if (info.email) {
      document.getElementById('newEmail').value = info.email;
      document.getElementById('emailModalTitle').textContent = 'Cambiar email';
    }
  }

  function closeEmailModal() {
    document.getElementById('emailModal').classList.add('hidden');
    document.getElementById('emailModal').classList.remove('flex');
    document.getElementById('newEmail').value = '';
  }

  // ===== INICIALIZACI√ìN =====
  document.addEventListener('DOMContentLoaded', function() {
    initializePage();
    
    // Event listener para ordenamiento
    document.getElementById('sort-favorites')?.addEventListener('change', renderProperties);
  });

  // Funciones globales
  window.removeProperty = removeProperty;
  window.shareList = shareList;
  window.showEmailModal = showEmailModal;
  window.closeEmailModal = closeEmailModal;
  window.saveEmail = saveEmail;
</script>