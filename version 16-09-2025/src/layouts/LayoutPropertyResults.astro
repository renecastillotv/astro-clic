---
export interface Props {
  title: string;
  description?: string;
  ogImage?: string;
  breadcrumbs?: Array<{
    name: string;
    url?: string;
    is_active?: boolean;
    current?: boolean;
  }>;
  hreflangData?: Record<string, string>; // Add this prop
}

const { 
  title, 
  description = 'Encuentra tu próxima propiedad en República Dominicana con CLIC Inmobiliaria', 
  ogImage = '/og-default.jpg',
  breadcrumbs = [],
  hreflangData = {} // Add this with default
} = Astro.props;
---

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    
    <!-- SEO Meta Tags -->
    <title>{title} | CLIC Inmobiliaria</title>
    <meta name="description" content={description} />
    <meta name="robots" content="index, follow" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:site_name" content="CLIC Inmobiliaria" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogImage} />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={Astro.url.href} />
    
    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="preconnect" href="https://cdnjs.cloudflare.com" />
    
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
    
    <!-- Font Awesome 6 -->
    <link 
      rel="stylesheet" 
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" 
      integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" 
      crossorigin="anonymous" 
      referrerpolicy="no-referrer" 
    />

    <!-- Pass hreflang data to JavaScript -->
    <script is:inline define:vars={{ hreflangData }}>
      window.hreflangData = hreflangData;
    </script>
  </head>
  <body>
    <!-- SimpleFavoritesManager Script -->
    <script is:inline>
      if (!window.simpleFavoritesManager) {
        class SimpleFavoritesManager {
          constructor() {
            this.API_URL = 'https://pacewqgypevfgjmdsorz.supabase.co/functions/v1/favorites';
            this.API_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBhY2V3cWd5cGV2ZmdqbWRzb3J6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg2NjU4OTksImV4cCI6MjA2NDI0MTg5OX0.Qlg-UVy-sikr76GxYmTcfCz1EnAqPHxvFeLrdqnjuWs';
            this.deviceId = this.getDeviceId();
            this.favorites = new Set();
            this.email = null;
            this.isLoaded = false;
            this._listeners = [];
            this.loadFavorites();
          }
          getDeviceId() {
            let deviceId = localStorage.getItem('device_id');
            if (!deviceId) {
              deviceId = 'DEV-' + crypto.randomUUID().slice(0, 12);
              localStorage.setItem('device_id', deviceId);
            }
            return deviceId;
          }
          async callAPI(endpoint, method = 'GET', body = null) {
            const url = `${this.API_URL}/${this.deviceId}${endpoint}`;
            const config = {
              method,
              headers: {
                'Authorization': `Bearer ${this.API_KEY}`,
                'Content-Type': 'application/json'
              }
            };
            if (body) {
              config.body = JSON.stringify(body);
            }
            const response = await fetch(url, config);
            if (!response.ok) {
              throw new Error(`API Error: ${response.status}`);
            }
            return await response.json();
          }
          async loadFavorites() {
            try {
              const data = await this.callAPI('');
              this.favorites = new Set(data.properties || []);
              this.email = data.email;
              this.isLoaded = true;
              this.notifyListeners();
            } catch (error) {
              console.error('Error loading favorites:', error);
              this.isLoaded = true;
              this.notifyListeners();
            }
          }
          async addFavorite(propertyId) {
            try {
              this.favorites.add(propertyId);
              this.notifyListeners();
              const data = await this.callAPI('/add', 'POST', { propertyId });
              this.favorites = new Set(data.properties);
              this.notifyListeners();
            } catch (error) {
              console.error('Error adding favorite:', error);
              this.favorites.delete(propertyId);
              this.notifyListeners();
              throw error;
            }
          }
          async removeFavorite(propertyId) {
            try {
              this.favorites.delete(propertyId);
              this.notifyListeners();
              const data = await this.callAPI('/remove', 'POST', { propertyId });
              this.favorites = new Set(data.properties);
              this.notifyListeners();
            } catch (error) {
              console.error('Error removing favorite:', error);
              this.favorites.add(propertyId);
              this.notifyListeners();
              throw error;
            }
          }
          async toggleFavorite(propertyId) {
            if (this.favorites.has(propertyId)) {
              await this.removeFavorite(propertyId);
            } else {
              await this.addFavorite(propertyId);
            }
          }
          isFavorite(propertyId) {
            return this.favorites.has(propertyId);
          }
          getFavoritesCount() {
            return this.favorites.size;
          }
          getDeviceInfo() {
            return {
              deviceId: this.deviceId,
              count: this.favorites.size,
              email: this.email,
              favorites: Array.from(this.favorites)
            };
          }
          addListener(callback) {
            if (!this._listeners.includes(callback)) {
              this._listeners.push(callback);
              if (this.isLoaded) {
                setTimeout(() => callback(this.getDeviceInfo()), 0);
              }
            }
          }
          notifyListeners() {
            const info = this.getDeviceInfo();
            this._listeners.forEach(callback => {
              try {
                callback(info);
              } catch (error) {
                console.error('Error in listener:', error);
              }
            });
          }
        }
        window.simpleFavoritesManager = new SimpleFavoritesManager();
      }
    </script>

    <!-- Lead Submission Script -->
    <script>
      window.submitPropertyLead = async function(event) {
        event.preventDefault();
        
        const submitBtn = document.getElementById('submit-lead-btn');
        const submitText = document.getElementById('submit-lead-text');
        const originalText = submitText ? submitText.textContent : 'Contactar Asesor';
        
        if (submitBtn) {
          submitBtn.disabled = true;
          submitBtn.classList.add('opacity-75');
        }
        if (submitText) {
          submitText.textContent = 'Enviando...';
        }
        
        try {
          const formData = new FormData(event.target);
          const leadData = Object.fromEntries(formData.entries());
          
          if (!leadData.cliente_nombre || !leadData.cliente_telefono || !leadData.cliente_email) {
            throw new Error('Por favor completa todos los campos obligatorios');
          }
          
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          if (!emailRegex.test(leadData.cliente_email)) {
            throw new Error('Por favor ingresa un email válido');
          }
          
          leadData.fecha_creacion = new Date().toISOString();
          leadData.user_agent = navigator.userAgent;
          leadData.referidor_lead = document.referrer || '';
          
          const response = await fetch('https://pacewqgypevfgjmdsorz.supabase.co/functions/v1/submit-lead', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBhY2V3cWd5cGV2ZmdqbWRzb3J6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg2NjU4OTksImV4cCI6MjA2NDI0MTg5OX0.Qlg-UVy-sikr76GxYmTcfCz1EnAqPHxvFeLrdqnjuWs'
            },
            body: JSON.stringify(leadData)
          });
          
          const result = await response.json();
          
          if (!response.ok) {
            throw new Error(result.error || result.details || `Error ${response.status}`);
          }
          
          if (!result.success) {
            throw new Error(result.error || 'Error desconocido');
          }
          
          showSuccessMessage();
          event.target.reset();
          
        } catch (error) {
          console.error('Error enviando lead:', error);
          showErrorMessage(error.message);
        } finally {
          if (submitBtn) {
            submitBtn.disabled = false;
            submitBtn.classList.remove('opacity-75');
          }
          if (submitText) {
            submitText.textContent = originalText;
          }
        }
      };

      function showSuccessMessage() {
        const notification = document.createElement('div');
        notification.className = 'fixed top-4 right-4 bg-green-500 text-white p-4 rounded-lg shadow-lg z-50 transform translate-x-full transition-transform duration-300';
        notification.innerHTML = `
          <div class="flex items-center gap-3">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            <div>
              <p class="font-semibold">¡Solicitud enviada exitosamente!</p>
              <p class="text-sm">Un asesor se comunicará contigo muy pronto</p>
            </div>
          </div>
        `;
        document.body.appendChild(notification);
        setTimeout(() => notification.classList.remove('translate-x-full'), 100);
        setTimeout(() => {
          notification.classList.add('translate-x-full');
          setTimeout(() => {
            if (notification.parentNode) {
              notification.parentNode.removeChild(notification);
            }
          }, 300);
        }, 5000);
      }

      function showErrorMessage(message) {
        const notification = document.createElement('div');
        notification.className = 'fixed top-4 right-4 bg-red-500 text-white p-4 rounded-lg shadow-lg z-50 transform translate-x-full transition-transform duration-300';
        notification.innerHTML = `
          <div class="flex items-center gap-3">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <div>
              <p class="font-semibold">Error al enviar</p>
              <p class="text-sm">${message}</p>
            </div>
          </div>
        `;
        document.body.appendChild(notification);
        setTimeout(() => notification.classList.remove('translate-x-full'), 100);
        setTimeout(() => {
          notification.classList.add('translate-x-full');
          setTimeout(() => {
            if (notification.parentNode) {
              notification.parentNode.removeChild(notification);
            }
          }, 5000);
        });
      }
    </script>

    <!-- Header Counter Script -->
    <script>
      function updateSimpleHeaderCounter(info) {
        const counter = document.getElementById('favorites-counter');
        if (!counter) return;

        if (info.count > 0) {
          counter.textContent = info.count > 99 ? '99+' : info.count.toString();
          counter.classList.remove('hidden');
        } else {
          counter.classList.add('hidden');
        }
      }

      document.addEventListener('DOMContentLoaded', function() {
        if (window.simpleFavoritesManager) {
          window.simpleFavoritesManager.addListener(updateSimpleHeaderCounter);
        }
      });
    </script>

    <!-- HEADER CON BREADCRUMB CENTRADO -->
    <header class="sticky top-0 z-50 bg-white shadow-sm">
      <div class="container mx-auto px-4">
        <div class="flex items-center justify-between h-16">
          <!-- Logo -->
          <a href="/" class="flex items-center">
            <img src="/logo.png" alt="CLIC Inmobiliaria" class="h-10 w-auto" />
          </a>
          
          <!-- BREADCRUMB INTELIGENTE CON MEDICIÓN DE ANCHO -->
          {breadcrumbs && breadcrumbs.length > 0 && (
            <nav class="hidden md:flex items-center flex-1 justify-center max-w-4xl mx-auto">
              <ol id="breadcrumb-full" class="flex items-center text-gray-700">
                {(() => {
                  // Filtrar "Inicio" si existe
                  const filteredCrumbs = breadcrumbs.filter(crumb => 
                    !crumb.name.toLowerCase().includes('inicio') && 
                    !crumb.name.toLowerCase().includes('home')
                  );
                  
                  // Mostrar todos inicialmente - JavaScript manejará el truncado si es necesario
                  return filteredCrumbs.map((crumb, index) => (
                    <li class="flex items-center whitespace-nowrap">
                      {index > 0 && (
                        <span class="mx-2 text-gray-400">|</span>
                      )}
                      {crumb.is_active || crumb.current ? (
                        <span class="text-gray-900 font-medium text-sm">{crumb.name}</span>
                      ) : (
                        <a href={crumb.url} class="hover:text-[#f04e00] transition-colors text-sm">{crumb.name}</a>
                      )}
                    </li>
                  ));
                })()}
              </ol>
              
              <!-- Versión truncada (oculta inicialmente) -->
              <ol id="breadcrumb-truncated" class="hidden flex items-center text-gray-700">
                {(() => {
                  const filteredCrumbs = breadcrumbs.filter(crumb => 
                    !crumb.name.toLowerCase().includes('inicio') && 
                    !crumb.name.toLowerCase().includes('home')
                  );
                  
                  if (filteredCrumbs.length > 4) {
                    // Mostrar aún más elementos en la versión truncada
                    const first = filteredCrumbs[0]; // Operación (Comprar)
                    const second = filteredCrumbs[1]; // Tipo (Apartamento)
                    const third = filteredCrumbs.length > 2 ? filteredCrumbs[2] : null; // Ciudad/Ubicación
                    const fourth = filteredCrumbs.length > 3 ? filteredCrumbs[3] : null; // Sector
                    const last = filteredCrumbs[filteredCrumbs.length - 1]; // Último elemento
                    const secondLast = filteredCrumbs.length > 4 ? filteredCrumbs[filteredCrumbs.length - 2] : null;
                    
                    const toShow = [];
                    
                    // Primeros elementos esenciales
                    toShow.push(
                      <li class="flex items-center">
                        {first.is_active || first.current ? (
                          <span class="text-gray-900 font-medium text-sm">{first.name}</span>
                        ) : (
                          <a href={first.url} class="hover:text-[#f04e00] transition-colors text-sm">{first.name}</a>
                        )}
                      </li>
                    );
                    
                    // Segundo elemento (Tipo)
                    if (second) {
                      toShow.push(
                        <li class="flex items-center">
                          <span class="mx-2 text-gray-400">|</span>
                          {second.is_active || second.current ? (
                            <span class="text-gray-900 font-medium text-sm">{second.name}</span>
                          ) : (
                            <a href={second.url} class="hover:text-[#f04e00] transition-colors text-sm">{second.name}</a>
                          )}
                        </li>
                      );
                    }
                    
                    // Tercer elemento (Ciudad) si cabe
                    if (third && filteredCrumbs.length > 5) {
                      toShow.push(
                        <li class="flex items-center">
                          <span class="mx-2 text-gray-400">|</span>
                          {third.is_active || third.current ? (
                            <span class="text-gray-900 font-medium text-sm">{third.name}</span>
                          ) : (
                            <a href={third.url} class="hover:text-[#f04e00] transition-colors text-sm">{third.name}</a>
                          )}
                        </li>
                      );
                    }
                    
                    // Cuarto elemento (Sector) si cabe y hay muchos elementos
                    if (fourth && filteredCrumbs.length > 6 && fourth !== last && fourth !== secondLast) {
                      toShow.push(
                        <li class="flex items-center">
                          <span class="mx-2 text-gray-400">|</span>
                          {fourth.is_active || fourth.current ? (
                            <span class="text-gray-900 font-medium text-sm">{fourth.name}</span>
                          ) : (
                            <a href={fourth.url} class="hover:text-[#f04e00] transition-colors text-sm">{fourth.name}</a>
                          )}
                        </li>
                      );
                    }
                    
                    // Truncado solo si hay elementos intermedios que omitir
                    if (filteredCrumbs.length > 6) {
                      toShow.push(
                        <li class="flex items-center">
                          <span class="mx-2 text-gray-400">|</span>
                          <span class="text-gray-500 text-sm">...</span>
                        </li>
                      );
                    }
                    
                    // Penúltimo elemento si es relevante
                    if (secondLast && secondLast !== fourth && secondLast !== third && secondLast !== second) {
                      toShow.push(
                        <li class="flex items-center">
                          <span class="mx-2 text-gray-400">|</span>
                          {secondLast.is_active || secondLast.current ? (
                            <span class="text-gray-900 font-medium text-sm">{secondLast.name}</span>
                          ) : (
                            <a href={secondLast.url} class="hover:text-[#f04e00] transition-colors text-sm">{secondLast.name}</a>
                          )}
                        </li>
                      );
                    }
                    
                    // Último elemento
                    toShow.push(
                      <li class="flex items-center">
                        <span class="mx-2 text-gray-400">|</span>
                        <span class="text-gray-900 font-medium text-sm">{last.name}</span>
                      </li>
                    );
                    
                    return toShow;
                  }
                  return [];
                })()}
              </ol>
            </nav>
          )}
          
          <!-- BREADCRUMB MÓVIL SIMPLIFICADO -->
          {breadcrumbs && breadcrumbs.length > 0 && (
            <nav class="md:hidden flex items-center flex-1 justify-center">
              <ol class="flex items-center text-gray-700">
                {(() => {
                  const filteredCrumbs = breadcrumbs.filter(crumb => 
                    !crumb.name.toLowerCase().includes('inicio') && 
                    !crumb.name.toLowerCase().includes('home')
                  );
                  
                  if (filteredCrumbs.length > 2) {
                    const first = filteredCrumbs[0];
                    const last = filteredCrumbs[filteredCrumbs.length - 1];
                    
                    return [
                      <li class="flex items-center">
                        {first.is_active || first.current ? (
                          <span class="text-gray-900 font-medium text-xs">{first.name}</span>
                        ) : (
                          <a href={first.url} class="hover:text-[#f04e00] transition-colors text-xs">{first.name}</a>
                        )}
                      </li>,
                      <li class="flex items-center">
                        <span class="mx-1 text-gray-400">|</span>
                        <span class="text-gray-500 text-xs">...</span>
                        <span class="mx-1 text-gray-400">|</span>
                      </li>,
                      <li class="flex items-center">
                        <span class="text-gray-900 font-medium text-xs">{last.name}</span>
                      </li>
                    ];
                  } else {
                    return filteredCrumbs.map((crumb, index) => (
                      <li class="flex items-center">
                        {index > 0 && (
                          <span class="mx-1 text-gray-400">|</span>
                        )}
                        {crumb.is_active || crumb.current ? (
                          <span class="text-gray-900 font-medium text-xs">{crumb.name}</span>
                        ) : (
                          <a href={crumb.url} class="hover:text-[#f04e00] transition-colors text-xs">{crumb.name}</a>
                        )}
                      </li>
                    ));
                  }
                })()}
              </ol>
            </nav>
          )}
          
          <!-- ACCIONES DERECHAS -->
          <div class="flex items-center gap-4">
            <!-- Selector de Idioma -->
            <div class="relative">
              <button 
                id="language-selector"
                class="flex items-center gap-1 px-2 py-1 text-gray-700 hover:text-[#f04e00] transition-colors rounded-md border border-gray-300 hover:border-[#f04e00]"
                title="Cambiar idioma"
              >
                <i class="fas fa-globe w-4 h-4"></i>
                <span id="current-language" class="text-sm font-medium">ES</span>
                <i id="language-chevron" class="fas fa-chevron-down w-3 h-3 transition-transform duration-200"></i>
              </button>
              
              <div 
                id="language-dropdown"
                class="absolute right-0 top-full mt-1 bg-white border border-gray-200 rounded-md shadow-lg z-50 min-w-[100px] hidden"
              >
                <a href="#" class="language-option flex items-center gap-2 px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 hover:text-[#f04e00] transition-colors" data-lang="es">
                  🇩🇴 Español
                </a>
                <a href="#" class="language-option flex items-center gap-2 px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 hover:text-[#f04e00] transition-colors border-t border-gray-100" data-lang="en">
                  🇺🇸 English
                </a>
                <a href="#" class="language-option flex items-center gap-2 px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 hover:text-[#f04e00] transition-colors border-t border-gray-100" data-lang="fr">
                  🇫🇷 Français
                </a>
              </div>
            </div>

            <!-- Favorites with Counter -->
            <div class="relative">
              <a 
                href="/favoritos" 
                class="p-2 text-gray-700 hover:text-[#f04e00] transition-colors relative flex items-center justify-center"
                title="Mis favoritos"
              >
                <i class="fas fa-heart w-6 h-6 text-xl"></i>
                <span 
                  id="favorites-counter" 
                  class="absolute bottom-0 right-0 bg-[#f04e00] text-white rounded-full min-w-[16px] h-4 flex items-center justify-center font-medium px-1 hidden shadow-sm"
                  style="font-size: 10px; line-height: 1; transform: translate(2px, -2px);"
                >
                  0
                </span>
              </a>
            </div>

            <!-- Contáctanos -->
            <a 
              href="/contacto" 
              class="hidden sm:inline-block px-3 py-1.5 border border-[#f04e00] text-[#f04e00] rounded-md hover:bg-[#f04e00] hover:text-white transition-colors text-sm"
            >
              Contáctanos
            </a>
            
            <!-- Mobile menu button -->
            <button class="md:hidden p-2 text-gray-700">
              <i class="fas fa-bars w-6 h-6 text-xl"></i>
            </button>
          </div>
        </div>
      </div>
    </header>

    <!-- Script para breadcrumb inteligente y selector de idioma -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        console.log('DOM loaded, checking for language selector elements...');
        console.log('Available hreflangData:', window.hreflangData);
        
        // Breadcrumb inteligente
        const fullBreadcrumb = document.getElementById('breadcrumb-full');
        const truncatedBreadcrumb = document.getElementById('breadcrumb-truncated');
        
        if (fullBreadcrumb && truncatedBreadcrumb) {
          console.log('Breadcrumb elements found');
          function checkBreadcrumbWidth() {
            const container = fullBreadcrumb.parentElement;
            const containerWidth = container.offsetWidth;
            const breadcrumbWidth = fullBreadcrumb.scrollWidth;
            
            if (breadcrumbWidth <= containerWidth - 40) {
              fullBreadcrumb.classList.remove('hidden');
              truncatedBreadcrumb.classList.add('hidden');
            } else {
              fullBreadcrumb.classList.add('hidden');
              truncatedBreadcrumb.classList.remove('hidden', 'flex');
              truncatedBreadcrumb.classList.add('flex');
            }
          }
          
          setTimeout(checkBreadcrumbWidth, 100);
          window.addEventListener('resize', checkBreadcrumbWidth);
        }

        // Selector de idioma - debugging
        const languageSelector = document.getElementById('language-selector');
        const languageDropdown = document.getElementById('language-dropdown');
        const languageChevron = document.getElementById('language-chevron');
        const currentLanguage = document.getElementById('current-language');
        
        console.log('Language selector elements:', {
          languageSelector,
          languageDropdown, 
          languageChevron,
          currentLanguage
        });
        
        // Solo ejecutar si todos los elementos existen
        if (languageSelector && languageDropdown && languageChevron && currentLanguage) {
          console.log('All language selector elements found, initializing...');
          
          // Detectar idioma actual de la URL o usar default
          function getCurrentLanguage() {
            const urlParams = new URLSearchParams(window.location.search);
            const langParam = urlParams.get('lang');
            const pathLang = window.location.pathname.match(/^\/(en|fr|es)\//);
            
            if (langParam) return langParam;
            if (pathLang) return pathLang[1];
            return 'es'; // default
          }

          // Actualizar display del idioma actual
          function updateCurrentLanguageDisplay() {
            const lang = getCurrentLanguage();
            const langMap = {
              'es': 'ES',
              'en': 'EN', 
              'fr': 'FR'
            };
            currentLanguage.textContent = langMap[lang] || 'ES';
            console.log('Current language set to:', langMap[lang] || 'ES');
          }

          // Cambiar idioma usando hreflang data
          function changeLanguage(newLang) {
            console.log('Changing language to:', newLang);
            console.log('hreflangData:', window.hreflangData);
            
            if (window.hreflangData && window.hreflangData[newLang]) {
              console.log('Redirecting to:', window.hreflangData[newLang]);
              window.location.href = window.hreflangData[newLang];
            } else {
              console.warn(`No hreflang URL found for language: ${newLang}`);
              // Fallback: try to construct URL manually or show error
              alert('Traducción no disponible para esta página');
            }
          }

          // Inicializar
          updateCurrentLanguageDisplay();

          // Toggle dropdown
          languageSelector.addEventListener('click', function(e) {
            console.log('Language selector clicked');
            e.preventDefault();
            e.stopPropagation(); // Evitar que el evento se propague al document
            
            const isOpen = !languageDropdown.classList.contains('hidden');
            
            if (isOpen) {
              console.log('Closing dropdown');
              languageDropdown.classList.add('hidden');
              languageChevron.style.transform = 'rotate(0deg)';
            } else {
              console.log('Opening dropdown');
              languageDropdown.classList.remove('hidden');
              languageChevron.style.transform = 'rotate(180deg)';
            }
          });

          // Manejar selección de idioma
          const languageOptions = document.querySelectorAll('.language-option');
          console.log('Language options found:', languageOptions.length);
          
          languageOptions.forEach(option => {
            option.addEventListener('click', function(e) {
              e.preventDefault();
              e.stopPropagation(); // Evitar que el evento se propague
              const selectedLang = this.getAttribute('data-lang');
              console.log('Language option clicked:', selectedLang);
              changeLanguage(selectedLang);
            });
          });

          // Cerrar dropdown al hacer click fuera
          document.addEventListener('click', function(e) {
            if (!languageSelector.contains(e.target) && !languageDropdown.contains(e.target)) {
              console.log('Clicking outside, closing dropdown');
              languageDropdown.classList.add('hidden');
              languageChevron.style.transform = 'rotate(0deg)';
            }
          });
          
        } else {
          console.error('Some language selector elements not found');
        }
      });
    </script>

    <!-- Main Content -->
    <main class="min-h-screen">
      <slot />
    </main>

    <!-- Footer -->
    <footer class="bg-slate-900 text-white">
      <div class="container mx-auto px-4 py-12">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-8">
          
          <!-- Company Info -->
          <div class="lg:col-span-2">
            <h3 class="text-2xl font-bold text-white mb-4">CLIC Inmobiliaria</h3>
            <p class="text-gray-300 mb-6 leading-relaxed">
              Tu socio de confianza en el mercado inmobiliario de República Dominicana.
            </p>
            
            <!-- Firma de René -->
            <div class="mb-6">
              <img 
                src="/rene-castillo-firma.png" 
                alt="Firma de René Castillo, Fundador de CLIC Inmobiliaria"
                class="h-12 md:h-16 w-auto opacity-90 hover:opacity-100 transition-opacity"
              />
            </div>
            
            <!-- Información de Contacto -->
            <div class="space-y-3 text-gray-400">
              <div class="flex items-start gap-3">
                <i class="fas fa-map-marker-alt w-5 h-5 mt-0.5 flex-shrink-0"></i>
                <div>
                  <div class="font-medium text-white">Oficina Principal</div>
                  <div>C. Erik Leonard Ekman 34, Santo Domingo, D.N.</div>
                  <div class="text-sm mt-1">Lun-Vie: 9:00-18:00 | Sáb: 9:00-15:00</div>
                </div>
              </div>
              
              <div class="flex items-center gap-3">
                <i class="fas fa-phone w-5 h-5 flex-shrink-0"></i>
                <div>
                  <a href="tel:+18295148080" class="hover:text-[#f04e00] transition-colors font-medium">
                    (829) 514-8080
                  </a>
                  <div class="text-sm">Llamadas y WhatsApp</div>
                </div>
              </div>
              
              <div class="flex items-center gap-3">
                <i class="fas fa-envelope w-5 h-5 flex-shrink-0"></i>
                <a href="mailto:contacto@clic.do" class="hover:text-[#f04e00] transition-colors">
                  contacto@clic.do
                </a>
              </div>
            </div>
          </div>
          
          <!-- Propiedades por Zona -->
          <div>
            <h4 class="text-lg font-semibold text-white mb-4">Propiedades por Zona</h4>
            <ul class="space-y-2 text-gray-400">
              <li><a href="/comprar/apartamentos/distrito-nacional" class="hover:text-[#f04e00] transition-colors">Apartamentos Distrito Nacional</a></li>
              <li><a href="/comprar/villas/punta-cana" class="hover:text-[#f04e00] transition-colors">Villas Punta Cana</a></li>
              <li><a href="/comprar/casas/bella-vista" class="hover:text-[#f04e00] transition-colors">Casas Bella Vista</a></li>
              <li><a href="/comprar/penthouses/piantini" class="hover:text-[#f04e00] transition-colors">Penthouses Piantini</a></li>
              <li><a href="/comprar/condos/cap-cana" class="hover:text-[#f04e00] transition-colors">Condos Cap Cana</a></li>
            </ul>
          </div>
          
          <!-- Servicios -->
          <div>
            <h4 class="text-lg font-semibold text-white mb-4">Nuestros Servicios</h4>
            <ul class="space-y-2 text-gray-400">
              <li><a href="/comprar" class="hover:text-[#f04e00] transition-colors">Comprar Propiedades</a></li>
              <li><a href="/vender" class="hover:text-[#f04e00] transition-colors">Vender su Propiedad</a></li>
              <li><a href="/alquilar" class="hover:text-[#f04e00] transition-colors">Alquilar Inmuebles</a></li>
              <li><a href="/rentas-vacacionales" class="hover:text-[#f04e00] transition-colors">Rentas Vacacionales</a></li>
            </ul>
          </div>
          
          <!-- Recursos + Redes -->
          <div>
            <h4 class="text-lg font-semibold text-white mb-4">Recursos</h4>
            <ul class="space-y-2 text-gray-400 mb-6">
              <li><a href="/articulos" class="hover:text-[#f04e00] transition-colors">Artículos Inmobiliarios</a></li>
              <li><a href="/videos" class="hover:text-[#f04e00] transition-colors">Canal de Videos</a></li>
            </ul>
            
            <!-- Redes Sociales -->
            <div>
              <h5 class="text-sm font-semibold text-white mb-3">Síguenos</h5>
              <div class="flex flex-col space-y-2">
                <a href="https://www.youtube.com/@clicinmobiliaria" target="_blank" rel="noopener" class="flex items-center gap-2 text-gray-400 hover:text-red-500 transition-colors text-sm">
                  <i class="fab fa-youtube w-4 h-4"></i>
                  <span>YouTube - 200K+ suscriptores</span>
                </a>
                <a href="https://www.instagram.com/renecastillotv/" target="_blank" rel="noopener" class="flex items-center gap-2 text-gray-400 hover:text-pink-500 transition-colors text-sm">
                  <i class="fab fa-instagram w-4 h-4"></i>
                  <span>Instagram</span>
                </a>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Copyright -->
        <div class="border-t border-gray-700 mt-12 pt-8">
          <div class="text-center text-gray-400 text-sm">
            &copy; 2024 CLIC Inmobiliaria SRL. Todos los derechos reservados.
          </div>
        </div>
      </div>
    </footer>
  </body>
</html>

<style is:global>
  body {
    font-family: 'Inter', sans-serif;
  }
</style>