---
export interface Props {
  videos?: Array<{
    id: string;
    title: string;
    description?: string;
    thumbnail: string;
    duration: string;
    views?: string;
    category: 'decoracion' | 'casa-famosos' | 'proyectos' | 'recorridos' | 'entrevistas' | 'tips';
    videoId: string;
    videoSlug: string;
    featured?: boolean;
  }>;
  title?: string;
  subtitle?: string;
  layout?: 'grid' | 'carousel' | 'featured';
  propertyRelated?: boolean;
}

const { 
  videos, 
  title = "Contenido Exclusivo CLIC", 
  subtitle = "Descubre más contenido exclusivo sobre bienes raíces",
  layout = 'grid',
  propertyRelated = false
} = Astro.props;

if (!videos || videos.length === 0) return null;

// Mapeo de categorías a etiquetas visuales y URLs
const categoryLabels = {
  'decoracion': { label: 'Decoración', color: 'bg-purple-500', slug: 'tips-de-decoracion' },
  'casa-famosos': { label: 'Casa de Famosos', color: 'bg-red-500', slug: 'la-casa-de-los-famosos' },
  'proyectos': { label: 'Proyectos', color: 'bg-blue-500', slug: 'proyectos-nuevos' },
  'recorridos': { label: 'Recorridos', color: 'bg-green-500', slug: 'recorridos-de-propiedades' },
  'entrevistas': { label: 'Entrevistas', color: 'bg-yellow-500', slug: 'entrevistas-exclusivas' },
  'tips': { label: 'Tips', color: 'bg-pink-500', slug: 'tips-de-inversion' }
};

// Función helper para obtener la categoría con fallback
function getCategoryInfo(category: string) {
  return categoryLabels[category] || { label: 'Video', color: 'bg-gray-500', slug: 'videos' };
}

// Función para generar URL del video
function getVideoUrl(video: any) {
  const categoryInfo = getCategoryInfo(video.category);
  return `/videos/${categoryInfo.slug}/${video.videoSlug}`;
}

// Separar video destacado si existe
const featuredVideo = videos.find(v => v.featured);
const regularVideos = videos.filter(v => !v.featured);
---

<section class="py-16 bg-gradient-to-b from-white to-gray-50">
  <div class="container mx-auto px-4">
    {/* Header mejorado sin icono */}
    <div class="flex items-center justify-between mb-10">
      <div>
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-2">
          {propertyRelated ? 'Videos relacionados con esta propiedad' : title}
        </h2>
        {subtitle && (
          <p class="text-lg text-gray-600">{subtitle}</p>
        )}
        <div class="flex items-center gap-2 mt-3">
          <div class="flex items-center gap-1">
            <svg class="w-6 h-6 text-red-600" fill="currentColor" viewBox="0 0 24 24">
              <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
            </svg>
            <span class="text-sm font-medium text-gray-700">200K Suscriptores</span>
          </div>
          <span class="text-gray-400">•</span>
          <span class="text-sm text-gray-600">El canal inmobiliario #1 de RD</span>
        </div>
      </div>
      <a 
        href="/videos" 
        class="hidden md:flex items-center gap-2 px-4 py-2 bg-[#f04e00] text-white rounded-lg hover:bg-[#d94400] transition-colors"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
        </svg>
        Ver todos los videos
      </a>
    </div>

    {/* Layout Featured + Grid */}
    {featuredVideo && layout === 'featured' ? (
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
        {/* Video destacado grande */}
        <div class="lg:col-span-1">
          <a 
            href={getVideoUrl(featuredVideo)}
            class="group block relative"
          >
            <div class="relative aspect-video overflow-hidden rounded-xl shadow-lg">
              <img 
                src={featuredVideo.thumbnail} 
                alt={featuredVideo.title}
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-transparent to-transparent"></div>
              
              {/* Play button overlay */}
              <div class="absolute inset-0 flex items-center justify-center">
                <div class="w-20 h-20 bg-red-600 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform">
                  <svg class="w-10 h-10 text-white ml-1" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M8 5v14l11-7z"/>
                  </svg>
                </div>
              </div>
              
              {/* Badge destacado */}
              <span class="absolute top-4 left-4 bg-[#f04e00] text-white px-3 py-1 rounded-full text-xs font-medium">
                Destacado
              </span>
              
              {/* Categoría */}
              <span class={`absolute top-4 right-4 px-3 py-1 ${getCategoryInfo(featuredVideo.category).color} text-white text-xs font-medium rounded-full`}>
                {getCategoryInfo(featuredVideo.category).label}
              </span>
              
              {/* Duración */}
              <span class="absolute bottom-4 right-4 bg-black/80 text-white text-sm px-2 py-1 rounded">
                {featuredVideo.duration}
              </span>
            </div>
            
            <div class="mt-4">
              <h3 class="text-xl font-bold text-gray-900 group-hover:text-[#f04e00] transition-colors">
                {featuredVideo.title}
              </h3>
              {featuredVideo.description && (
                <p class="text-gray-600 mt-2 line-clamp-2">{featuredVideo.description}</p>
              )}
              {featuredVideo.views && (
                <p class="text-sm text-gray-500 mt-2">{featuredVideo.views} vistas</p>
              )}
            </div>
          </a>
        </div>
        
        {/* Videos regulares en grid */}
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
          {regularVideos.slice(0, 4).map((video) => (
            <a 
              href={getVideoUrl(video)}
              class="group block"
              key={video.id}
            >
              <div class="relative aspect-video overflow-hidden rounded-lg">
                <img 
                  src={video.thumbnail} 
                  alt={video.title}
                  class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                />
                <div class="absolute inset-0 bg-black/20 group-hover:bg-black/30 transition-colors flex items-center justify-center">
                  <div class="w-12 h-12 bg-white/90 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity">
                    <svg class="w-6 h-6 text-red-600 ml-1" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M8 5v14l11-7z"/>
                    </svg>
                  </div>
                </div>
                
                {/* Categoría */}
                <span class={`absolute top-2 left-2 px-2 py-1 ${getCategoryInfo(video.category).color} text-white text-xs font-medium rounded`}>
                  {getCategoryInfo(video.category).label}
                </span>
                
                <span class="absolute bottom-2 right-2 bg-black/80 text-white text-xs px-2 py-1 rounded">
                  {video.duration}
                </span>
              </div>
              <h4 class="mt-2 text-sm font-medium text-gray-900 group-hover:text-[#f04e00] transition-colors line-clamp-2">
                {video.title}
              </h4>
            </a>
          ))}
        </div>
      </div>
    ) : (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        {videos.map((video) => (
          <a 
            href={getVideoUrl(video)}
            class="group block"
            key={video.id}
          >
            <div class="relative aspect-video overflow-hidden rounded-lg shadow-md group-hover:shadow-xl transition-shadow">
              <img 
                src={video.thumbnail} 
                alt={video.title}
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity"></div>
              
              {/* Play button */}
              <div class="absolute inset-0 flex items-center justify-center">
                <div class="w-14 h-14 bg-white/90 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all transform scale-75 group-hover:scale-100">
                  <svg class="w-7 h-7 text-red-600 ml-1" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M8 5v14l11-7z"/>
                  </svg>
                </div>
              </div>
              
              {/* Categoría */}
              <span class={`absolute top-3 left-3 px-2 py-1 ${getCategoryInfo(video.category).color} text-white text-xs font-medium rounded`}>
                {getCategoryInfo(video.category).label}
              </span>
              
              {/* Duración */}
              <span class="absolute bottom-3 right-3 bg-black/80 text-white text-xs px-2 py-1 rounded">
                {video.duration}
              </span>
            </div>
            
            <div class="mt-3">
              <h3 class="font-semibold text-gray-900 group-hover:text-[#f04e00] transition-colors line-clamp-2">
                {video.title}
              </h3>
              {video.description && (
                <p class="text-sm text-gray-600 mt-1 line-clamp-2">{video.description}</p>
              )}
              {video.views && (
                <p class="text-sm text-gray-500 mt-1">{video.views} vistas</p>
              )}
            </div>
          </a>
        ))}
      </div>
    )}

    {/* Call to action mejorado */}
    <div class="text-center mt-10">
      <a 
        href="/videos" 
        class="inline-flex items-center gap-2 text-[#f04e00] hover:text-[#d94400] font-medium transition-colors"
      >
        Explorar todas las categorías de videos
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
  </div>
</section>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>