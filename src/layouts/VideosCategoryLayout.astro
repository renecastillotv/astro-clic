---
// src/layouts/VideosCategoryLayout.astro - Layout moderno para categorías de videos con paginación
import Layout from './Layout.astro';

// ===================================================================
// FUNCIONES HELPER PARA VALIDACIÓN DEFENSIVA
// ===================================================================

function safeGet(obj, path, defaultValue = null) {
  try {
    return path.split('.').reduce((current, key) => current && current[key], obj) || defaultValue;
  } catch (error) {
    console.warn('safeGet error:', error, 'path:', path);
    return defaultValue;
  }
}

function safeArray(arr, defaultValue = []) {
  return Array.isArray(arr) ? arr : defaultValue;
}

function safeString(str, defaultValue = '') {
  return typeof str === 'string' ? str : defaultValue;
}

function safeObject(obj, defaultValue = {}) {
  return obj && typeof obj === 'object' && !Array.isArray(obj) ? obj : defaultValue;
}

function safeNumber(num, defaultValue = 0) {
  return typeof num === 'number' && !isNaN(num) ? num : defaultValue;
}

// ===================================================================
// EXTRACCIÓN DE DATOS DEL PROP CON VALIDACIÓN DEFENSIVA
// ===================================================================

const { data } = Astro.props;
const language = safeString(data?.language, 'es');
const categorySlug = safeString(data?.category?.slug || data?.categorySlug || data?.slug, 'general');

// ===================================================================
// PROCESAMIENTO DEFENSIVO DE DATOS
// ===================================================================

let categoryData = safeObject(data);

// Configuraciones de categorías de videos
const categoryConfigs = {
  'lanzamientos': {
    title: language === 'es' ? 'Lanzamientos' : language === 'en' ? 'New Launches' : 'Nouveaux Lancements',
    description: language === 'es' ? 'Los proyectos inmobiliarios más nuevos y exclusivos de República Dominicana.' :
                 language === 'en' ? 'The newest and most exclusive real estate projects in Dominican Republic.' :
                 'Les projets immobiliers les plus nouveaux et exclusifs de République dominicaine.',
    icon: 'fa-rocket'
  },
  'consejos': {
    title: language === 'es' ? 'Consejos y Tips' : language === 'en' ? 'Tips & Advice' : 'Conseils et Astuces',
    description: language === 'es' ? 'Consejos expertos para comprar, vender, alquilar e invertir en propiedades.' :
                 language === 'en' ? 'Expert advice for buying, selling, renting and investing in properties.' :
                 'Conseils d\'experts pour acheter, vendre, louer et investir dans l\'immobilier.',
    icon: 'fa-lightbulb'
  },
  'diseno-y-decoracion': {
    title: language === 'es' ? 'Diseño y Decoración' : language === 'en' ? 'Design & Decoration' : 'Design et Décoration',
    description: language === 'es' ? 'Ideas, tendencias y consejos profesionales para transformar tu hogar.' :
                 language === 'en' ? 'Ideas, trends and professional advice to transform your home.' :
                 'Idées, tendances et conseils professionnels pour transformer votre maison.',
    icon: 'fa-palette'
  },
  'la-casa-de-los-famosos': {
    title: language === 'es' ? 'La Casa de Los Famosos' : language === 'en' ? 'Celebrity Homes' : 'Maisons des Célébrités',
    description: language === 'es' ? 'Tours exclusivos por las propiedades más impresionantes de las celebridades.' :
                 language === 'en' ? 'Exclusive tours of the most impressive properties of Dominican celebrities.' :
                 'Visites exclusives des propriétés les plus impressionnantes des célébrités.',
    icon: 'fa-star'
  },
  'entrevistas': {
    title: language === 'es' ? 'Entrevistas Exclusivas' : language === 'en' ? 'Exclusive Interviews' : 'Entretiens Exclusifs',
    description: language === 'es' ? 'Conversaciones íntimas con personalidades sobre sus hogares e inversiones.' :
                 language === 'en' ? 'Intimate conversations with personalities about their homes and investments.' :
                 'Conversations intimes avec des personnalités sur leurs maisons et investissements.',
    icon: 'fa-microphone'
  },
  'recorridos': {
    title: language === 'es' ? 'Recorridos de Propiedades' : language === 'en' ? 'Property Tours' : 'Visites de Propriétés',
    description: language === 'es' ? 'Tours detallados por propiedades disponibles para venta y alquiler.' :
                 language === 'en' ? 'Detailed tours of properties available for sale and rent.' :
                 'Visites détaillées de propriétés disponibles à la vente et à la location.',
    icon: 'fa-video'
  }
};

// Obtener configuración de categoría
const currentConfig = categoryConfigs[categorySlug] || categoryConfigs['recorridos'];

// Crear datos seguros de categoría
const safeCategoryData = {
  language: language,
  category: categorySlug,
  categorySlug: categorySlug,
  title: safeString(data?.category?.name || data?.title || currentConfig.title),
  description: safeString(data?.category?.description || data?.description || currentConfig.description),
  icon: safeString(currentConfig.icon),
  slug: safeString(data?.category?.slug || categorySlug),
  url: safeString(data?.category?.url || `#${categorySlug}`)
};

// Procesar videos
const rawVideos = safeArray(categoryData.videos);
const safeVideos = rawVideos.map((video, index) => ({
  id: safeString(video.id, `video-${index}`),
  slug: safeString(video.slug, `video-${index}`),
  title: safeString(video.title, 'Video sin título'),
  description: safeString(video.description, 'Descripción no disponible'),
  thumbnail: safeString(video.thumbnail, 'https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=800&h=600&fit=crop'),
  duration: safeString(video.duration, '0:00'),
  publishedAt: safeString(video.publishedAt, new Date().toISOString()),
  views: safeNumber(video.views, 0),
  featured: Boolean(video.featured),
  author: safeObject(video.author, {
    name: 'Equipo CLIC',
    avatar: '/images/team/clic-experts.jpg',
    position: language === 'es' ? 'Especialista Inmobiliario' : language === 'en' ? 'Real Estate Specialist' : 'Spécialiste Immobilier'
  }),
  url: safeString(video.url, '#')
}));

// SEO Seguro
const safeSeo = {
  title: safeString(data?.seo?.title, `${safeCategoryData.title} - Videos CLIC`),
  description: safeString(data?.seo?.description, safeCategoryData.description),
  hreflang: safeObject(data?.seo?.hreflang, {}),  // Agregar hreflang del backend
  breadcrumbs: safeArray(data?.seo?.breadcrumbs, [
    {
      name: language === 'en' ? 'Home' : language === 'fr' ? 'Accueil' : 'Inicio',
      url: language === 'es' ? '/' : `/${language}/`
    },
    {
      name: language === 'en' ? 'Videos' : language === 'fr' ? 'Vidéos' : 'Videos',
      url: language === 'es' ? '/videos' : `/${language}/videos`
    },
    {
      name: safeCategoryData.title,
      url: language === 'es' ? `/videos/${categorySlug}` : `/${language}/videos/${categorySlug}`
    }
  ])
};

// Layout Props
const layoutProps = {
  title: safeSeo.title,
  description: safeSeo.description,
  ogImage: safeGet(data, 'seo.ogImage') || '/og-videos.jpg',
  canonical: safeGet(data, 'seo.canonical_url') || (language === 'es' ? `/videos/${categorySlug}` : `/${language}/videos/${categorySlug}`),
  keywords: safeGet(data, 'seo.keywords') || `${safeCategoryData.title}, videos inmobiliarios`,
  hreflangData: safeSeo.hreflang || {},
  globalConfig: data?.globalConfig || {},
  language: language,
  trackingString: data?.trackingString || '',
  breadcrumbs: safeSeo.breadcrumbs
};

// ===================================================================
// PAGINACIÓN CLIENT-SIDE
// ===================================================================

const ITEMS_PER_PAGE = 12;
const totalVideos = safeVideos.length;
const totalPages = Math.ceil(totalVideos / ITEMS_PER_PAGE);

// ===================================================================
// TEXTOS POR IDIOMA
// ===================================================================

const TEXTS = {
  es: {
    watchVideo: 'Ver video',
    duration: 'duración',
    views: 'vistas',
    author: 'Por',
    videos: 'videos',
    noVideos: 'Aún no hay videos en esta categoría',
    noVideosDesc: 'Vuelve pronto para encontrar nuevo contenido.',
    backToVideos: 'Ver todos los videos',
    showing: 'Mostrando',
    of: 'de',
    sortBy: 'Ordenar por',
    mostRecent: 'Más recientes',
    mostViewed: 'Más vistos',
    oldest: 'Más antiguos',
    previous: 'Anterior',
    next: 'Siguiente',
    page: 'Página'
  },
  en: {
    watchVideo: 'Watch video',
    duration: 'duration',
    views: 'views',
    author: 'By',
    videos: 'videos',
    noVideos: 'No videos in this category yet',
    noVideosDesc: 'Check back soon for new content.',
    backToVideos: 'See all videos',
    showing: 'Showing',
    of: 'of',
    sortBy: 'Sort by',
    mostRecent: 'Most recent',
    mostViewed: 'Most viewed',
    oldest: 'Oldest',
    previous: 'Previous',
    next: 'Next',
    page: 'Page'
  },
  fr: {
    watchVideo: 'Regarder',
    duration: 'durée',
    views: 'vues',
    author: 'Par',
    videos: 'vidéos',
    noVideos: 'Pas encore de vidéos dans cette catégorie',
    noVideosDesc: 'Revenez bientôt pour du nouveau contenu.',
    backToVideos: 'Voir toutes les vidéos',
    showing: 'Affichage',
    of: 'de',
    sortBy: 'Trier par',
    mostRecent: 'Plus récents',
    mostViewed: 'Plus vus',
    oldest: 'Plus anciens',
    previous: 'Précédent',
    next: 'Suivant',
    page: 'Page'
  }
};

const text = TEXTS[language] || TEXTS.es;

// URLs según idioma
const routes = {
  es: { videosBase: '/videos' },
  en: { videosBase: '/en/videos' },
  fr: { videosBase: '/fr/videos' }
};

const currentRoutes = routes[language] || routes.es;

console.log('✅ VideosCategoryLayout preparado:', {
  language,
  category: categorySlug,
  title: safeCategoryData.title,
  videosCount: safeVideos.length,
  totalPages
});
---

<Layout {...layoutProps}>
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

  <div class="min-h-screen bg-white">

    <!-- Hero Section -->
    <section class="relative bg-gradient-to-br from-gray-900 via-slate-800 to-gray-900 py-12 md:py-16 overflow-hidden">
      <div class="absolute inset-0 bg-gradient-to-b from-transparent via-black/20 to-black/40"></div>
      <div class="absolute top-0 left-0 w-72 h-72 bg-[#f04e00] rounded-full filter blur-[120px] opacity-10"></div>
      <div class="absolute bottom-0 right-0 w-72 h-72 bg-[#f04e00] rounded-full filter blur-[120px] opacity-10"></div>

      <div class="w-full px-4 relative z-10">
        <div class="max-w-6xl mx-auto">

          <!-- Breadcrumbs -->
          <nav class="text-sm mb-6 text-center" aria-label="Breadcrumb">
            {safeSeo.breadcrumbs.map((breadcrumb, index) => (
              <span key={index}>
                {index > 0 && <span class="mx-2 text-gray-400">•</span>}
                {index === safeSeo.breadcrumbs.length - 1 ? (
                  <span class="text-[#f04e00] font-medium">{breadcrumb.name}</span>
                ) : (
                  <a href={breadcrumb.url} class="text-gray-300 hover:text-white transition-colors">
                    {breadcrumb.name}
                  </a>
                )}
              </span>
            ))}
          </nav>

          <!-- Title -->
          <div class="text-center">
            <div class="flex items-center justify-center gap-4 mb-4">
              <i class={`fas ${safeCategoryData.icon} text-4xl text-white`}></i>
              <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold text-white leading-tight">
                {safeCategoryData.title}
              </h1>
            </div>

            <p class="text-lg md:text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
              {safeCategoryData.description}
            </p>

            {/* Stats */}
            <div class="mt-8">
              <div class="text-3xl font-bold text-white mb-2">{totalVideos}</div>
              <div class="text-sm text-gray-300">{text.videos}</div>
            </div>
          </div>

        </div>
      </div>
    </section>

    <!-- Main Content -->
    <main class="py-12 md:py-16 bg-gray-50">
      <div class="container mx-auto px-4">
        <div class="max-w-7xl mx-auto">

          {safeVideos.length > 0 ? (
            <div>
              <!-- Controls: Sort & Count -->
              <div class="flex flex-col sm:flex-row items-center justify-between mb-8 gap-4">
                <div class="text-sm text-gray-600">
                  <span id="showing-text">{text.showing} <span id="showing-count">1-{Math.min(ITEMS_PER_PAGE, totalVideos)}</span> {text.of} <span id="total-count">{totalVideos}</span> {text.videos}</span>
                </div>

                <div class="flex items-center gap-2">
                  <label for="sort-select" class="text-sm text-gray-600">{text.sortBy}:</label>
                  <select
                    id="sort-select"
                    class="px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f04e00] focus:border-transparent text-sm"
                  >
                    <option value="recent">{text.mostRecent}</option>
                    <option value="views">{text.mostViewed}</option>
                    <option value="oldest">{text.oldest}</option>
                  </select>
                </div>
              </div>

              <!-- Videos Grid -->
              <div id="videos-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-12">
                {safeVideos.map((video) => (
                  <article
                    class="video-card bg-white rounded-lg shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden group"
                    data-published={video.publishedAt}
                    data-views={video.views}
                    key={video.id}
                  >
                    <a href={video.url} class="block">
                      <div class="aspect-video relative overflow-hidden">
                        <img
                          src={video.thumbnail}
                          alt={video.title}
                          class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                          loading="lazy"
                        />

                        <!-- Play button overlay -->
                        <div class="absolute inset-0 bg-black/20 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                          <div class="w-16 h-16 bg-white/90 rounded-full flex items-center justify-center">
                            <i class="fas fa-play text-xl text-[#f04e00] ml-1"></i>
                          </div>
                        </div>

                        <!-- Duration badge -->
                        <div class="absolute bottom-2 right-2 bg-black/70 text-white px-2 py-1 rounded text-xs font-medium">
                          {video.duration}
                        </div>
                      </div>

                      <div class="p-4">
                        <h3 class="font-bold text-gray-900 mb-2 line-clamp-2 group-hover:text-[#f04e00] transition-colors leading-tight text-base">
                          {video.title}
                        </h3>

                        <p class="text-gray-600 mb-3 line-clamp-2 text-sm leading-relaxed">
                          {video.description.replace(/<[^>]*>/g, '').substring(0, 100)}...
                        </p>

                        <div class="flex items-center justify-between text-xs text-gray-500">
                          <div class="flex items-center gap-2">
                            <img
                              src={video.author.avatar}
                              alt={video.author.name}
                              class="w-6 h-6 rounded-full"
                            />
                            <span class="truncate font-medium">{video.author.name}</span>
                          </div>
                          <span class="flex items-center gap-1">
                            <i class="far fa-eye"></i>
                            {video.views.toLocaleString()}
                          </span>
                        </div>
                      </div>
                    </a>
                  </article>
                ))}
              </div>

              <!-- Pagination -->
              {totalPages > 1 && (
                <div id="pagination" class="flex items-center justify-center gap-2">
                  <button
                    id="prev-btn"
                    class="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
                    disabled
                  >
                    <i class="fas fa-chevron-left mr-2"></i>
                    {text.previous}
                  </button>

                  <div id="page-numbers" class="flex items-center gap-2">
                    <!-- Page numbers will be rendered by JS -->
                  </div>

                  <button
                    id="next-btn"
                    class="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
                  >
                    {text.next}
                    <i class="fas fa-chevron-right ml-2"></i>
                  </button>
                </div>
              )}
            </div>
          ) : (
            <!-- Empty State -->
            <div class="text-center py-16 max-w-2xl mx-auto">
              <div class="text-8xl mb-6">🎥</div>
              <h3 class="text-2xl font-bold text-gray-900 mb-4">
                {text.noVideos}
              </h3>
              <p class="text-gray-600 mb-8 text-lg">
                {text.noVideosDesc}
              </p>
              <a
                href={currentRoutes.videosBase}
                class="inline-flex items-center gap-2 bg-[#f04e00] text-white px-6 py-3 rounded-lg font-medium hover:bg-[#d94400] transition-colors"
              >
                <i class="fas fa-arrow-left"></i>
                {text.backToVideos}
              </a>
            </div>
          )}

        </div>
      </div>
    </main>

  </div>
</Layout>

<!-- Client-side pagination and sorting -->
<script define:vars={{ ITEMS_PER_PAGE, totalVideos, totalPages, text }}>
  let currentPage = 1;
  let currentSort = 'recent';
  let allVideos = [];

  // Initialize
  document.addEventListener('DOMContentLoaded', () => {
    allVideos = Array.from(document.querySelectorAll('.video-card'));
    renderPage();

    document.getElementById('sort-select')?.addEventListener('change', (e) => {
      currentSort = e.target.value;
      currentPage = 1;
      sortAndRender();
    });

    document.getElementById('prev-btn')?.addEventListener('click', () => {
      if (currentPage > 1) {
        currentPage--;
        renderPage();
        scrollToTop();
      }
    });

    document.getElementById('next-btn')?.addEventListener('click', () => {
      if (currentPage < totalPages) {
        currentPage++;
        renderPage();
        scrollToTop();
      }
    });
  });

  function sortVideos() {
    allVideos.sort((a, b) => {
      if (currentSort === 'recent') {
        return new Date(b.dataset.published) - new Date(a.dataset.published);
      } else if (currentSort === 'views') {
        return parseInt(b.dataset.views) - parseInt(a.dataset.views);
      } else if (currentSort === 'oldest') {
        return new Date(a.dataset.published) - new Date(b.dataset.published);
      }
      return 0;
    });
  }

  function sortAndRender() {
    sortVideos();
    renderPage();
  }

  function renderPage() {
    const start = (currentPage - 1) * ITEMS_PER_PAGE;
    const end = start + ITEMS_PER_PAGE;

    allVideos.forEach((video, index) => {
      if (index >= start && index < end) {
        video.style.display = 'block';
      } else {
        video.style.display = 'none';
      }
    });

    const showingCount = document.getElementById('showing-count');
    if (showingCount) {
      const actualStart = start + 1;
      const actualEnd = Math.min(end, totalVideos);
      showingCount.textContent = `${actualStart}-${actualEnd}`;
    }

    const prevBtn = document.getElementById('prev-btn');
    const nextBtn = document.getElementById('next-btn');

    if (prevBtn) prevBtn.disabled = currentPage === 1;
    if (nextBtn) nextBtn.disabled = currentPage === totalPages;

    renderPageNumbers();
  }

  function renderPageNumbers() {
    const pageNumbersContainer = document.getElementById('page-numbers');
    if (!pageNumbersContainer) return;

    pageNumbersContainer.innerHTML = '';

    const maxVisible = 7;
    let pages = [];

    if (totalPages <= maxVisible) {
      pages = Array.from({ length: totalPages }, (_, i) => i + 1);
    } else {
      if (currentPage <= 4) {
        pages = [1, 2, 3, 4, 5, '...', totalPages];
      } else if (currentPage >= totalPages - 3) {
        pages = [1, '...', totalPages - 4, totalPages - 3, totalPages - 2, totalPages - 1, totalPages];
      } else {
        pages = [1, '...', currentPage - 1, currentPage, currentPage + 1, '...', totalPages];
      }
    }

    pages.forEach(page => {
      if (page === '...') {
        const ellipsis = document.createElement('span');
        ellipsis.textContent = '...';
        ellipsis.className = 'px-2 text-gray-500';
        pageNumbersContainer.appendChild(ellipsis);
      } else {
        const button = document.createElement('button');
        button.textContent = page;
        button.className = `w-10 h-10 rounded-lg transition-colors ${
          page === currentPage
            ? 'bg-[#f04e00] text-white font-semibold'
            : 'border border-gray-300 hover:bg-gray-100 text-gray-700'
        }`;

        if (page !== currentPage) {
          button.addEventListener('click', () => {
            currentPage = page;
            renderPage();
            scrollToTop();
          });
        }

        pageNumbersContainer.appendChild(button);
      }
    });
  }

  function scrollToTop() {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .aspect-video {
    aspect-ratio: 16 / 9;
  }

  .group:hover .group-hover\:scale-105 {
    transform: scale(1.05);
  }

  .group:hover .group-hover\:text-[#f04e00] {
    color: #f04e00;
  }
</style>
