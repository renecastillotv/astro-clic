---
// src/layouts/TestimonialsCategoryLayout.astro - Layout moderno para categorías de testimonios con paginación
import Layout from './Layout.astro';

// ===================================================================
// FUNCIONES HELPER PARA VALIDACIÓN DEFENSIVA
// ===================================================================

function safeGet(obj, path, defaultValue = null) {
  try {
    return path.split('.').reduce((current, key) => current && current[key], obj) || defaultValue;
  } catch (error) {
    console.warn('safeGet error:', error, 'path:', path);
    return defaultValue;
  }
}

function safeArray(arr, defaultValue = []) {
  return Array.isArray(arr) ? arr : defaultValue;
}

function safeString(str, defaultValue = '') {
  return typeof str === 'string' ? str : defaultValue;
}

function safeObject(obj, defaultValue = {}) {
  return obj && typeof obj === 'object' && !Array.isArray(obj) ? obj : defaultValue;
}

function safeNumber(num, defaultValue = 0) {
  return typeof num === 'number' && !isNaN(num) ? num : defaultValue;
}

// ===================================================================
// EXTRACCIÓN DE DATOS DEL PROP CON VALIDACIÓN DEFENSIVA
// ===================================================================

const { data } = Astro.props;
const language = safeString(data?.language, 'es');
const categorySlug = safeString(data?.category?.slug || data?.categorySlug || data?.slug, 'general');

// ===================================================================
// PROCESAMIENTO DEFENSIVO DE DATOS
// ===================================================================

let categoryData = safeObject(data);

// Configuraciones de categorías de testimonios
const categoryConfigs = {
  'compradores': {
    title: language === 'es' ? 'Compradores Exitosos' : language === 'en' ? 'Successful Buyers' : 'Acheteurs Réussis',
    description: language === 'es' ? 'Historias reales de familias y personas que encontraron su hogar ideal.' :
                 language === 'en' ? 'Real stories of families and people who found their ideal home.' :
                 'Histoires réelles de familles qui ont trouvé leur maison idéale.',
    icon: 'fa-home'
  },
  'vendedores': {
    title: language === 'es' ? 'Vendedores Satisfechos' : language === 'en' ? 'Satisfied Sellers' : 'Vendeurs Satisfaits',
    description: language === 'es' ? 'Propietarios que vendieron sus propiedades de manera rápida y eficiente.' :
                 language === 'en' ? 'Owners who sold their properties quickly and efficiently.' :
                 'Propriétaires qui ont vendu leurs propriétés rapidement et efficacement.',
    icon: 'fa-handshake'
  },
  'inversionistas': {
    title: language === 'es' ? 'Inversionistas' : language === 'en' ? 'Investors' : 'Investisseurs',
    description: language === 'es' ? 'Inversores que han multiplicado su capital con propiedades dominicanas.' :
                 language === 'en' ? 'Investors who have multiplied their capital with Dominican properties.' :
                 'Investisseurs qui ont multiplié leur capital avec des propriétés dominicaines.',
    icon: 'fa-chart-line'
  },
  'inquilinos': {
    title: language === 'es' ? 'Inquilinos' : language === 'en' ? 'Tenants' : 'Locataires',
    description: language === 'es' ? 'Personas que encontraron el alquiler perfecto con nuestra ayuda.' :
                 language === 'en' ? 'People who found the perfect rental with our help.' :
                 'Personnes qui ont trouvé la location parfaite avec notre aide.',
    icon: 'fa-key'
  }
};

// Obtener configuración de categoría
const currentConfig = categoryConfigs[categorySlug] || categoryConfigs['compradores'];

// Crear datos seguros de categoría
const safeCategoryData = {
  language: language,
  category: categorySlug,
  categorySlug: categorySlug,
  title: safeString(data?.category?.name || data?.title || currentConfig.title),
  description: safeString(data?.category?.description || data?.description || currentConfig.description),
  icon: safeString(currentConfig.icon),
  slug: safeString(data?.category?.slug || categorySlug),
  url: safeString(data?.category?.url || `#${categorySlug}`)
};

// Procesar testimonios
const rawTestimonials = safeArray(categoryData.testimonials);
const safeTestimonials = rawTestimonials.map((testimonial, index) => ({
  id: safeString(testimonial.id, `testimonial-${index}`),
  slug: safeString(testimonial.slug, `testimonio-${index}`),
  title: safeString(testimonial.title, 'Testimonio'),
  excerpt: safeString(testimonial.excerpt, 'Historia de éxito'),
  clientName: safeString(testimonial.clientName, 'Cliente'),
  clientAvatar: safeString(testimonial.clientAvatar, '/images/default-avatar.jpg'),
  clientLocation: safeString(testimonial.clientLocation, 'República Dominicana'),
  clientVerified: Boolean(testimonial.clientVerified),
  rating: safeNumber(testimonial.rating, 5),
  featuredImage: safeString(testimonial.featuredImage),
  publishedAt: safeString(testimonial.publishedAt, new Date().toISOString()),
  url: safeString(testimonial.url, '#'),
  agent: safeObject(testimonial.agent, {
    name: 'Equipo CLIC',
    avatar: '/images/team/clic-experts.jpg',
    position: language === 'es' ? 'Asesor Inmobiliario' : language === 'en' ? 'Real Estate Advisor' : 'Conseiller Immobilier'
  })
}));

// SEO Seguro
const safeSeo = {
  title: safeString(data?.seo?.title, `${safeCategoryData.title} - Testimonios CLIC`),
  description: safeString(data?.seo?.description, safeCategoryData.description),
  breadcrumbs: safeArray(data?.seo?.breadcrumbs, [
    {
      name: language === 'en' ? 'Home' : language === 'fr' ? 'Accueil' : 'Inicio',
      url: language === 'es' ? '/' : `/${language}/`
    },
    {
      name: language === 'en' ? 'Testimonials' : language === 'fr' ? 'Témoignages' : 'Testimonios',
      url: language === 'es' ? '/testimonios' : `/${language}/testimonials`
    },
    {
      name: safeCategoryData.title,
      url: language === 'es' ? `/testimonios/${categorySlug}` : `/${language}/testimonials/${categorySlug}`
    }
  ])
};

// Layout Props
const layoutProps = {
  title: safeSeo.title,
  description: safeSeo.description,
  ogImage: safeGet(data, 'seo.ogImage') || '/og-testimonials.jpg',
  canonical: safeGet(data, 'seo.canonical_url') || (language === 'es' ? `/testimonios/${categorySlug}` : `/${language}/testimonials/${categorySlug}`),
  keywords: safeGet(data, 'seo.keywords') || `${safeCategoryData.title}, testimonios inmobiliarios`,
  globalConfig: data?.globalConfig || {},
  language: language,
  breadcrumbs: safeSeo.breadcrumbs
};

// ===================================================================
// PAGINACIÓN CLIENT-SIDE
// ===================================================================

const ITEMS_PER_PAGE = 12;
const totalTestimonials = safeTestimonials.length;
const totalPages = Math.ceil(totalTestimonials / ITEMS_PER_PAGE);

// ===================================================================
// TEXTOS POR IDIOMA
// ===================================================================

const TEXTS = {
  es: {
    readTestimonial: 'Leer más',
    rating: 'Calificación',
    verified: 'Verificado',
    testimonials: 'testimonios',
    noTestimonials: 'Aún no hay testimonios en esta categoría',
    noTestimonialsDesc: 'Vuelve pronto para encontrar nuevas historias de éxito.',
    backToTestimonials: 'Ver todos los testimonios',
    showing: 'Mostrando',
    of: 'de',
    sortBy: 'Ordenar por',
    mostRecent: 'Más recientes',
    highestRated: 'Mejor calificados',
    oldest: 'Más antiguos',
    previous: 'Anterior',
    next: 'Siguiente',
    page: 'Página',
    by: 'Por',
    readMore: 'Leer historia completa'
  },
  en: {
    readTestimonial: 'Read more',
    rating: 'Rating',
    verified: 'Verified',
    testimonials: 'testimonials',
    noTestimonials: 'No testimonials in this category yet',
    noTestimonialsDesc: 'Check back soon for new success stories.',
    backToTestimonials: 'See all testimonials',
    showing: 'Showing',
    of: 'of',
    sortBy: 'Sort by',
    mostRecent: 'Most recent',
    highestRated: 'Highest rated',
    oldest: 'Oldest',
    previous: 'Previous',
    next: 'Next',
    page: 'Page',
    by: 'By',
    readMore: 'Read full story'
  },
  fr: {
    readTestimonial: 'Lire plus',
    rating: 'Note',
    verified: 'Vérifié',
    testimonials: 'témoignages',
    noTestimonials: 'Pas encore de témoignages dans cette catégorie',
    noTestimonialsDesc: 'Revenez bientôt pour de nouvelles histoires de réussite.',
    backToTestimonials: 'Voir tous les témoignages',
    showing: 'Affichage',
    of: 'de',
    sortBy: 'Trier par',
    mostRecent: 'Plus récents',
    highestRated: 'Mieux notés',
    oldest: 'Plus anciens',
    previous: 'Précédent',
    next: 'Suivant',
    page: 'Page',
    by: 'Par',
    readMore: 'Lire l\'histoire complète'
  }
};

const text = TEXTS[language] || TEXTS.es;

// URLs según idioma
const routes = {
  es: { testimonialsBase: '/testimonios' },
  en: { testimonialsBase: '/en/testimonials' },
  fr: { testimonialsBase: '/fr/temoignages' }
};

const currentRoutes = routes[language] || routes.es;

console.log('✅ TestimonialsCategoryLayout preparado:', {
  language,
  category: categorySlug,
  title: safeCategoryData.title,
  testimonialsCount: safeTestimonials.length,
  totalPages,
  hasBackendData: rawTestimonials.length > 0
});
---

<Layout {...layoutProps}>
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

  <div class="min-h-screen bg-white">

    <!-- Hero Section -->
    <section class="relative bg-gradient-to-br from-gray-900 via-slate-800 to-gray-900 py-12 md:py-16 overflow-hidden">
      <div class="absolute inset-0 bg-gradient-to-b from-transparent via-black/20 to-black/40"></div>
      <div class="absolute top-0 left-0 w-72 h-72 bg-[#f04e00] rounded-full filter blur-[120px] opacity-10"></div>
      <div class="absolute bottom-0 right-0 w-72 h-72 bg-[#f04e00] rounded-full filter blur-[120px] opacity-10"></div>

      <div class="w-full px-4 relative z-10">
        <div class="max-w-6xl mx-auto">

          <!-- Breadcrumbs -->
          <nav class="text-sm mb-6 text-center" aria-label="Breadcrumb">
            {safeSeo.breadcrumbs.map((breadcrumb, index) => (
              <span key={index}>
                {index > 0 && <span class="mx-2 text-gray-400">•</span>}
                {index === safeSeo.breadcrumbs.length - 1 ? (
                  <span class="text-[#f04e00] font-medium">{breadcrumb.name}</span>
                ) : (
                  <a href={breadcrumb.url} class="text-gray-300 hover:text-white transition-colors">
                    {breadcrumb.name}
                  </a>
                )}
              </span>
            ))}
          </nav>

          <!-- Title -->
          <div class="text-center">
            <div class="flex items-center justify-center gap-4 mb-4">
              <i class={`fas ${safeCategoryData.icon} text-4xl text-white`}></i>
              <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold text-white leading-tight">
                {safeCategoryData.title}
              </h1>
            </div>

            <p class="text-lg md:text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
              {safeCategoryData.description}
            </p>

            {/* Stats */}
            <div class="mt-8">
              <div class="text-3xl font-bold text-white mb-2">{totalTestimonials}</div>
              <div class="text-sm text-gray-300">{text.testimonials}</div>
            </div>
          </div>

        </div>
      </div>
    </section>

    <!-- Main Content -->
    <main class="py-12 md:py-16 bg-gray-50">
      <div class="container mx-auto px-4">
        <div class="max-w-7xl mx-auto">

          {safeTestimonials.length > 0 ? (
            <div>
              <!-- Controls: Sort & Count -->
              <div class="flex flex-col sm:flex-row items-center justify-between mb-8 gap-4">
                <div class="text-sm text-gray-600">
                  <span id="showing-text">{text.showing} <span id="showing-count">1-{Math.min(ITEMS_PER_PAGE, totalTestimonials)}</span> {text.of} <span id="total-count">{totalTestimonials}</span> {text.testimonials}</span>
                </div>

                <div class="flex items-center gap-2">
                  <label for="sort-select" class="text-sm text-gray-600">{text.sortBy}:</label>
                  <select
                    id="sort-select"
                    class="px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f04e00] focus:border-transparent text-sm"
                  >
                    <option value="recent">{text.mostRecent}</option>
                    <option value="rating">{text.highestRated}</option>
                    <option value="oldest">{text.oldest}</option>
                  </select>
                </div>
              </div>

              <!-- Testimonials Grid -->
              <div id="testimonials-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12">
                {safeTestimonials.map((testimonial) => (
                  <article
                    class="testimonial-card bg-white rounded-lg shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden group"
                    data-published={testimonial.publishedAt}
                    data-rating={testimonial.rating}
                    key={testimonial.id}
                  >
                    <a href={testimonial.url} class="block">

                      {/* Featured Image if available */}
                      {testimonial.featuredImage && (
                        <div class="aspect-video relative overflow-hidden">
                          <img
                            src={testimonial.featuredImage}
                            alt={testimonial.title}
                            class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                            loading="lazy"
                          />
                          <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
                        </div>
                      )}

                      <div class="p-6">
                        {/* Client Info */}
                        <div class="flex items-start gap-4 mb-4">
                          <div class="relative flex-shrink-0">
                            <img
                              src={testimonial.clientAvatar}
                              alt={testimonial.clientName}
                              class="w-14 h-14 rounded-full object-cover border-2 border-gray-200"
                            />
                            {testimonial.clientVerified && (
                              <div class="absolute -bottom-1 -right-1 bg-green-500 text-white p-1 rounded-full">
                                <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
                                  <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                </svg>
                              </div>
                            )}
                          </div>

                          <div class="flex-1">
                            <h3 class="font-bold text-gray-900 group-hover:text-[#f04e00] transition-colors">
                              {testimonial.clientName}
                            </h3>
                            <p class="text-sm text-gray-500">{testimonial.clientLocation}</p>

                            {/* Rating */}
                            <div class="flex items-center gap-1 mt-1">
                              {Array.from({length: testimonial.rating}, (_, i) => (
                                <svg key={i} class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 24 24">
                                  <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                                </svg>
                              ))}
                              <span class="text-sm text-gray-600 ml-1">{testimonial.rating}/5</span>
                            </div>
                          </div>
                        </div>

                        {/* Title */}
                        <h4 class="font-semibold text-gray-900 mb-2 line-clamp-2 text-base leading-tight">
                          {testimonial.title}
                        </h4>

                        {/* Excerpt */}
                        <p class="text-gray-600 mb-4 line-clamp-3 text-sm leading-relaxed">
                          {testimonial.excerpt}
                        </p>

                        {/* Agent Info */}
                        <div class="flex items-center justify-between text-xs text-gray-500 pt-4 border-t border-gray-100">
                          <div class="flex items-center gap-2">
                            <img
                              src={testimonial.agent.avatar}
                              alt={testimonial.agent.name}
                              class="w-6 h-6 rounded-full"
                            />
                            <span class="truncate">
                              {text.by} {testimonial.agent.name}
                            </span>
                          </div>
                        </div>

                        {/* Read More Link */}
                        <div class="mt-4 inline-flex items-center gap-2 text-[#f04e00] font-medium text-sm group-hover:gap-3 transition-all">
                          <span>{text.readMore}</span>
                          <i class="fas fa-arrow-right transition-transform group-hover:translate-x-1"></i>
                        </div>
                      </div>
                    </a>
                  </article>
                ))}
              </div>

              <!-- Pagination -->
              {totalPages > 1 && (
                <div id="pagination" class="flex items-center justify-center gap-2">
                  <button
                    id="prev-btn"
                    class="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
                    disabled
                  >
                    <i class="fas fa-chevron-left mr-2"></i>
                    {text.previous}
                  </button>

                  <div id="page-numbers" class="flex items-center gap-2">
                    <!-- Page numbers will be rendered by JS -->
                  </div>

                  <button
                    id="next-btn"
                    class="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
                  >
                    {text.next}
                    <i class="fas fa-chevron-right ml-2"></i>
                  </button>
                </div>
              )}
            </div>
          ) : (
            <!-- Empty State -->
            <div class="text-center py-16 max-w-2xl mx-auto">
              <div class="text-8xl mb-6">⭐</div>
              <h3 class="text-2xl font-bold text-gray-900 mb-4">
                {text.noTestimonials}
              </h3>
              <p class="text-gray-600 mb-8 text-lg">
                {text.noTestimonialsDesc}
              </p>
              <a
                href={currentRoutes.testimonialsBase}
                class="inline-flex items-center gap-2 bg-[#f04e00] text-white px-6 py-3 rounded-lg font-medium hover:bg-[#d94400] transition-colors"
              >
                <i class="fas fa-arrow-left"></i>
                {text.backToTestimonials}
              </a>
            </div>
          )}

        </div>
      </div>
    </main>

  </div>
</Layout>

<!-- Client-side pagination and sorting -->
<script define:vars={{ ITEMS_PER_PAGE, totalTestimonials, totalPages, text }}>
  let currentPage = 1;
  let currentSort = 'recent';
  let allTestimonials = [];

  // Initialize
  document.addEventListener('DOMContentLoaded', () => {
    allTestimonials = Array.from(document.querySelectorAll('.testimonial-card'));
    renderPage();

    document.getElementById('sort-select')?.addEventListener('change', (e) => {
      currentSort = e.target.value;
      currentPage = 1;
      sortAndRender();
    });

    document.getElementById('prev-btn')?.addEventListener('click', () => {
      if (currentPage > 1) {
        currentPage--;
        renderPage();
        scrollToTop();
      }
    });

    document.getElementById('next-btn')?.addEventListener('click', () => {
      if (currentPage < totalPages) {
        currentPage++;
        renderPage();
        scrollToTop();
      }
    });
  });

  function sortTestimonials() {
    allTestimonials.sort((a, b) => {
      if (currentSort === 'recent') {
        return new Date(b.dataset.published) - new Date(a.dataset.published);
      } else if (currentSort === 'rating') {
        return parseInt(b.dataset.rating) - parseInt(a.dataset.rating);
      } else if (currentSort === 'oldest') {
        return new Date(a.dataset.published) - new Date(b.dataset.published);
      }
      return 0;
    });
  }

  function sortAndRender() {
    sortTestimonials();
    renderPage();
  }

  function renderPage() {
    const start = (currentPage - 1) * ITEMS_PER_PAGE;
    const end = start + ITEMS_PER_PAGE;

    allTestimonials.forEach((testimonial, index) => {
      if (index >= start && index < end) {
        testimonial.style.display = 'block';
      } else {
        testimonial.style.display = 'none';
      }
    });

    const showingCount = document.getElementById('showing-count');
    if (showingCount) {
      const actualStart = start + 1;
      const actualEnd = Math.min(end, totalTestimonials);
      showingCount.textContent = `${actualStart}-${actualEnd}`;
    }

    const prevBtn = document.getElementById('prev-btn');
    const nextBtn = document.getElementById('next-btn');

    if (prevBtn) prevBtn.disabled = currentPage === 1;
    if (nextBtn) nextBtn.disabled = currentPage === totalPages;

    renderPageNumbers();
  }

  function renderPageNumbers() {
    const pageNumbersContainer = document.getElementById('page-numbers');
    if (!pageNumbersContainer) return;

    pageNumbersContainer.innerHTML = '';

    const maxVisible = 7;
    let pages = [];

    if (totalPages <= maxVisible) {
      pages = Array.from({ length: totalPages }, (_, i) => i + 1);
    } else {
      if (currentPage <= 4) {
        pages = [1, 2, 3, 4, 5, '...', totalPages];
      } else if (currentPage >= totalPages - 3) {
        pages = [1, '...', totalPages - 4, totalPages - 3, totalPages - 2, totalPages - 1, totalPages];
      } else {
        pages = [1, '...', currentPage - 1, currentPage, currentPage + 1, '...', totalPages];
      }
    }

    pages.forEach(page => {
      if (page === '...') {
        const ellipsis = document.createElement('span');
        ellipsis.textContent = '...';
        ellipsis.className = 'px-2 text-gray-500';
        pageNumbersContainer.appendChild(ellipsis);
      } else {
        const button = document.createElement('button');
        button.textContent = page;
        button.className = `w-10 h-10 rounded-lg transition-colors ${
          page === currentPage
            ? 'bg-[#f04e00] text-white font-semibold'
            : 'border border-gray-300 hover:bg-gray-100 text-gray-700'
        }`;

        if (page !== currentPage) {
          button.addEventListener('click', () => {
            currentPage = page;
            renderPage();
            scrollToTop();
          });
        }

        pageNumbersContainer.appendChild(button);
      }
    });
  }

  function scrollToTop() {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .aspect-video {
    aspect-ratio: 16 / 9;
  }

  .group:hover .group-hover\:scale-105 {
    transform: scale(1.05);
  }

  .group:hover .group-hover\:text-[#f04e00] {
    color: #f04e00;
  }

  .group:hover .group-hover\:gap-3 {
    gap: 0.75rem;
  }

  .group:hover .group-hover\:translate-x-1 {
    transform: translateX(0.25rem);
  }
</style>
