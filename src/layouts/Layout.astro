---
export interface Props {
  title: string;
  description?: string;
  ogImage?: string;
  hreflangData?: Record<string, string>;
  globalConfig?: any;
  language?: string;
    trackingString?: string;  // Agregar
}

const { 
  title, 
  description = 'Encuentra tu pr√≥xima propiedad en Rep√∫blica Dominicana con CLIC Inmobiliaria', 
  ogImage = '/og-default.jpg',
  hreflangData = {},
  globalConfig = {},
  language = 'es',
    trackingString = ''  // Agregar
} = Astro.props;

// CORRECCI√ìN: Funci√≥n para generar URLs considerando el idioma
function getUrlByLanguage(path, lang) {
  if (lang === 'es') return `/${path}`;
  return `/${lang}/${path}`;
}

// CORRECCI√ìN: Funci√≥n para la URL de home seg√∫n idioma
function getHomeUrl(lang) {
  if (lang === 'es') return '/';
  return `/${lang}`;
}

// CORRECCI√ìN: Funci√≥n para URL de favoritos seg√∫n idioma
function getFavoritesUrl(lang) {
  if (lang === 'es') return '/favoritos';
  if (lang === 'en') return '/en/favorites';
  if (lang === 'fr') return '/fr/favoris';
  return '/favoritos'; // fallback
}

// CORRECCI√ìN: Ahora homeUrl considera el idioma
const homeUrl = trackingString 
  ? `${getHomeUrl(language)}?utm_source=${trackingString}` 
  : getHomeUrl(language);

// Extraer la configuraci√≥n del header desde globalConfig
const headerSections = globalConfig?.features?.header?.sections || {};

// Ordenar las secciones por su propiedad 'order' y filtrar las habilitadas
const sortedSections = Object.entries(headerSections)
  .filter(([key, section]) => section.enabled && key !== 'contact')
  .sort((a, b) => a[1].order - b[1].order);

// Labels para el men√∫ - fallback completo y robusto
const menuLabels = {
  buy: { es: 'Comprar', en: 'Buy', fr: 'Acheter' },
  rent: { es: 'Alquilar', en: 'Rent', fr: 'Louer' },
  sell: { es: 'Vender', en: 'Sell', fr: 'Vendre' },
  videos: { es: 'Videos', en: 'Videos', fr: 'Vid√©os' },
  advisors: { es: 'Asesores', en: 'Advisors', fr: 'Conseillers' },
  articles: { es: 'Blog', en: 'Blog', fr: 'Articles' },
  comprar: { es: 'Comprar', en: 'Buy', fr: 'Acheter' },
  alquilar: { es: 'Alquilar', en: 'Rent', fr: 'Louer' },
  vender: { es: 'Vender', en: 'Sell', fr: 'Vendre' },
  // Agregar m√°s variaciones si es necesario
  achat: { es: 'Comprar', en: 'Buy', fr: 'Acheter' },
  location: { es: 'Alquilar', en: 'Rent', fr: 'Louer' },
  vente: { es: 'Vender', en: 'Sell', fr: 'Vendre' }
};

// Funci√≥n para obtener label de forma robusta
function getMenuLabel(section, key, language) {
  // Prioridad 1: Labels directos del globalConfig
  if (section.labels && typeof section.labels === 'object' && section.labels[language]) {
    return section.labels[language];
  }
  
  // Prioridad 2: Fallback local
  if (menuLabels[key] && menuLabels[key][language]) {
    return menuLabels[key][language];
  }
  
  // Prioridad 3: Key como texto
  return key;
}

// Obtener el texto y URL del bot√≥n de contacto
const contactSection = headerSections.contact || {};
const contactUrl = contactSection.urls?.[language] || '/contacto';
const contactButtonText = language === 'es' ? 'Cont√°ctanos' : 
                         language === 'en' ? 'Contact Us' : 
                         'Contactez-nous';
---

<!DOCTYPE html>
<html lang={language}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    
    <!-- SEO Meta Tags -->
    <title>{title} | CLIC Inmobiliaria</title>
    <meta name="description" content={description} />
    <meta name="robots" content="index, follow" />
    
    <!-- Deshabilitar auto-traducci√≥n de Google -->
    <meta name="google" content="notranslate">
    <meta name="googletranslate" content="notranslate">
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:site_name" content="CLIC Inmobiliaria" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogImage} />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={Astro.url.href} />
    
    <!-- Hreflang tags for multi-language -->
    {Object.entries(hreflangData).map(([lang, url]) => (
      <link rel="alternate" hreflang={lang} href={url} />
    ))}
    
    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="preconnect" href="https://cdnjs.cloudflare.com" />
    
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
    
    <!-- Font Awesome 6 -->
    <link 
      rel="stylesheet" 
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" 
      integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" 
      crossorigin="anonymous" 
      referrerpolicy="no-referrer" 
    />

    <!-- Schema.org Organization Data with Certifications -->
    <script type="application/ld+json">
      {JSON.stringify({
        "@context": "https://schema.org",
        "@type": "RealEstateAgent",
        "name": globalConfig?.legal?.company_name || "CLIC Inmobiliaria",
        "legalName": globalConfig?.legal?.company_full_name || "CLIC DOM SRL",
        "url": Astro.url.origin,
        "logo": `${Astro.url.origin}/logo.png`,
        "description": description,
        "foundingDate": globalConfig?.legal?.founded || "2022",
        "telephone": globalConfig?.contact?.phone || "8094872542",
        "email": globalConfig?.contact?.email || "info@clicinmobiliaria.com",
        "address": {
          "@type": "PostalAddress",
          "streetAddress": "Calle Erik Leonard Ekman No. 34, Edificio The Box Working Space",
          "addressLocality": "Santo Domingo",
          "addressRegion": "Distrito Nacional",
          "addressCountry": "DO"
        },
        "aggregateRating": {
          "@type": "AggregateRating",
          "ratingValue": "4.9",
          "bestRating": "5",
          "ratingCount": "500"
        },
        "hasCredential": globalConfig?.certifications?.map(cert => ({
          "@type": "EducationalOccupationalCredential",
          "name": cert.name,
          "description": cert.description,
          "credentialCategory": "Professional Certification",
          "recognizedBy": {
            "@type": "Organization",
            "name": cert.name
          }
        })) || []
      })}
    </script>
    
    <!-- Pass language data to JavaScript -->
    <script is:inline define:vars={{ hreflangData, currentLanguage: language, globalConfigData: globalConfig }}>
      window.hreflangData = hreflangData;
      window.currentLanguage = currentLanguage;
      window.globalConfigData = globalConfigData;
      
      // FORZAR el idioma globalmente para TODOS los componentes
      window.FORCED_LANGUAGE = currentLanguage;
      console.log('üåç FORCED_LANGUAGE set to:', window.FORCED_LANGUAGE);
      
      // Interceptar cualquier intento de usar un idioma diferente
      const originalFetch = window.fetch;
      window.fetch = function(...args) {
        console.log('üåç Fetch intercepted:', args[0]);
        return originalFetch.apply(this, args);
      };
    </script>
  </head>
  <body>
    <!-- SimpleFavoritesManager Script -->
    <script is:inline>
      if (!window.simpleFavoritesManager) {
        class SimpleFavoritesManager {
          constructor() {
            this.API_URL = 'https://pacewqgypevfgjmdsorz.supabase.co/functions/v1/favorites';
            this.API_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBhY2V3cWd5cGV2ZmdqbWRzb3J6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg2NjU4OTksImV4cCI6MjA2NDI0MTg5OX0.Qlg-UVy-sikr76GxYmTcfCz1EnAqPHxvFeLrdqnjuWs';
            
            this.deviceId = this.getDeviceId();
            this.favorites = new Set();
            this.email = null;
            this.isLoaded = false;
            this._listeners = [];

            console.log('üîß SimpleFavoritesManager initialized with deviceId:', this.deviceId);
            this.loadFavorites();
          }

          getDeviceId() {
            let deviceId = localStorage.getItem('device_id');
            if (!deviceId) {
              deviceId = 'DEV-' + crypto.randomUUID().slice(0, 12);
              localStorage.setItem('device_id', deviceId);
              console.log('üÜï Generated new deviceId:', deviceId);
            }
            return deviceId;
          }

          async callAPI(endpoint, method = 'GET', body = null) {
            const url = `${this.API_URL}/${this.deviceId}${endpoint}`;
            
            const config = {
              method,
              headers: {
                'Authorization': `Bearer ${this.API_KEY}`,
                'Content-Type': 'application/json'
              }
            };

            if (body) {
              config.body = JSON.stringify(body);
            }

            console.log('üì° API Call:', method, url, body);

            const response = await fetch(url, config);
            
            if (!response.ok) {
              throw new Error(`API Error: ${response.status}`);
            }

            const data = await response.json();
            console.log('‚úÖ API Response:', data);
            return data;
          }

          async loadFavorites() {
            try {
              const data = await this.callAPI('');
              
              this.favorites = new Set(data.properties || []);
              this.email = data.email;
              this.isLoaded = true;

              console.log('‚úÖ Favorites loaded:', {
                deviceId: this.deviceId,
                count: this.favorites.size,
                properties: Array.from(this.favorites),
                email: this.email
              });

              this.notifyListeners();
              
            } catch (error) {
              console.error('‚ùå Error loading favorites:', error);
              this.isLoaded = true;
              this.notifyListeners();
            }
          }

          async addFavorite(propertyId) {
            try {
              console.log('üíñ Adding favorite:', propertyId);
              
              this.favorites.add(propertyId);
              this.notifyListeners();

              const data = await this.callAPI('/add', 'POST', { propertyId });
              
              this.favorites = new Set(data.properties);
              this.notifyListeners();

              console.log('‚úÖ Favorite added successfully');
              
            } catch (error) {
              console.error('‚ùå Error adding favorite:', error);
              
              this.favorites.delete(propertyId);
              this.notifyListeners();
              
              throw error;
            }
          }

          async removeFavorite(propertyId) {
            try {
              console.log('üíî Removing favorite:', propertyId);
              
              this.favorites.delete(propertyId);
              this.notifyListeners();

              const data = await this.callAPI('/remove', 'POST', { propertyId });
              
              this.favorites = new Set(data.properties);
              this.notifyListeners();

              console.log('‚úÖ Favorite removed successfully');
              
            } catch (error) {
              console.error('‚ùå Error removing favorite:', error);
              
              this.favorites.add(propertyId);
              this.notifyListeners();
              
              throw error;
            }
          }

          async toggleFavorite(propertyId) {
            if (this.favorites.has(propertyId)) {
              await this.removeFavorite(propertyId);
            } else {
              await this.addFavorite(propertyId);
            }
          }

          async getFavoritesWithDetails() {
            try {
              const data = await this.callAPI('/details');
              return data.properties || [];
            } catch (error) {
              console.error('‚ùå Error getting favorites details:', error);
              return [];
            }
          }

          async updateEmail(email) {
            try {
              await this.callAPI('/email', 'PUT', { email });
              this.email = email;
              console.log('‚úÖ Email updated:', email);
            } catch (error) {
              console.error('‚ùå Error updating email:', error);
              throw error;
            }
          }

          isFavorite(propertyId) {
            return this.favorites.has(propertyId);
          }

          getFavorites() {
            return this.favorites;
          }

          getFavoritesCount() {
            return this.favorites.size;
          }

          getDeviceInfo() {
            return {
              deviceId: this.deviceId,
              count: this.favorites.size,
              email: this.email,
              favorites: Array.from(this.favorites)
            };
          }

          addListener(callback) {
            if (!this._listeners.includes(callback)) {
              this._listeners.push(callback);
              
              if (this.isLoaded) {
                setTimeout(() => callback(this.getDeviceInfo()), 0);
              }
            }
          }

          removeListener(callback) {
            this._listeners = this._listeners.filter(listener => listener !== callback);
          }

          notifyListeners() {
            const info = this.getDeviceInfo();
            console.log('üì¢ Notifying listeners:', info);
            
            this._listeners.forEach(callback => {
              try {
                callback(info);
              } catch (error) {
                console.error('‚ùå Error in listener:', error);
              }
            });
          }
        }

        window.simpleFavoritesManager = new SimpleFavoritesManager();
        console.log('‚úÖ SimpleFavoritesManager ready!');
      }
    </script>

    <!-- SCRIPT GLOBAL PARA LEADS -->
    <script>
      window.submitPropertyLead = async function(event) {
        event.preventDefault();
        
        console.log('üöÄ submitPropertyLead llamada');
        
        const submitBtn = document.getElementById('submit-lead-btn');
        const submitText = document.getElementById('submit-lead-text');
        const originalText = submitText ? submitText.textContent : 'Contactar Asesor';
        
        if (submitBtn) {
          submitBtn.disabled = true;
          submitBtn.classList.add('opacity-75');
        }
        if (submitText) {
          submitText.textContent = 'Enviando...';
        }
        
        try {
          const formData = new FormData(event.target);
          const leadData = Object.fromEntries(formData.entries());
          
          console.log('üìã Datos del formulario:', leadData);
          
          if (!leadData.cliente_nombre || !leadData.cliente_telefono || !leadData.cliente_email) {
            throw new Error('Por favor completa todos los campos obligatorios');
          }
          
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          if (!emailRegex.test(leadData.cliente_email)) {
            throw new Error('Por favor ingresa un email v√°lido');
          }
          
          leadData.fecha_creacion = new Date().toISOString();
          leadData.user_agent = navigator.userAgent;
          leadData.referidor_lead = document.referrer || '';
          
          console.log('üì§ Enviando lead con datos:', leadData);
          
          const response = await fetch('https://pacewqgypevfgjmdsorz.supabase.co/functions/v1/submit-lead', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBhY2V3cWd5cGV2ZmdqbWRzb3J6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg2NjU4OTksImV4cCI6MjA2NDI0MTg5OX0.Qlg-UVy-sikr76GxYmTcfCz1EnAqPHxvFeLrdqnjuWs'
            },
            body: JSON.stringify(leadData)
          });
          
          console.log('üì° Response status:', response.status);
          
          const result = await response.json();
          console.log('üì• Respuesta del servidor:', result);
          
          if (!response.ok) {
            throw new Error(result.error || result.details || `Error ${response.status}`);
          }
          
          if (!result.success) {
            throw new Error(result.error || 'Error desconocido');
          }
          
          console.log('‚úÖ Lead enviado exitosamente:', result);
          showSuccessMessage();
          event.target.reset();
          
        } catch (error) {
          console.error('‚ùå Error enviando lead:', error);
          showErrorMessage(error.message);
        } finally {
          if (submitBtn) {
            submitBtn.disabled = false;
            submitBtn.classList.remove('opacity-75');
          }
          if (submitText) {
            submitText.textContent = originalText;
          }
        }
      };

      function showSuccessMessage() {
        const notification = document.createElement('div');
        notification.className = 'fixed top-4 right-4 bg-green-500 text-white p-4 rounded-lg shadow-lg z-50 transform translate-x-full transition-transform duration-300';
        notification.innerHTML = `
          <div class="flex items-center gap-3">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            <div>
              <p class="font-semibold">¬°Solicitud enviada exitosamente!</p>
              <p class="text-sm">Un asesor se comunicar√° contigo muy pronto</p>
            </div>
          </div>
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => notification.classList.remove('translate-x-full'), 100);
        setTimeout(() => {
          notification.classList.add('translate-x-full');
          setTimeout(() => {
            if (notification.parentNode) {
              notification.parentNode.removeChild(notification);
            }
          }, 300);
        }, 5000);
      }

      function showErrorMessage(message) {
        const notification = document.createElement('div');
        notification.className = 'fixed top-4 right-4 bg-red-500 text-white p-4 rounded-lg shadow-lg z-50 transform translate-x-full transition-transform duration-300';
        notification.innerHTML = `
          <div class="flex items-center gap-3">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <div>
              <p class="font-semibold">Error al enviar</p>
              <p class="text-sm">${message}</p>
            </div>
          </div>
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => notification.classList.remove('translate-x-full'), 100);
        setTimeout(() => {
          notification.classList.add('translate-x-full');
          setTimeout(() => {
            if (notification.parentNode) {
              notification.parentNode.removeChild(notification);
            }
          }, 5000);
        });
      }

      console.log('üîß Script de leads cargado correctamente en Layout');
    </script>

    <!-- Header Counter Script -->
    <script>
      function updateSimpleHeaderCounter(info) {
        const counter = document.getElementById('favorites-counter');
        if (!counter) return;

        console.log('üì¢ Updating header counter:', info.count);

        if (info.count > 0) {
          counter.textContent = info.count > 99 ? '99+' : info.count.toString();
          counter.classList.remove('hidden');
        } else {
          counter.classList.add('hidden');
        }
      }

      document.addEventListener('DOMContentLoaded', function() {
        console.log('üöÄ Setting up header counter');
        
        if (window.simpleFavoritesManager) {
          window.simpleFavoritesManager.addListener(updateSimpleHeaderCounter);
        }
      });
    </script>

    <!-- Header -->
    <header class="sticky top-0 z-50 bg-white shadow-sm">
      <div class="container mx-auto px-4">
        <div class="flex items-center justify-between h-16">
          <!-- Logo - CORREGIDO: Ahora usa homeUrl que considera el idioma -->
          <a href={homeUrl} class="flex items-center">
            <img src="/logo.png" alt="CLIC Inmobiliaria" class="h-10 w-auto" />
          </a>
          
          <!-- Navigation -->
          <nav class="hidden md:flex items-center gap-8" translate="no">
            {sortedSections.map(([key, section]) => {
              const label = getMenuLabel(section, key, language);
              
              let url = section.urls?.[language];
              if (!url) {
                if (language === 'es') {
                  url = `/${key}`;
                } else {
                  url = `/${language}/${key}`;
                }
              }
              
              return (
                <a href={url} class="text-gray-700 hover:text-[#f04e00] transition-colors" data-key={key} data-original-label={label} translate="no">
                  {label}
                </a>
              );
            })}
          </nav>
          
          <!-- Right Side Actions -->
          <div class="flex items-center gap-4">
            <!-- Language Selector -->
            <div class="relative">
              <button 
                id="language-selector"
                class="flex items-center gap-1 px-2 py-1 text-gray-700 hover:text-[#f04e00] transition-colors rounded-md border border-gray-300 hover:border-[#f04e00]"
                title="Cambiar idioma"
              >
                <i class="fas fa-globe w-4 h-4"></i>
                <span id="current-language" class="text-sm font-medium uppercase">{language}</span>
                <i id="language-chevron" class="fas fa-chevron-down w-3 h-3 transition-transform duration-200"></i>
              </button>
              
              <div 
                id="language-dropdown"
                class="absolute right-0 top-full mt-1 bg-white border border-gray-200 rounded-md shadow-lg z-50 min-w-[100px] hidden"
              >
                <a href="#" class="language-option flex items-center gap-2 px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 hover:text-[#f04e00] transition-colors" data-lang="es">
                  üá©üá¥ Espa√±ol
                </a>
                <a href="#" class="language-option flex items-center gap-2 px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 hover:text-[#f04e00] transition-colors border-t border-gray-100" data-lang="en">
                  üá∫üá∏ English
                </a>
                <a href="#" class="language-option flex items-center gap-2 px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 hover:text-[#f04e00] transition-colors border-t border-gray-100" data-lang="fr">
                  üá´üá∑ Fran√ßais
                </a>
              </div>
            </div>

            <!-- Favorites Button with Counter - CORREGIDO: Ahora usa getFavoritesUrl para considerar el idioma -->
            <div class="relative">
              <a 
                href={getFavoritesUrl(language)}
                class="p-2 text-gray-700 hover:text-[#f04e00] transition-colors relative flex items-center justify-center"
                title={language === 'es' ? 'Mis favoritos' : language === 'en' ? 'My favorites' : 'Mes favoris'}
              >
                <i class="fas fa-heart w-6 h-6 text-xl"></i>
                <span 
                  id="favorites-counter" 
                  class="absolute bottom-0 right-0 bg-[#f04e00] text-white rounded-full min-w-[16px] h-4 flex items-center justify-center font-medium px-1 hidden shadow-sm"
                  style="font-size: 10px; line-height: 1; transform: translate(2px, -2px);"
                >
                  0
                </span>
              </a>
            </div>

            <!-- Contact Button -->
            <a 
              href={contactUrl} 
              class="hidden sm:inline-block px-3 py-1.5 border border-[#f04e00] text-[#f04e00] rounded-md hover:bg-[#f04e00] hover:text-white transition-colors text-sm"
            >
              {contactButtonText}
            </a>
            
            <!-- Mobile menu button -->
            <button class="md:hidden p-2 text-gray-700">
              <i class="fas fa-bars w-6 h-6 text-xl"></i>
            </button>
          </div>
        </div>
      </div>
    </header>

    <!-- Detective Script - Encuentra el culpable -->
    <script>
      console.log('üïµÔ∏è Google Translate Protection Active for language:', window.currentLanguage);
      
      // Protecci√≥n espec√≠fica para el men√∫ principal en franc√©s
      if (window.currentLanguage === 'fr') {
        document.addEventListener('DOMContentLoaded', function() {
          const nav = document.querySelector('nav[translate="no"]');
          if (nav) {
            console.log('üõ°Ô∏è Protecting French menu from Google Translate');
            
            // Agregar atributos adicionales de protecci√≥n
            nav.setAttribute('class', nav.getAttribute('class') + ' notranslate');
            nav.lang = 'fr';
            
            // Proteger cada enlace individualmente
            const links = nav.querySelectorAll('a');
            links.forEach(link => {
              link.setAttribute('translate', 'no');
              link.classList.add('notranslate');
              link.lang = 'fr';
            });
            
            console.log('‚úÖ French menu protection applied to', links.length, 'links');
          }
        });
      }
    </script>

    <!-- Simplified Language Selector Script -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const languageSelector = document.getElementById('language-selector');
        const languageDropdown = document.getElementById('language-dropdown');
        const languageChevron = document.getElementById('language-chevron');
        const currentLanguageSpan = document.getElementById('current-language');
        
        if (!languageSelector || !languageDropdown || !languageChevron || !currentLanguageSpan) {
          console.error('Language selector elements not found');
          return;
        }

        console.log('üåç Language selector initialized for:', window.currentLanguage);
        console.log('üåç Available hreflang URLs:', window.hreflangData);
        
        // Update current language display
        const langMap = { 'es': 'ES', 'en': 'EN', 'fr': 'FR' };
        currentLanguageSpan.textContent = langMap[window.currentLanguage] || 'ES';
        
        // Simple language change function - trust the props
        function changeLanguage(newLang) {
          console.log('üîÑ Changing language from', window.currentLanguage, 'to', newLang);
          
          // Skip if already in the target language
          if (newLang === window.currentLanguage) {
            console.log('‚úÖ Already in target language, skipping');
            closeDropdown();
            return;
          }
          
          // Use hreflang data - trust that it's always provided
          const targetUrl = window.hreflangData[newLang];
          if (targetUrl) {
            console.log('üöÄ Redirecting to:', targetUrl);
            window.location.href = targetUrl;
          } else {
            console.error('‚ùå No hreflang URL found for language:', newLang);
            console.error('Available hreflang data:', window.hreflangData);
          }
        }

        function closeDropdown() {
          languageDropdown.classList.add('hidden');
          languageChevron.style.transform = 'rotate(0deg)';
        }

        function openDropdown() {
          languageDropdown.classList.remove('hidden');
          languageChevron.style.transform = 'rotate(180deg)';
        }

        // Toggle dropdown
        languageSelector.addEventListener('click', function(e) {
          e.preventDefault();
          e.stopPropagation();
          
          const isOpen = !languageDropdown.classList.contains('hidden');
          if (isOpen) {
            closeDropdown();
          } else {
            openDropdown();
          }
        });

        // Handle language selection
        const languageOptions = document.querySelectorAll('.language-option');
        languageOptions.forEach(option => {
          option.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            const selectedLang = this.getAttribute('data-lang');
            changeLanguage(selectedLang);
          });
        });

        // Close dropdown when clicking outside
        document.addEventListener('click', function(e) {
          if (!languageSelector.contains(e.target) && !languageDropdown.contains(e.target)) {
            closeDropdown();
          }
        });
      });
    </script>

    <!-- Main Content -->
    <main class="min-h-screen">
      <slot />
    </main>

    <!-- Dynamic Footer -->
    <footer class="bg-slate-900 text-white" translate="no">
      <div class="container mx-auto px-4 py-12">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-8">
          
          <!-- Company Info con Firma (2 columnas) -->
          <div class="lg:col-span-2">
            <h3 class="text-2xl font-bold text-white mb-4">CLIC Inmobiliaria</h3>
            <p class="text-gray-300 mb-6 leading-relaxed">
              {language === 'es' && 'Tu socio de confianza en el mercado inmobiliario de Rep√∫blica Dominicana.'}
              {language === 'en' && 'Your trusted partner in the Dominican Republic real estate market.'}
              {language === 'fr' && 'Votre partenaire de confiance sur le march√© immobilier de la R√©publique Dominicaine.'}
            </p>
            
            <!-- Firma de Ren√© -->
            <div class="mb-6">
              <img 
                src="/rene-castillo-firma.png" 
                alt="Firma de Ren√© Castillo, Fundador de CLIC Inmobiliaria"
                class="h-12 md:h-16 w-auto opacity-90 hover:opacity-100 transition-opacity"
              />
            </div>
            
            <!-- Informaci√≥n de Contacto Completa con Font Awesome -->
            <div class="space-y-3 text-gray-400">
              <div class="flex items-start gap-3">
                <i class="fas fa-map-marker-alt w-5 h-5 mt-0.5 flex-shrink-0"></i>
                <div>
                  <div class="font-medium text-white">
                    {globalConfig?.translations?.footer?.mainOffice || 
                     (language === 'es' ? 'Oficina Principal' : 
                      language === 'en' ? 'Main Office' : 
                      'Bureau Principal')}
                  </div>
                  <div>C. Erik Leonard Ekman 34, Santo Domingo, D.N.</div>
                  <div class="text-sm mt-1">
                    {globalConfig?.translations?.footer?.officeHours || 
                     (language === 'es' ? 'Lun-Vie: 9:00-18:00 | S√°b: 9:00-15:00' : 
                      language === 'en' ? 'Mon-Fri: 9:00-18:00 | Sat: 9:00-15:00' : 
                      'Lun-Ven: 9:00-18:00 | Sam: 9:00-15:00')}
                  </div>
                </div>
              </div>
              
              <div class="flex items-center gap-3">
                <i class="fas fa-phone w-5 h-5 flex-shrink-0"></i>
                <div>
                  <a href="tel:+18295148080" class="hover:text-[#f04e00] transition-colors font-medium">
                    (829) 514-8080
                  </a>
                  <div class="text-sm">
                    {language === 'es' && 'Llamadas y WhatsApp'}
                    {language === 'en' && 'Calls and WhatsApp'}
                    {language === 'fr' && 'Appels et WhatsApp'}
                  </div>
                </div>
              </div>
              
              <div class="flex items-center gap-3">
                <i class="fas fa-envelope w-5 h-5 flex-shrink-0"></i>
                <a href="mailto:contacto@clic.do" class="hover:text-[#f04e00] transition-colors">
                  contacto@clic.do
                </a>
              </div>
            </div>

            <!-- Certificaciones - Solo si existen en la data -->
            {globalConfig?.certifications?.length > 0 && (
              <div class="mt-4 pt-3 border-t border-gray-700">
                <div class="flex flex-wrap items-center gap-3 text-gray-400 text-sm">
                  <div class="flex items-center gap-2">
                    <i class="fas fa-certificate w-4 h-4 text-[#f04e00]"></i>
                    <span class="font-medium">
                      {language === 'es' ? 'Certificado por:' : 
                       language === 'en' ? 'Certified by:' : 
                       'Certifi√© par:'}
                    </span>
                  </div>
                  <div class="flex items-center gap-2">
                    {globalConfig.certifications.map((cert) => (
                      <img 
                        src={cert.logo} 
                        alt={cert.description || cert.name}
                        title={cert.description || cert.name}
                        class="h-5 opacity-80 hover:opacity-100 transition-opacity"
                      />
                    ))}
                  </div>
                </div>
              </div>
            )}
          </div>
          
          <!-- Propiedades por Zona - Din√°mico -->
          <div>
            <h4 class="text-lg font-semibold text-white mb-4">
              {globalConfig?.translations?.footer?.propertiesByZone || 
               (language === 'es' ? 'Propiedades por Zona' : 
                language === 'en' ? 'Properties by Zone' : 
                'Propri√©t√©s par Zone')}
            </h4>
            <ul class="space-y-2 text-gray-400">
              {globalConfig?.footer_links?.properties_by_zone?.length > 0 ? 
                globalConfig.footer_links.properties_by_zone.map((link) => (
                  <li>
                    <a href={link.url} class="hover:text-[#f04e00] transition-colors">
                      {link.label}
                    </a>
                  </li>
                )) :
                [
                  { href: `/comprar/apartamentos/distrito-nacional`, text: language === 'es' ? 'Apartamentos Distrito Nacional' : language === 'en' ? 'Distrito Nacional Apartments' : 'Appartements Distrito Nacional' },
                  { href: `/comprar/villas/punta-cana`, text: language === 'es' ? 'Villas Punta Cana' : language === 'en' ? 'Punta Cana Villas' : 'Villas Punta Cana' },
                  { href: `/comprar/casas/bella-vista`, text: language === 'es' ? 'Casas Bella Vista' : language === 'en' ? 'Bella Vista Houses' : 'Maisons Bella Vista' },
                  { href: `/comprar/penthouses/piantini`, text: language === 'es' ? 'Penthouses Piantini' : language === 'en' ? 'Piantini Penthouses' : 'Penthouses Piantini' }
                ].map((item) => (
                  <li>
                    <a href={item.href} class="hover:text-[#f04e00] transition-colors">
                      {item.text}
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
          
          <!-- Servicios Principales - Din√°mico -->
          <div>
            <h4 class="text-lg font-semibold text-white mb-4">
              {globalConfig?.translations?.footer?.ourServices || 
               (language === 'es' ? 'Nuestros Servicios' : 
                language === 'en' ? 'Our Services' : 
                'Nos Services')}
            </h4>
            <ul class="space-y-2 text-gray-400">
              {globalConfig?.footer_links?.services?.length > 0 ? 
                globalConfig.footer_links.services.map((service) => (
                  <li>
                    <a href={service.url} class="hover:text-[#f04e00] transition-colors">
                      {service.label}
                    </a>
                  </li>
                )) :
                [
                  { href: language === 'es' ? '/comprar' : `/${language}/buy`, text: language === 'es' ? 'Comprar Propiedades' : language === 'en' ? 'Buy Properties' : 'Acheter Propri√©t√©s' },
                  { href: language === 'es' ? '/vender' : `/${language}/sell`, text: language === 'es' ? 'Vender su Propiedad' : language === 'en' ? 'Sell Your Property' : 'Vendre Votre Propri√©t√©' },
                  { href: language === 'es' ? '/alquilar' : `/${language}/rent`, text: language === 'es' ? 'Alquilar Inmuebles' : language === 'en' ? 'Rent Properties' : 'Louer Propri√©t√©s' },
                  { href: language === 'es' ? '/asesores' : `/${language}/advisors`, text: language === 'es' ? 'Equipo de Asesores' : language === 'en' ? 'Advisory Team' : '√âquipe de Conseillers' }
                ].map((item) => (
                  <li>
                    <a href={item.href} class="hover:text-[#f04e00] transition-colors">
                      {item.text}
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
          
          <!-- Recursos + Redes Sociales - Din√°mico -->
          <div>
            <h4 class="text-lg font-semibold text-white mb-4">
              {globalConfig?.translations?.footer?.resources || 
               (language === 'es' ? 'Recursos' : 
                language === 'en' ? 'Resources' : 
                'Ressources')}
            </h4>
            <ul class="space-y-2 text-gray-400 mb-6">
              {globalConfig?.footer_links?.resources?.length > 0 ? 
                globalConfig.footer_links.resources.map((resource) => (
                  <li>
                    <a href={resource.url} class="hover:text-[#f04e00] transition-colors">
                      {resource.label}
                    </a>
                  </li>
                )) :
                [
                  { href: language === 'es' ? '/articulos' : `/${language}/articles`, text: language === 'es' ? 'Art√≠culos Inmobiliarios' : language === 'en' ? 'Real Estate Articles' : 'Articles Immobiliers' },
                  { href: language === 'es' ? '/videos' : `/${language}/videos`, text: language === 'es' ? 'Canal de Videos' : language === 'en' ? 'Video Channel' : 'Cha√Æne Vid√©o' }
                ].map((item) => (
                  <li>
                    <a href={item.href} class="hover:text-[#f04e00] transition-colors">
                      {item.text}
                    </a>
                  </li>
                ))
              }
            </ul>
            
            <!-- Redes Sociales con Font Awesome -->
            <div>
              <h5 class="text-sm font-semibold text-white mb-3">
                {globalConfig?.translations?.footer?.followUs || 
                 (language === 'es' ? 'S√≠guenos' : 
                  language === 'en' ? 'Follow Us' : 
                  'Suivez-nous')}
              </h5>
              <div class="flex flex-col space-y-2">
                <a href={globalConfig?.social?.company?.youtube || "https://www.youtube.com/@clicinmobiliaria"} target="_blank" rel="noopener" class="flex items-center gap-2 text-gray-400 hover:text-red-500 transition-colors text-sm">
                  <i class="fab fa-youtube w-4 h-4"></i>
                  <span>
                    {language === 'es' && `YouTube - ${globalConfig?.seo?.youtube_subscribers || '200K+'} suscriptores`}
                    {language === 'en' && `YouTube - ${globalConfig?.seo?.youtube_subscribers || '200K+'} subscribers`}
                    {language === 'fr' && `YouTube - ${globalConfig?.seo?.youtube_subscribers || '200K+'} abonn√©s`}
                  </span>
                </a>
                <a href={globalConfig?.social?.company?.instagram_url || "https://www.instagram.com/clic.do/"} target="_blank" rel="noopener" class="flex items-center gap-2 text-gray-400 hover:text-pink-500 transition-colors text-sm">
                  <i class="fab fa-instagram w-4 h-4"></i>
                  <span>Instagram - @clic.do</span>
                </a>
                <a href={globalConfig?.social?.founder?.instagram_url || "https://www.instagram.com/renecastillotv/"} target="_blank" rel="noopener" class="flex items-center gap-2 text-gray-400 hover:text-pink-500 transition-colors text-sm">
                  <i class="fab fa-instagram w-4 h-4"></i>
                  <span>Instagram - @renecastillotv</span>
                </a>
                <a href={globalConfig?.social?.company?.linkedin || "https://www.linkedin.com/company/clic-inmobiliaria/"} target="_blank" rel="noopener" class="flex items-center gap-2 text-gray-400 hover:text-blue-500 transition-colors text-sm">
                  <i class="fab fa-linkedin w-4 h-4"></i>
                  <span>
                    {language === 'es' ? 'LinkedIn Corporativo' : 
                     language === 'en' ? 'Corporate LinkedIn' : 
                     'LinkedIn Corporatif'}
                  </span>
                </a>
              </div>
            </div>
          </div>
          
        </div>
        
        <!-- Trust Signals + Copyright - Din√°mico -->
        <div class="border-t border-gray-700 mt-12 pt-8">
          <div class="flex flex-col md:flex-row justify-between items-center gap-4">
            <div class="flex flex-wrap items-center gap-6 text-gray-400 text-sm">
              <span class="flex items-center gap-2">
                <i class="fas fa-shield-alt w-4 h-4 text-[#f04e00]"></i>
                {language === 'es' ? `Empresa Constituida ${globalConfig?.legal?.founded || '2022'}` : 
                 language === 'en' ? `Company Founded ${globalConfig?.legal?.founded || '2022'}` : 
                 `Entreprise Fond√©e ${globalConfig?.legal?.founded || '2022'}`}
              </span>
              <span class="flex items-center gap-2">
                <i class="fas fa-user-tie w-4 h-4 text-[#f04e00]"></i>
                {language === 'es' ? `Ren√©: ${globalConfig?.team?.founder_experience || '6 a√±os en Inmobiliaria'}` : 
                 language === 'en' ? `Ren√©: ${globalConfig?.team?.founder_experience || '6 years in Real Estate'}` : 
                 `Ren√©: ${globalConfig?.team?.founder_experience || '6 ans en Immobilier'}`}
              </span>
              <span class="flex items-center gap-2">
                <i class="fas fa-users w-4 h-4 text-[#f04e00]"></i>
                {language === 'es' ? `Equipo ${globalConfig?.team?.team_experience || '+10 a√±os experiencia'}` : 
                 language === 'en' ? `Team ${globalConfig?.team?.team_experience || '+10 years experience'}` : 
                 `√âquipe ${globalConfig?.team?.team_experience || '+10 ans d\'exp√©rience'}`}
              </span>
              <span class="flex items-center gap-2">
                <i class="fas fa-star w-4 h-4 text-[#f04e00]"></i>
                {language === 'es' ? `${globalConfig?.seo?.company_rating || '4.9/5'} Calificaci√≥n Cliente` : 
                 language === 'en' ? `${globalConfig?.seo?.company_rating || '4.9/5'} Client Rating` : 
                 `${globalConfig?.seo?.company_rating || '4.9/5'} √âvaluation Client`}
              </span>
            </div>
            <div class="text-gray-400 text-sm">
              {globalConfig?.translations?.footer?.rights || 
               (language === 'es' ? '¬© 2024 CLIC Inmobiliaria SRL. Todos los derechos reservados.' : 
                language === 'en' ? '¬© 2024 CLIC Inmobiliaria SRL. All rights reserved.' : 
                '¬© 2024 CLIC Inmobiliaria SRL. Tous droits r√©serv√©s.')}
            </div>
          </div>
        </div>
      </div>
    </footer>
  </body>
</html>

<style is:global>
  @import '../styles/global.css';
  
  body {
    font-family: 'Inter', sans-serif;
  }
</style>