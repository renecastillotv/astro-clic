---
// src/components/property/PropertySimilar.astro - OPTIMIZED VERSION
// Usa datos display-ready de la edge function, elimina procesamiento redundante

export interface Props {
  data: any;
  language?: string;
}

const { data, language } = Astro.props;

// Try to get language from multiple sources
const currentLanguage = language || 
                       data.language || 
                       data.globalConfig?.language || 
                       'es';

// Multilingual translations for UI elements
const translations = {
  es: {
    title: 'Propiedades Similares'
  },
  en: {
    title: 'Similar Properties'
  },
  fr: {
    title: 'Propriétés Similaires'
  }
};

const t = translations[currentLanguage] || translations.es;

// ===== USAR DATOS DIRECTOS DE LA EDGE FUNCTION =====
// La edge function ya procesó todo: precios, operaciones, URLs, multilenguaje

const similarProperties = data.similarProperties || [];
const hasSimilarProperties = data.hasSimilarProperties || similarProperties.length > 0;

// Helper function para limpiar imagen URL si es necesario
function getCleanImageUrl(imageUrl) {
  if (!imageUrl) return '/images/placeholder-property.jpg';
  
  // Si la imagen contiene _small., intentar upgrade a _large.
  if (imageUrl.includes('_small.')) {
    return imageUrl.replace('_small.', '_large.');
  }
  
  return imageUrl;
}

// Procesar solo lo mínimo necesario para UI
const processedSimilarProperties = similarProperties.map(property => ({
  // Usar datos ya procesados por la edge function
  id: property.id,
  title_display: property.title_display || property.name || 'Propiedad',
  price_display: property.price_display || 'Consultar',
  operation_display: property.operation_display || 'Venta',
  category_display: property.category_display || property.property_categories?.name || 'Propiedad',
  location_display: property.location_display || property.sectors?.name || property.cities?.name || '',
  url: property.url || '#',
  
  // Procesar imagen con upgrade a large
  main_image_url: getCleanImageUrl(property.main_image_url),
  
  // Características básicas
  bedrooms: property.bedrooms || 0,
  bathrooms: property.bathrooms || 0,
  built_area: property.built_area || 0,
  parking_spots: property.parking_spots || 0,
  
  // Metadatos de la edge function
  relation_type: property.relation_type || 'unknown',
  relation_source: property.relation_source || 'algorithm'
}));

console.log('PropertySimilar Debug:', {
  language: currentLanguage,
  totalSimilarProperties: similarProperties.length,
  processedCount: processedSimilarProperties.length,
  hasSimilarProperties,
  firstPropertyData: processedSimilarProperties[0] ? {
    title: processedSimilarProperties[0].title_display,
    price: processedSimilarProperties[0].price_display,
    operation: processedSimilarProperties[0].operation_display,
    url: processedSimilarProperties[0].url,
    image: processedSimilarProperties[0].main_image_url,
    relation_type: processedSimilarProperties[0].relation_type
  } : null
});
---

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .ribbon {
    position: absolute;
    top: 0;
    right: 0;
    background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%);
    color: white;
    padding: 4px 12px 4px 8px;
    font-size: 0.75rem;
    font-weight: 500;
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    border-bottom-left-radius: 2px;
    z-index: 10;
  }
</style>

<!-- Propiedades Similares -->
{hasSimilarProperties && processedSimilarProperties.length > 0 && (
  <div class="space-y-4">
    <div class="flex items-center justify-between">
      <h2 class="text-2xl font-bold text-gray-900 border-b-2 border-[#f04e00] pb-2 inline-block">
        {t.title}
      </h2>
      
      <!-- Debug info (remover en producción) -->
      <div class="text-xs text-gray-500">
        {processedSimilarProperties.length} encontradas
      </div>
    </div>
    
    <!-- Grid 2 columnas compacto -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-3">
      {processedSimilarProperties.slice(0, 6).map((similar) => (
        <a 
          href={similar.url.startsWith('/') ? similar.url : `/${similar.url}`}
          class="group bg-white rounded-lg shadow-sm hover:shadow-lg transition-all duration-300 overflow-hidden border border-gray-200 hover:border-[#f04e00]/40 hover:shadow-[#f04e00]/10 flex h-28"
        >
          <!-- Imagen compacta -->
          <div class="relative w-32 flex-shrink-0 overflow-hidden">
            <img 
              src={similar.main_image_url}
              alt={similar.title_display}
              class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
              loading="lazy"
              onerror="this.src='/images/placeholder-property.jpg'"
            />
            <!-- Overlay de imagen con gradiente sutil -->
            <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
          </div>
          
          <!-- Contenido ultra compacto -->
          <div class="flex-1 p-3 flex flex-col justify-between min-w-0 relative">
            <!-- Badge ribbon integrado -->
            <div class="ribbon">
              {similar.operation_display}
            </div>
            
            <!-- Precio (ya formateado por edge function) -->
            <div class="mb-1">
              <span class="text-lg font-bold text-[#f04e00] leading-none group-hover:text-[#e03400] transition-colors duration-300">
                {similar.price_display || 'Consultar'}
              </span>
            </div>
            
            <!-- Título (ya traducido por edge function) -->
            <h3 class="text-sm font-medium text-gray-900 mb-1 line-clamp-2 group-hover:text-[#f04e00] transition-colors duration-300 leading-tight">
              {similar.title_display}
            </h3>
            
            <!-- Ubicación -->
            {similar.location_display && (
              <div class="flex items-center gap-1 mb-1">
                <i class="fas fa-map-marker-alt text-gray-500 text-xs"></i>
                <span class="text-xs text-gray-600 truncate">{similar.location_display}</span>
              </div>
            )}
            
            <!-- Características en línea horizontal -->
            <div class="flex items-center gap-3 text-xs text-gray-600">
              {similar.bedrooms > 0 && (
                <div class="flex items-center gap-1">
                  <i class="fas fa-bed text-gray-500 text-xs"></i>
                  <span class="font-medium text-gray-700">{similar.bedrooms}</span>
                </div>
              )}
              
              {similar.bathrooms > 0 && (
                <div class="flex items-center gap-1">
                  <i class="fas fa-bath text-gray-500 text-xs"></i>
                  <span class="font-medium text-gray-700">{similar.bathrooms}</span>
                </div>
              )}
              
              {similar.parking_spots > 0 && (
                <div class="flex items-center gap-1">
                  <i class="fas fa-car text-gray-500 text-xs"></i>
                  <span class="font-medium text-gray-700">{similar.parking_spots}</span>
                </div>
              )}
              
              {similar.built_area > 0 && (
                <div class="flex items-center gap-1">
                  <i class="fas fa-th-large text-gray-500 text-xs"></i>
                  <span class="font-medium text-gray-700">{similar.built_area}m²</span>
                </div>
              )}
            </div>
            

          </div>
        </a>
      ))}
    </div>
    
    <!-- Footer con información adicional -->
    {processedSimilarProperties.length > 6 && (
      <div class="text-center pt-2">
        <p class="text-sm text-gray-600">
          Mostrando 6 de {processedSimilarProperties.length} propiedades similares
        </p>
      </div>
    )}
  </div>
)}